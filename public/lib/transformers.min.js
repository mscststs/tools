var e,t,n={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":
  /*!****************************************************************************!*\
    !*** ./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm ***!
    \****************************************************************************/(e,t,n)=>{e.exports=n.p+"ort-wasm-simd-threaded.jsep.wasm"},"?2ce3":
  /*!**********************************!*\
    !*** onnxruntime-node (ignored) ***!
    \**********************************/()=>{},"?7a2c":
  /*!********************!*\
    !*** fs (ignored) ***!
    \********************/()=>{},"?a42a":
  /*!**********************!*\
    !*** path (ignored) ***!
    \**********************/()=>{},"?2b25":
  /*!***********************!*\
    !*** sharp (ignored) ***!
    \***********************/()=>{},"?569f":
  /*!********************!*\
    !*** fs (ignored) ***!
    \********************/()=>{},"?3f59":
  /*!**********************!*\
    !*** path (ignored) ***!
    \**********************/()=>{},"?154a":
  /*!*********************!*\
    !*** url (ignored) ***!
    \*********************/()=>{},"./node_modules/@huggingface/jinja/dist/index.js":
  /*!*******************************************************!*\
    !*** ./node_modules/@huggingface/jinja/dist/index.js ***!
    \*******************************************************/(e,t,n)=>{n.r(t),n.d(t,{Environment:()=>Y,Interpreter:()=>J,Template:()=>te,parse:()=>O,tokenize:()=>u});var r=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",NullLiteral:"NullLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator",Macro:"Macro",EndMacro:"EndMacro"}),s=Object.freeze({set:r.Set,for:r.For,in:r.In,is:r.Is,if:r.If,else:r.Else,endif:r.EndIf,elif:r.ElseIf,endfor:r.EndFor,and:r.And,or:r.Or,not:r.Not,"not in":r.NotIn,macro:r.Macro,endmacro:r.EndMacro,true:r.BooleanLiteral,false:r.BooleanLiteral,none:r.NullLiteral,True:r.BooleanLiteral,False:r.BooleanLiteral,None:r.NullLiteral}),o=class{constructor(e,t){this.value=e,this.type=t}};function i(e){return/\w/.test(e)}function a(e){return/[0-9]/.test(e)}var l=[["{%",r.OpenStatement],["%}",r.CloseStatement],["{{",r.OpenExpression],["}}",r.CloseExpression],["(",r.OpenParen],[")",r.CloseParen],["{",r.OpenCurlyBracket],["}",r.CloseCurlyBracket],["[",r.OpenSquareBracket],["]",r.CloseSquareBracket],[",",r.Comma],[".",r.Dot],[":",r.Colon],["|",r.Pipe],["<=",r.ComparisonBinaryOperator],[">=",r.ComparisonBinaryOperator],["==",r.ComparisonBinaryOperator],["!=",r.ComparisonBinaryOperator],["<",r.ComparisonBinaryOperator],[">",r.ComparisonBinaryOperator],["+",r.AdditiveBinaryOperator],["-",r.AdditiveBinaryOperator],["*",r.MultiplicativeBinaryOperator],["/",r.MultiplicativeBinaryOperator],["%",r.MultiplicativeBinaryOperator],["=",r.Equals]],d=new Map([["n","\n"],["t","\t"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function u(e,t={}){const n=[],u=function(e,t={}){return e.endsWith("\n")&&(e=e.slice(0,-1)),e=e.replace(/{#.*?#}/gs,"{##}"),t.lstrip_blocks&&(e=e.replace(/^[ \t]*({[#%])/gm,"$1")),t.trim_blocks&&(e=e.replace(/([#%]})\n/g,"$1")),e.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}(e,t);let c=0;const p=e=>{let t="";for(;e(u[c]);)if("\\"!==u[c]){if(t+=u[c++],c>=u.length)throw new SyntaxError("Unexpected end of input")}else{if(++c,c>=u.length)throw new SyntaxError("Unexpected end of input");const e=u[c++],n=d.get(e);if(void 0===n)throw new SyntaxError(`Unexpected escaped character: ${e}`);t+=n}return t};e:for(;c<u.length;){const e=n.at(-1)?.type;if(void 0===e||e===r.CloseStatement||e===r.CloseExpression){let e="";for(;c<u.length&&("{"!==u[c]||"%"!==u[c+1]&&"{"!==u[c+1]);)e+=u[c++];if(e.length>0){n.push(new o(e,r.Text));continue}}p((e=>/\s/.test(e)));const t=u[c];if("-"===t||"+"===t){const e=n.at(-1)?.type;if(e===r.Text||void 0===e)throw new SyntaxError(`Unexpected character: ${t}`);switch(e){case r.Identifier:case r.NumericLiteral:case r.BooleanLiteral:case r.NullLiteral:case r.StringLiteral:case r.CloseParen:case r.CloseSquareBracket:break;default:{++c;const e=p(a);n.push(new o(`${t}${e}`,e.length>0?r.NumericLiteral:r.UnaryOperator));continue}}}for(const[e,t]of l){if(u.slice(c,c+e.length)===e){n.push(new o(e,t)),c+=e.length;continue e}}if("'"!==t&&'"'!==t)if(a(t)){const e=p(a);n.push(new o(e,r.NumericLiteral))}else{if(!i(t))throw new SyntaxError(`Unexpected character: ${t}`);{const e=p(i),t=Object.hasOwn(s,e)?s[e]:r.Identifier;t===r.In&&n.at(-1)?.type===r.Not?(n.pop(),n.push(new o("not in",r.NotIn))):n.push(new o(e,t))}}else{++c;const e=p((e=>e!==t));n.push(new o(e,r.StringLiteral)),++c}}return n}var c=class{type="Statement"},p=class extends c{constructor(e){super(),this.body=e}type="Program"},h=class extends c{constructor(e,t,n){super(),this.test=e,this.body=t,this.alternate=n}type="If"},m=class extends c{constructor(e,t,n,r){super(),this.loopvar=e,this.iterable=t,this.body=n,this.defaultBlock=r}type="For"},f=class extends c{constructor(e,t){super(),this.assignee=e,this.value=t}type="Set"},g=class extends c{constructor(e,t,n){super(),this.name=e,this.args=t,this.body=n}type="Macro"},_=class extends c{type="Expression"},w=class extends _{constructor(e,t,n){super(),this.object=e,this.property=t,this.computed=n}type="MemberExpression"},y=class extends _{constructor(e,t){super(),this.callee=e,this.args=t}type="CallExpression"},b=class extends _{constructor(e){super(),this.value=e}type="Identifier"},v=class extends _{constructor(e){super(),this.value=e}type="Literal"},x=class extends v{type="NumericLiteral"},M=class extends v{type="StringLiteral"},T=class extends v{type="BooleanLiteral"},k=class extends v{type="NullLiteral"},$=class extends v{type="ArrayLiteral"},C=class extends v{type="TupleLiteral"},P=class extends v{type="ObjectLiteral"},S=class extends _{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}type="BinaryExpression"},E=class extends _{constructor(e,t){super(),this.operand=e,this.filter=t}type="FilterExpression"},F=class extends _{constructor(e,t){super(),this.iterable=e,this.test=t}type="SelectExpression"},A=class extends _{constructor(e,t,n){super(),this.operand=e,this.negate=t,this.test=n}type="TestExpression"},I=class extends _{constructor(e,t){super(),this.operator=e,this.argument=t}type="UnaryExpression"},z=class extends _{constructor(e=void 0,t=void 0,n=void 0){super(),this.start=e,this.stop=t,this.step=n}type="SliceExpression"},L=class extends _{constructor(e,t){super(),this.key=e,this.value=t}type="KeywordArgumentExpression"};function O(e){const t=new p([]);let n=0;function s(t,r){const s=e[n++];if(!s||s.type!==t)throw new Error(`Parser Error: ${r}. ${s.type} !== ${t}.`);return s}function o(){switch(e[n].type){case r.Text:return new M(s(r.Text,"Expected text token").value);case r.OpenStatement:return function(){let t;switch(s(r.OpenStatement,"Expected opening statement token"),e[n].type){case r.Set:++n,t=l(),s(r.CloseStatement,"Expected closing statement token");break;case r.If:++n,t=d(),s(r.OpenStatement,"Expected {% token"),s(r.EndIf,"Expected endif token"),s(r.CloseStatement,"Expected %} token");break;case r.Macro:++n,t=function(){const e=U();if("Identifier"!==e.type)throw new SyntaxError("Expected identifier following macro statement");const t=R();s(r.CloseStatement,"Expected closing statement token");const n=[];for(;i(r.OpenStatement,r.EndMacro);)n.push(o());return new g(e,t,n)}(),s(r.OpenStatement,"Expected {% token"),s(r.EndMacro,"Expected endmacro token"),s(r.CloseStatement,"Expected %} token");break;case r.For:++n,t=function(){const e=u(!0);if(!(e instanceof b||e instanceof C))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${e.type} instead`);s(r.In,"Expected `in` keyword following loop variable");const t=c();s(r.CloseStatement,"Expected closing statement token");const l=[];for(;i(r.OpenStatement,r.EndFor)&&i(r.OpenStatement,r.Else);)l.push(o());const d=[];if(a(r.OpenStatement,r.Else))for(++n,++n,s(r.CloseStatement,"Expected closing statement token");i(r.OpenStatement,r.EndFor);)d.push(o());return new m(e,t,l,d)}(),s(r.OpenStatement,"Expected {% token"),s(r.EndFor,"Expected endfor token"),s(r.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${e[n].type}`)}return t}();case r.OpenExpression:return function(){s(r.OpenExpression,"Expected opening expression token");const e=c();return s(r.CloseExpression,"Expected closing expression token"),e}();default:throw new SyntaxError(`Unexpected token type: ${e[n].type}`)}}function i(...t){return n+t.length<=e.length&&t.some(((t,r)=>t!==e[n+r].type))}function a(...t){return n+t.length<=e.length&&t.every(((t,r)=>t===e[n+r].type))}function l(){const e=c();if(a(r.Equals)){++n;const t=l();return new f(e,t)}return e}function d(){const t=c();s(r.CloseStatement,"Expected closing statement token");const i=[],l=[];for(;e[n]?.type!==r.OpenStatement||e[n+1]?.type!==r.ElseIf&&e[n+1]?.type!==r.Else&&e[n+1]?.type!==r.EndIf;)i.push(o());if(e[n]?.type===r.OpenStatement&&e[n+1]?.type!==r.EndIf)if(++n,a(r.ElseIf))s(r.ElseIf,"Expected elseif token"),l.push(d());else for(s(r.Else,"Expected else token"),s(r.CloseStatement,"Expected closing statement token");e[n]?.type!==r.OpenStatement||e[n+1]?.type!==r.EndIf;)l.push(o());return new h(t,i,l)}function u(e=!1){const t=e?U:c,s=[t()],o=a(r.Comma);for(;o&&(++n,s.push(t()),a(r.Comma)););return o?new C(s):s[0]}function c(){return function(){const e=_();if(a(r.If)){++n;const t=_();if(a(r.Else)){++n;const r=_();return new h(t,[e],[r])}return new F(e,t)}return e}()}function _(){let t=v();for(;a(r.Or);){const r=e[n];++n;const s=v();t=new S(r,t,s)}return t}function v(){let t=O();for(;a(r.And);){const r=e[n];++n;const s=O();t=new S(r,t,s)}return t}function O(){let t;for(;a(r.Not);){const r=e[n];++n;const s=O();t=new I(r,s)}return t??function(){let t=B();for(;a(r.ComparisonBinaryOperator)||a(r.In)||a(r.NotIn);){const r=e[n];++n;const s=B();t=new S(r,t,s)}return t}()}function B(){let t=V();for(;a(r.AdditiveBinaryOperator);){const r=e[n];++n;const s=V();t=new S(r,t,s)}return t}function D(){const t=function(){let t=U();for(;a(r.Dot)||a(r.OpenSquareBracket);){const o=e[n];let i;++n;const a=o.type!==r.Dot;if(a)i=j(),s(r.CloseSquareBracket,"Expected closing square bracket");else if(i=U(),"Identifier"!==i.type)throw new SyntaxError("Expected identifier following dot operator");t=new w(t,i,a)}return t}();return a(r.OpenParen)?N(t):t}function N(e){let t=new y(e,R());return a(r.OpenParen)&&(t=N(t)),t}function R(){s(r.OpenParen,"Expected opening parenthesis for arguments list");const e=function(){const e=[];for(;!a(r.CloseParen);){let t=c();if(a(r.Equals)){if(++n,!(t instanceof b))throw new SyntaxError("Expected identifier for keyword argument");const e=c();t=new L(t,e)}e.push(t),a(r.Comma)&&++n}return e}();return s(r.CloseParen,"Expected closing parenthesis for arguments list"),e}function j(){const e=[];let t=!1;for(;!a(r.CloseSquareBracket);)a(r.Colon)?(e.push(void 0),++n,t=!0):(e.push(c()),a(r.Colon)&&(++n,t=!0));if(0===e.length)throw new SyntaxError("Expected at least one argument for member/slice expression");if(t){if(e.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new z(...e)}return e[0]}function V(){let t=G();for(;a(r.MultiplicativeBinaryOperator);){const r=e[n];++n;const s=G();t=new S(r,t,s)}return t}function G(){let e=function(){let e=D();for(;a(r.Pipe);){++n;let t=U();if(!(t instanceof b))throw new SyntaxError("Expected identifier for the filter");a(r.OpenParen)&&(t=N(t)),e=new E(e,t)}return e}();for(;a(r.Is);){++n;const t=a(r.Not);t&&++n;let s=U();if(s instanceof T?s=new b(s.value.toString()):s instanceof k&&(s=new b("none")),!(s instanceof b))throw new SyntaxError("Expected identifier for the test");e=new A(e,t,s)}return e}function U(){const t=e[n];switch(t.type){case r.NumericLiteral:return++n,new x(Number(t.value));case r.StringLiteral:return++n,new M(t.value);case r.BooleanLiteral:return++n,new T("true"===t.value.toLowerCase());case r.NullLiteral:return++n,new k(null);case r.Identifier:return++n,new b(t.value);case r.OpenParen:{++n;const t=u();if(e[n].type!==r.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${e[n].type} instead`);return++n,t}case r.OpenSquareBracket:{++n;const e=[];for(;!a(r.CloseSquareBracket);)e.push(c()),a(r.Comma)&&++n;return++n,new $(e)}case r.OpenCurlyBracket:{++n;const e=new Map;for(;!a(r.CloseCurlyBracket);){const t=c();s(r.Colon,"Expected colon between key and value in object literal");const o=c();e.set(t,o),a(r.Comma)&&++n}return++n,new P(e)}default:throw new SyntaxError(`Unexpected token: ${t.type}`)}}for(;n<e.length;)t.body.push(o());return t}function B(e,t,n=1){void 0===t&&(t=e,e=0);const r=[];for(let s=e;s<t;s+=n)r.push(s);return r}function D(e,t,n,r=1){const s=Math.sign(r);s>=0?(t=(t??=0)<0?Math.max(e.length+t,0):Math.min(t,e.length),n=(n??=e.length)<0?Math.max(e.length+n,0):Math.min(n,e.length)):(t=(t??=e.length-1)<0?Math.max(e.length+t,-1):Math.min(t,e.length-1),n=(n??=-1)<-1?Math.max(e.length+n,-1):Math.min(n,e.length-1));const o=[];for(let i=t;s*i<s*n;i+=r)o.push(e[i]);return o}function N(e){return e.replace(/\b\w/g,(e=>e.toUpperCase()))}var R=class{type="RuntimeValue";value;builtins=new Map;constructor(e=void 0){this.value=e}__bool__(){return new G(!!this.value)}},j=class extends R{type="NumericValue"},V=class extends R{type="StringValue";builtins=new Map([["upper",new X((()=>new V(this.value.toUpperCase())))],["lower",new X((()=>new V(this.value.toLowerCase())))],["strip",new X((()=>new V(this.value.trim())))],["title",new X((()=>new V(N(this.value))))],["length",new j(this.value.length)],["rstrip",new X((()=>new V(this.value.trimEnd())))],["lstrip",new X((()=>new V(this.value.trimStart())))]])},G=class extends R{type="BooleanValue"},U=class extends R{type="ObjectValue";__bool__(){return new G(this.value.size>0)}builtins=new Map([["get",new X((([e,t])=>{if(!(e instanceof V))throw new Error(`Object key must be a string: got ${e.type}`);return this.value.get(e.value)??t??new Q}))],["items",new X((()=>new W(Array.from(this.value.entries()).map((([e,t])=>new W([new V(e),t]))))))]])},q=class extends U{type="KeywordArgumentsValue"},W=class extends R{type="ArrayValue";builtins=new Map([["length",new j(this.value.length)]]);__bool__(){return new G(this.value.length>0)}},H=class extends W{type="TupleValue"},X=class extends R{type="FunctionValue"},Q=class extends R{type="NullValue"},K=class extends R{type="UndefinedValue"},Y=class{constructor(e){this.parent=e}variables=new Map([["namespace",new X((e=>{if(0===e.length)return new U(new Map);if(1!==e.length||!(e[0]instanceof U))throw new Error("`namespace` expects either zero arguments or a single object argument");return e[0]}))]]);tests=new Map([["boolean",e=>"BooleanValue"===e.type],["callable",e=>e instanceof X],["odd",e=>{if("NumericValue"!==e.type)throw new Error(`Cannot apply test "odd" to type: ${e.type}`);return e.value%2!=0}],["even",e=>{if("NumericValue"!==e.type)throw new Error(`Cannot apply test "even" to type: ${e.type}`);return e.value%2==0}],["false",e=>"BooleanValue"===e.type&&!e.value],["true",e=>"BooleanValue"===e.type&&e.value],["none",e=>"NullValue"===e.type],["string",e=>"StringValue"===e.type],["number",e=>"NumericValue"===e.type],["integer",e=>"NumericValue"===e.type&&Number.isInteger(e.value)],["iterable",e=>"ArrayValue"===e.type||"StringValue"===e.type],["mapping",e=>"ObjectValue"===e.type],["lower",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toLowerCase()}],["upper",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toUpperCase()}],["none",e=>"NullValue"===e.type],["defined",e=>"UndefinedValue"!==e.type],["undefined",e=>"UndefinedValue"===e.type],["equalto",(e,t)=>e.value===t.value],["eq",(e,t)=>e.value===t.value]]);set(e,t){return this.declareVariable(e,Z(t))}declareVariable(e,t){if(this.variables.has(e))throw new SyntaxError(`Variable already declared: ${e}`);return this.variables.set(e,t),t}setVariable(e,t){return this.variables.set(e,t),t}resolve(e){if(this.variables.has(e))return this;if(this.parent)return this.parent.resolve(e);throw new Error(`Unknown variable: ${e}`)}lookupVariable(e){try{return this.resolve(e).variables.get(e)??new K}catch{return new K}}},J=class{global;constructor(e){this.global=e??new Y}run(e){return this.evaluate(e,this.global)}evaluateBinaryExpression(e,t){const n=this.evaluate(e.left,t);switch(e.operator.value){case"and":return n.__bool__().value?this.evaluate(e.right,t):n;case"or":return n.__bool__().value?n:this.evaluate(e.right,t)}const r=this.evaluate(e.right,t);switch(e.operator.value){case"==":return new G(n.value==r.value);case"!=":return new G(n.value!=r.value)}if(n instanceof K||r instanceof K)throw new Error("Cannot perform operation on undefined values");if(n instanceof Q||r instanceof Q)throw new Error("Cannot perform operation on null values");if(n instanceof j&&r instanceof j)switch(e.operator.value){case"+":return new j(n.value+r.value);case"-":return new j(n.value-r.value);case"*":return new j(n.value*r.value);case"/":return new j(n.value/r.value);case"%":return new j(n.value%r.value);case"<":return new G(n.value<r.value);case">":return new G(n.value>r.value);case">=":return new G(n.value>=r.value);case"<=":return new G(n.value<=r.value)}else if(n instanceof W&&r instanceof W){if("+"===e.operator.value)return new W(n.value.concat(r.value))}else if(r instanceof W){const t=void 0!==r.value.find((e=>e.value===n.value));switch(e.operator.value){case"in":return new G(t);case"not in":return new G(!t)}}if((n instanceof V||r instanceof V)&&"+"===e.operator.value)return new V(n.value.toString()+r.value.toString());if(n instanceof V&&r instanceof V)switch(e.operator.value){case"in":return new G(r.value.includes(n.value));case"not in":return new G(!r.value.includes(n.value))}if(n instanceof V&&r instanceof U)switch(e.operator.value){case"in":return new G(r.value.has(n.value));case"not in":return new G(!r.value.has(n.value))}throw new SyntaxError(`Unknown operator "${e.operator.value}" between ${n.type} and ${r.type}`)}evaluateArguments(e,t){const n=[],r=new Map;for(const s of e)if("KeywordArgumentExpression"===s.type){const e=s;r.set(e.key.value,this.evaluate(e.value,t))}else{if(r.size>0)throw new Error("Positional arguments must come before keyword arguments");n.push(this.evaluate(s,t))}return[n,r]}evaluateFilterExpression(e,t){const n=this.evaluate(e.operand,t);if("Identifier"===e.filter.type){const t=e.filter;if("tojson"===t.value)return new V(ee(n));if(n instanceof W)switch(t.value){case"list":return n;case"first":return n.value[0];case"last":return n.value[n.value.length-1];case"length":return new j(n.value.length);case"reverse":return new W(n.value.reverse());case"sort":return new W(n.value.sort(((e,t)=>{if(e.type!==t.type)throw new Error(`Cannot compare different types: ${e.type} and ${t.type}`);switch(e.type){case"NumericValue":return e.value-t.value;case"StringValue":return e.value.localeCompare(t.value);default:throw new Error(`Cannot compare type: ${e.type}`)}})));default:throw new Error(`Unknown ArrayValue filter: ${t.value}`)}else if(n instanceof V)switch(t.value){case"length":return new j(n.value.length);case"upper":return new V(n.value.toUpperCase());case"lower":return new V(n.value.toLowerCase());case"title":return new V(N(n.value));case"capitalize":return new V(n.value.charAt(0).toUpperCase()+n.value.slice(1));case"trim":return new V(n.value.trim());case"indent":return new V(n.value.split("\n").map(((e,t)=>0===t||0===e.length?e:"    "+e)).join("\n"));case"string":return n;default:throw new Error(`Unknown StringValue filter: ${t.value}`)}else{if(n instanceof j){if("abs"===t.value)return new j(Math.abs(n.value));throw new Error(`Unknown NumericValue filter: ${t.value}`)}if(n instanceof U)switch(t.value){case"items":return new W(Array.from(n.value.entries()).map((([e,t])=>new W([new V(e),t]))));case"length":return new j(n.value.size);default:throw new Error(`Unknown ObjectValue filter: ${t.value}`)}}throw new Error(`Cannot apply filter "${t.value}" to type: ${n.type}`)}if("CallExpression"===e.filter.type){const r=e.filter;if("Identifier"!==r.callee.type)throw new Error(`Unknown filter: ${r.callee.type}`);const s=r.callee.value;if("tojson"===s){const[,e]=this.evaluateArguments(r.args,t),s=e.get("indent")??new Q;if(!(s instanceof j||s instanceof Q))throw new Error("If set, indent must be a number");return new V(ee(n,s.value))}if(n instanceof W){switch(s){case"selectattr":case"rejectattr":{const e="selectattr"===s;if(n.value.some((e=>!(e instanceof U))))throw new Error(`\`${s}\` can only be applied to array of objects`);if(r.args.some((e=>"StringLiteral"!==e.type)))throw new Error(`arguments of \`${s}\` must be strings`);const[o,i,a]=r.args.map((e=>this.evaluate(e,t)));let l;if(i){const e=t.tests.get(i.value);if(!e)throw new Error(`Unknown test: ${i.value}`);l=e}else l=(...e)=>e[0].__bool__().value;const d=n.value.filter((t=>{const n=t.value.get(o.value),r=!!n&&l(n,a);return e?r:!r}));return new W(d)}case"map":{const[,e]=this.evaluateArguments(r.args,t);if(e.has("attribute")){const t=e.get("attribute");if(!(t instanceof V))throw new Error("attribute must be a string");const r=e.get("default"),s=n.value.map((e=>{if(!(e instanceof U))throw new Error("items in map must be an object");return e.value.get(t.value)??r??new K}));return new W(s)}throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${s}`)}if(n instanceof V){if("indent"===s){const[e,s]=this.evaluateArguments(r.args,t),o=e.at(0)??s.get("width")??new j(4);if(!(o instanceof j))throw new Error("width must be a number");const i=e.at(1)??s.get("first")??new G(!1),a=e.at(2)??s.get("blank")??new G(!1),l=n.value.split("\n"),d=" ".repeat(o.value),u=l.map(((e,t)=>!i.value&&0===t||!a.value&&0===e.length?e:d+e));return new V(u.join("\n"))}throw new Error(`Unknown StringValue filter: ${s}`)}throw new Error(`Cannot apply filter "${s}" to type: ${n.type}`)}throw new Error(`Unknown filter: ${e.filter.type}`)}evaluateTestExpression(e,t){const n=this.evaluate(e.operand,t),r=t.tests.get(e.test.value);if(!r)throw new Error(`Unknown test: ${e.test.value}`);const s=r(n);return new G(e.negate?!s:s)}evaluateUnaryExpression(e,t){const n=this.evaluate(e.argument,t);if("not"===e.operator.value)return new G(!n.value);throw new SyntaxError(`Unknown operator: ${e.operator.value}`)}evalProgram(e,t){return this.evaluateBlock(e.body,t)}evaluateBlock(e,t){let n="";for(const r of e){const e=this.evaluate(r,t);"NullValue"!==e.type&&"UndefinedValue"!==e.type&&(n+=e.value)}return new V(n)}evaluateIdentifier(e,t){return t.lookupVariable(e.value)}evaluateCallExpression(e,t){const[n,r]=this.evaluateArguments(e.args,t);r.size>0&&n.push(new q(r));const s=this.evaluate(e.callee,t);if("FunctionValue"!==s.type)throw new Error(`Cannot call something that is not a function: got ${s.type}`);return s.value(n,t)}evaluateSliceExpression(e,t,n){if(!(e instanceof W||e instanceof V))throw new Error("Slice object must be an array or string");const r=this.evaluate(t.start,n),s=this.evaluate(t.stop,n),o=this.evaluate(t.step,n);if(!(r instanceof j||r instanceof K))throw new Error("Slice start must be numeric or undefined");if(!(s instanceof j||s instanceof K))throw new Error("Slice stop must be numeric or undefined");if(!(o instanceof j||o instanceof K))throw new Error("Slice step must be numeric or undefined");return e instanceof W?new W(D(e.value,r.value,s.value,o.value)):new V(D(Array.from(e.value),r.value,s.value,o.value).join(""))}evaluateMemberExpression(e,t){const n=this.evaluate(e.object,t);let r,s;if(e.computed){if("SliceExpression"===e.property.type)return this.evaluateSliceExpression(n,e.property,t);r=this.evaluate(e.property,t)}else r=new V(e.property.value);if(n instanceof U){if(!(r instanceof V))throw new Error(`Cannot access property with non-string: got ${r.type}`);s=n.value.get(r.value)??n.builtins.get(r.value)}else if(n instanceof W||n instanceof V)if(r instanceof j)s=n.value.at(r.value),n instanceof V&&(s=new V(n.value.at(r.value)));else{if(!(r instanceof V))throw new Error(`Cannot access property with non-string/non-number: got ${r.type}`);s=n.builtins.get(r.value)}else{if(!(r instanceof V))throw new Error(`Cannot access property with non-string: got ${r.type}`);s=n.builtins.get(r.value)}return s instanceof R?s:new K}evaluateSet(e,t){const n=this.evaluate(e.value,t);if("Identifier"===e.assignee.type){const r=e.assignee.value;t.setVariable(r,n)}else{if("MemberExpression"!==e.assignee.type)throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(e.assignee)}`);{const r=e.assignee,s=this.evaluate(r.object,t);if(!(s instanceof U))throw new Error("Cannot assign to member of non-object");if("Identifier"!==r.property.type)throw new Error("Cannot assign to member with non-identifier property");s.value.set(r.property.value,n)}}return new Q}evaluateIf(e,t){const n=this.evaluate(e.test,t);return this.evaluateBlock(n.__bool__().value?e.body:e.alternate,t)}evaluateFor(e,t){const n=new Y(t);let r,s;if("SelectExpression"===e.iterable.type){const t=e.iterable;s=this.evaluate(t.iterable,n),r=t.test}else s=this.evaluate(e.iterable,n);if(!(s instanceof W))throw new Error(`Expected iterable type in for loop: got ${s.type}`);const o=[],i=[];for(let t=0;t<s.value.length;++t){const a=new Y(n),l=s.value[t];let d;if("Identifier"===e.loopvar.type)d=t=>t.setVariable(e.loopvar.value,l);else{if("TupleLiteral"!==e.loopvar.type)throw new Error(`Invalid loop variable(s): ${e.loopvar.type}`);{const t=e.loopvar;if("ArrayValue"!==l.type)throw new Error(`Cannot unpack non-iterable type: ${l.type}`);const n=l;if(t.value.length!==n.value.length)throw new Error(`Too ${t.value.length>n.value.length?"few":"many"} items to unpack`);d=e=>{for(let r=0;r<t.value.length;++r){if("Identifier"!==t.value[r].type)throw new Error(`Cannot unpack non-identifier type: ${t.value[r].type}`);e.setVariable(t.value[r].value,n.value[r])}}}}if(r){d(a);if(!this.evaluate(r,a).__bool__().value)continue}o.push(l),i.push(d)}let a="",l=!0;for(let t=0;t<o.length;++t){const r=new Map([["index",new j(t+1)],["index0",new j(t)],["revindex",new j(o.length-t)],["revindex0",new j(o.length-t-1)],["first",new G(0===t)],["last",new G(t===o.length-1)],["length",new j(o.length)],["previtem",t>0?o[t-1]:new K],["nextitem",t<o.length-1?o[t+1]:new K]]);n.setVariable("loop",new U(r)),i[t](n);a+=this.evaluateBlock(e.body,n).value,l=!1}if(l){a+=this.evaluateBlock(e.defaultBlock,n).value}return new V(a)}evaluateMacro(e,t){return t.setVariable(e.name.value,new X(((t,n)=>{const r=new Y(n);let s;t=t.slice(),"KeywordArgumentsValue"===t.at(-1)?.type&&(s=t.pop());for(let n=0;n<e.args.length;++n){const o=e.args[n],i=t[n];if("Identifier"===o.type){const e=o;if(!i)throw new Error(`Missing positional argument: ${e.value}`);r.setVariable(e.value,i)}else{if("KeywordArgumentExpression"!==o.type)throw new Error(`Unknown argument type: ${o.type}`);{const e=o,t=i??s?.value.get(e.key.value)??this.evaluate(e.value,r);r.setVariable(e.key.value,t)}}}return this.evaluateBlock(e.body,r)}))),new Q}evaluate(e,t){if(void 0===e)return new K;switch(e.type){case"Program":return this.evalProgram(e,t);case"Set":return this.evaluateSet(e,t);case"If":return this.evaluateIf(e,t);case"For":return this.evaluateFor(e,t);case"Macro":return this.evaluateMacro(e,t);case"NumericLiteral":return new j(Number(e.value));case"StringLiteral":return new V(e.value);case"BooleanLiteral":return new G(e.value);case"NullLiteral":return new Q(e.value);case"ArrayLiteral":return new W(e.value.map((e=>this.evaluate(e,t))));case"TupleLiteral":return new H(e.value.map((e=>this.evaluate(e,t))));case"ObjectLiteral":{const n=new Map;for(const[r,s]of e.value){const e=this.evaluate(r,t);if(!(e instanceof V))throw new Error(`Object keys must be strings: got ${e.type}`);n.set(e.value,this.evaluate(s,t))}return new U(n)}case"Identifier":return this.evaluateIdentifier(e,t);case"CallExpression":return this.evaluateCallExpression(e,t);case"MemberExpression":return this.evaluateMemberExpression(e,t);case"UnaryExpression":return this.evaluateUnaryExpression(e,t);case"BinaryExpression":return this.evaluateBinaryExpression(e,t);case"FilterExpression":return this.evaluateFilterExpression(e,t);case"TestExpression":return this.evaluateTestExpression(e,t);default:throw new SyntaxError(`Unknown node type: ${e.type}`)}}};function Z(e){switch(typeof e){case"number":return new j(e);case"string":return new V(e);case"boolean":return new G(e);case"undefined":return new K;case"object":return null===e?new Q:Array.isArray(e)?new W(e.map(Z)):new U(new Map(Object.entries(e).map((([e,t])=>[e,Z(t)]))));case"function":return new X(((t,n)=>Z(e(...t.map((e=>e.value)))??null)));default:throw new Error(`Cannot convert to runtime value: ${e}`)}}function ee(e,t,n){const r=n??0;switch(e.type){case"NullValue":case"UndefinedValue":return"null";case"NumericValue":case"StringValue":case"BooleanValue":return JSON.stringify(e.value);case"ArrayValue":case"ObjectValue":{const n=t?" ".repeat(t):"",s="\n"+n.repeat(r),o=s+n;if("ArrayValue"===e.type){const n=e.value.map((e=>ee(e,t,r+1)));return t?`[${o}${n.join(`,${o}`)}${s}]`:`[${n.join(", ")}]`}{const n=Array.from(e.value.entries()).map((([e,n])=>{const s=`"${e}": ${ee(n,t,r+1)}`;return t?`${o}${s}`:s}));return t?`{${n.join(",")}${s}}`:`{${n.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${e.type}`)}}var te=class{parsed;constructor(e){const t=u(e,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=O(t)}render(e){const t=new Y;t.set("false",!1),t.set("true",!0),t.set("raise_exception",(e=>{throw new Error(e)})),t.set("range",B);for(const[n,r]of Object.entries(e))t.set(n,r);return new J(t).run(this.parsed).value}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":
  /*!******************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/backend-impl.js ***!
    \******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{registerBackend:()=>o,resolveBackendAndExecutionProviders:()=>a});const r=new Map,s=[],o=(e,t,n)=>{if(!t||"function"!=typeof t.init||"function"!=typeof t.createInferenceSessionHandler)throw new TypeError("not a valid backend");{const o=r.get(e);if(void 0===o)r.set(e,{backend:t,priority:n});else{if(o.priority>n)return;if(o.priority===n&&o.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${n}`)}if(n>=0){const t=s.indexOf(e);-1!==t&&s.splice(t,1);for(let t=0;t<s.length;t++)if(r.get(s[t]).priority<=n)return void s.splice(t,0,e);s.push(e)}}},i=async e=>{const t=r.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{const n=!!t.initPromise;try{return n||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(e){return n||(t.error=`${e}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},a=async e=>{const t=e.executionProviders||[],n=t.map((e=>"string"==typeof e?e:e.name)),r=0===n.length?s:n;let o;const a=[],l=new Set;for(const e of r){const t=await i(e);"string"==typeof t?a.push({name:e,err:t}):(o||(o=t),o===t&&l.add(e))}if(!o)throw new Error(`no available backend found. ERR: ${a.map((e=>`[${e.name}] ${e.err}`)).join(", ")}`);for(const{name:e,err:t}of a)n.includes(e)&&console.warn(`removing requested execution provider "${e}" from session options because it is not available: ${t}`);const d=t.filter((e=>l.has("string"==typeof e?e:e.name)));return[o,new Proxy(e,{get:(e,t)=>"executionProviders"===t?d:Reflect.get(e,t)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":
  /*!*************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/backend.js ***!
    \*************************************************************/(e,t,n)=>{n.r(t),n.d(t,{registerBackend:()=>r.registerBackend});var r=n(/*! ./backend-impl.js */"./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":
  /*!**************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/env-impl.js ***!
    \**************************************************************/(e,t,n)=>{n.r(t),n.d(t,{env:()=>o});var r=n(/*! ./version.js */"./node_modules/onnxruntime-common/dist/esm/version.js");let s="warning";const o={wasm:{},webgl:{},webgpu:{},versions:{common:r.version},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);s=e}},get logLevel(){return s}};Object.defineProperty(o,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":
  /*!*********************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/env.js ***!
    \*********************************************************/(e,t,n)=>{n.r(t),n.d(t,{env:()=>r});const r=n(/*! ./env-impl.js */"./node_modules/onnxruntime-common/dist/esm/env-impl.js").env},"./node_modules/onnxruntime-common/dist/esm/index.js":
  /*!***********************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/index.js ***!
    \***********************************************************/(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>o.InferenceSession,TRACE:()=>a.TRACE,TRACE_FUNC_BEGIN:()=>a.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>a.TRACE_FUNC_END,Tensor:()=>i.Tensor,TrainingSession:()=>l.TrainingSession,env:()=>s.env,registerBackend:()=>r.registerBackend});var r=n(/*! ./backend.js */"./node_modules/onnxruntime-common/dist/esm/backend.js"),s=n(/*! ./env.js */"./node_modules/onnxruntime-common/dist/esm/env.js"),o=n(/*! ./inference-session.js */"./node_modules/onnxruntime-common/dist/esm/inference-session.js"),i=n(/*! ./tensor.js */"./node_modules/onnxruntime-common/dist/esm/tensor.js"),a=(n(/*! ./tensor-conversion.js */"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),n(/*! ./tensor-factory.js */"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js"),n(/*! ./trace.js */"./node_modules/onnxruntime-common/dist/esm/trace.js")),l=(n(/*! ./onnx-model.js */"./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),n(/*! ./onnx-value.js */"./node_modules/onnxruntime-common/dist/esm/onnx-value.js"),n(/*! ./training-session.js */"./node_modules/onnxruntime-common/dist/esm/training-session.js"))},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":
  /*!****************************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js ***!
    \****************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>i});var r=n(/*! ./backend-impl.js */"./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),s=n(/*! ./tensor.js */"./node_modules/onnxruntime-common/dist/esm/tensor.js"),o=n(/*! ./trace.js */"./node_modules/onnxruntime-common/dist/esm/trace.js");class i{constructor(e){this.handler=e}async run(e,t,n){(0,o.TRACE_FUNC_BEGIN)();const r={};let i={};if("object"!=typeof e||null===e||e instanceof s.Tensor||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof s.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(const e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)i=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else{let e=!1;const o=Object.getOwnPropertyNames(t);for(const n of this.outputNames)if(-1!==o.indexOf(n)){const o=t[n];(null===o||o instanceof s.Tensor)&&(e=!0,a=!1,r[n]=o)}if(e){if("object"==typeof n&&null!==n)i=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else i=t}}else if(void 0!==t)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const t of this.inputNames)if(void 0===e[t])throw new Error(`input '${t}' is missing in 'feeds'.`);if(a)for(const e of this.outputNames)r[e]=null;const l=await this.handler.run(e,r,i),d={};for(const e in l)if(Object.hasOwnProperty.call(l,e)){const t=l[e];t instanceof s.Tensor?d[e]=t:d[e]=new s.Tensor(t.type,t.data,t.dims)}return(0,o.TRACE_FUNC_END)(),d}async release(){return this.handler.dispose()}static async create(e,t,n,s){let a;(0,o.TRACE_FUNC_BEGIN)();let l={};if("string"==typeof e){if(a=e,"object"==typeof t&&null!==t)l=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(a=e,"object"==typeof t&&null!==t)l=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else{if(!(e instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&e instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{const r=e;let o=0,i=e.byteLength;if("object"==typeof t&&null!==t)l=t;else if("number"==typeof t){if(o=t,!Number.isSafeInteger(o))throw new RangeError("'byteOffset' must be an integer.");if(o<0||o>=r.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${r.byteLength}).`);if(i=e.byteLength-o,"number"==typeof n){if(i=n,!Number.isSafeInteger(i))throw new RangeError("'byteLength' must be an integer.");if(i<=0||o+i>r.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${r.byteLength-o}].`);if("object"==typeof s&&null!==s)l=s;else if(void 0!==s)throw new TypeError("'options' must be an object.")}else if(void 0!==n)throw new TypeError("'byteLength' must be a number.")}else if(void 0!==t)throw new TypeError("'options' must be an object.");a=new Uint8Array(r,o,i)}}const[d,u]=await(0,r.resolveBackendAndExecutionProviders)(l),c=await d.createInferenceSessionHandler(a,u);return(0,o.TRACE_FUNC_END)(),new i(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/inference-session.js ***!
    \***********************************************************************/(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>r});const r=n(/*! ./inference-session-impl.js */"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js").InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":
  /*!****************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/onnx-model.js ***!
    \****************************************************************/(e,t,n)=>{n.r(t)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":
  /*!****************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/onnx-value.js ***!
    \****************************************************************/(e,t,n)=>{n.r(t)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":
  /*!****************************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js ***!
    \****************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{tensorToDataURL:()=>r,tensorToImageData:()=>s});const r=(e,t)=>{const n="undefined"!=typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];const r=n.getContext("2d");if(null!=r){let s,o;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],o=e.dims[3]):(s=e.dims[3],o=e.dims[2]);const i=void 0!==t?.format?t.format:"RGB",a=t?.norm;let l,d;void 0===a||void 0===a.mean?l=[255,255,255,255]:"number"==typeof a.mean?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],void 0!==a.mean[3]&&(l[3]=a.mean[3])),void 0===a||void 0===a.bias?d=[0,0,0,0]:"number"==typeof a.bias?d=[a.bias,a.bias,a.bias,a.bias]:(d=[a.bias[0],a.bias[1],a.bias[2],0],void 0!==a.bias[3]&&(d[3]=a.bias[3]));const u=o*s;let c=0,p=u,h=2*u,m=-1;"RGBA"===i?(c=0,p=u,h=2*u,m=3*u):"RGB"===i?(c=0,p=u,h=2*u):"RBG"===i&&(c=0,h=u,p=2*u);for(let t=0;t<o;t++)for(let n=0;n<s;n++){const s=(e.data[c++]-d[0])*l[0],o=(e.data[p++]-d[1])*l[1],i=(e.data[h++]-d[2])*l[2],a=-1===m?255:(e.data[m++]-d[3])*l[3];r.fillStyle="rgba("+s+","+o+","+i+","+a+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},s=(e,t)=>{const n="undefined"!=typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let r;if(null==n)throw new Error("Can not access image data");{let s,o,i;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],o=e.dims[1],i=e.dims[3]):(s=e.dims[3],o=e.dims[2],i=e.dims[1]);const a=void 0!==t&&void 0!==t.format?t.format:"RGB",l=t?.norm;let d,u;void 0===l||void 0===l.mean?d=[255,255,255,255]:"number"==typeof l.mean?d=[l.mean,l.mean,l.mean,l.mean]:(d=[l.mean[0],l.mean[1],l.mean[2],255],void 0!==l.mean[3]&&(d[3]=l.mean[3])),void 0===l||void 0===l.bias?u=[0,0,0,0]:"number"==typeof l.bias?u=[l.bias,l.bias,l.bias,l.bias]:(u=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(u[3]=l.bias[3]));const c=o*s;if(void 0!==t&&(void 0!==t.format&&4===i&&"RGBA"!==t.format||3===i&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");const p=4;let h=0,m=1,f=2,g=3,_=0,w=c,y=2*c,b=-1;"RGBA"===a?(_=0,w=c,y=2*c,b=3*c):"RGB"===a?(_=0,w=c,y=2*c):"RBG"===a&&(_=0,y=c,w=2*c),r=n.createImageData(s,o);for(let t=0;t<o*s;h+=p,m+=p,f+=p,g+=p,t++)r.data[h]=(e.data[_++]-u[0])*d[0],r.data[m]=(e.data[w++]-u[1])*d[1],r.data[f]=(e.data[y++]-u[2])*d[2],r.data[g]=-1===b?255:(e.data[b++]-u[3])*d[3]}return r}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js ***!
    \***********************************************************************/(e,t,n)=>{n.r(t)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":
  /*!*************************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js ***!
    \*************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{bufferToTensor:()=>s,tensorFromGpuBuffer:()=>a,tensorFromImage:()=>o,tensorFromMLTensor:()=>l,tensorFromPinnedBuffer:()=>d,tensorFromTexture:()=>i});var r=n(/*! ./tensor-impl.js */"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const s=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");const{height:n,width:s}=t,o=t.norm??{mean:255,bias:0};let i,a;i="number"==typeof o.mean?[o.mean,o.mean,o.mean,o.mean]:[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],a="number"==typeof o.bias?[o.bias,o.bias,o.bias,o.bias]:[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];const l=void 0!==t.format?t.format:"RGBA",d=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",u=n*s,c="RGBA"===d?new Float32Array(4*u):new Float32Array(3*u);let p=4,h=0,m=1,f=2,g=3,_=0,w=u,y=2*u,b=-1;"RGB"===l&&(p=3,h=0,m=1,f=2,g=-1),"RGBA"===d?b=3*u:"RBG"===d?(_=0,y=u,w=2*u):"BGR"===d&&(y=0,w=u,_=2*u);for(let t=0;t<u;t++,h+=p,f+=p,m+=p,g+=p)c[_++]=(e[h]+a[0])/i[0],c[w++]=(e[m]+a[1])/i[1],c[y++]=(e[f]+a[2])/i[2],-1!==b&&-1!==g&&(c[b++]=(e[g]+a[3])/i[3]);return"RGBA"===d?new r.Tensor("float32",c,[1,4,n,s]):new r.Tensor("float32",c,[1,3,n,s])},o=async(e,t)=>{const n="undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement,r="undefined"!=typeof ImageData&&e instanceof ImageData,o="undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap,i="string"==typeof e;let a,l=t??{};const d=()=>{if("undefined"!=typeof document)return document.createElement("canvas");if("undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=e=>"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(n){const n=d();n.width=e.width,n.height=e.height;const r=u(n);if(null==r)throw new Error("Can not access image data");{let n=e.height,s=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(n=t.resizedHeight,s=t.resizedWidth),void 0!==t){if(l=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");l.tensorFormat="RGBA",l.height=n,l.width=s}else l.tensorFormat="RGBA",l.height=n,l.width=s;r.drawImage(e,0,0),a=r.getImageData(0,0,s,n).data}}else{if(!r){if(o){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");const n=d();n.width=e.width,n.height=e.height;const r=u(n);if(null!=r){const t=e.height,n=e.width;return r.drawImage(e,0,0,n,t),a=r.getImageData(0,0,n,t).data,l.height=t,l.width=n,s(a,l)}throw new Error("Can not access image data")}if(i)return new Promise(((t,n)=>{const r=d(),o=u(r);if(!e||!o)return n();const i=new Image;i.crossOrigin="Anonymous",i.src=e,i.onload=()=>{r.width=i.width,r.height=i.height,o.drawImage(i,0,0,r.width,r.height);const e=o.getImageData(0,0,r.width,r.height);l.height=r.height,l.width=r.width,t(s(e.data,l))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let n,r;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(n=t.resizedHeight,r=t.resizedWidth):(n=e.height,r=e.width),void 0!==t&&(l=t),l.format="RGBA",l.height=n,l.width=r,void 0!==t){const t=d();t.width=r,t.height=n;const s=u(t);if(null==s)throw new Error("Can not access image data");s.putImageData(e,0,0),a=s.getImageData(0,0,r,n).data}else a=e.data}}if(void 0!==a)return s(a,l);throw new Error("Input data provided is not supported - aborted tensor creation")},i=(e,t)=>{const{width:n,height:s,download:o,dispose:i}=t,a=[1,s,n,4];return new r.Tensor({location:"texture",type:"float32",texture:e,dims:a,download:o,dispose:i})},a=(e,t)=>{const{dataType:n,dims:s,download:o,dispose:i}=t;return new r.Tensor({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:s,download:o,dispose:i})},l=(e,t)=>{const{dataType:n,dims:s,download:o,dispose:i}=t;return new r.Tensor({location:"ml-tensor",type:n??"float32",mlTensor:e,dims:s,download:o,dispose:i})},d=(e,t,n)=>new r.Tensor({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":
  /*!********************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/tensor-factory.js ***!
    \********************************************************************/(e,t,n)=>{n.r(t)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":
  /*!******************************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js ***!
    \******************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>s,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>r,checkTypedArray:()=>i});const r=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),s=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let o=!1;const i=()=>{if(!o){o=!0;const e="undefined"!=typeof BigInt64Array&&BigInt64Array.from,t="undefined"!=typeof BigUint64Array&&BigUint64Array.from,n="undefined"!=typeof Float16Array&&Float16Array.from;e&&(r.set("int64",BigInt64Array),s.set(BigInt64Array,"int64")),t&&(r.set("uint64",BigUint64Array),s.set(BigUint64Array,"uint64")),n?(r.set("float16",Float16Array),s.set(Float16Array,"float16")):r.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/tensor-impl.js ***!
    \*****************************************************************/(e,t,n)=>{n.r(t),n.d(t,{Tensor:()=>a});var r=n(/*! ./tensor-conversion-impl.js */"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),s=n(/*! ./tensor-factory-impl.js */"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),o=n(/*! ./tensor-impl-type-mapping.js */"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),i=n(/*! ./tensor-utils-impl.js */"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class a{constructor(e,t,n){let r,s;if((0,o.checkTypedArray)(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,s=e.dims,e.location){case"cpu-pinned":{const t=o.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;case"ml-tensor":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint64"!==r&&"int8"!==r&&"uint8"!==r&&"bool"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,a;if("string"==typeof e)if(r=e,a=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");i=t}else{const n=o.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&n===Uint16Array||"uint4"===e||"int4"===e)throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${n.name} as data.`);i="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else if(t instanceof n)i=t;else{if(!(t instanceof Uint8ClampedArray))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);if("uint8"!==e)throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");i=Uint8Array.from(t)}}else if(a=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");const t=typeof e[0];if("string"===t)r="string",i=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",i=Uint8Array.from(e)}}else if(e instanceof Uint8ClampedArray)r="uint8",i=Uint8Array.from(e);else{const t=o.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,i=e}if(void 0===a)a=[i.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");s=a,this.cpuData=i,this.dataLocation="cpu"}const a=(0,i.calculateSize)(s);if(this.cpuData&&a!==this.cpuData.length&&("uint4"!==r&&"int4"!==r||Math.ceil(a/2)!==this.cpuData.length))throw new Error(`Tensor's size(${a}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=s,this.size=a}static async fromImage(e,t){return(0,s.tensorFromImage)(e,t)}static fromTexture(e,t){return(0,s.tensorFromTexture)(e,t)}static fromGpuBuffer(e,t){return(0,s.tensorFromGpuBuffer)(e,t)}static fromMLTensor(e,t){return(0,s.tensorFromMLTensor)(e,t)}static fromPinnedBuffer(e,t,n){return(0,s.tensorFromPinnedBuffer)(e,t,n)}toDataURL(e){return(0,r.tensorToDataURL)(this,e)}toImageData(e){return(0,r.tensorToImageData)(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,i.tensorReshape)(this,e)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js ***!
    \***********************************************************************/(e,t,n)=>{n.r(t),n.d(t,{calculateSize:()=>s,tensorReshape:()=>o});var r=n(/*! ./tensor-impl.js */"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const s=e=>{let t=1;for(let n=0;n<e.length;n++){const r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},o=(e,t)=>{switch(e.location){case"cpu":return new r.Tensor(e.type,e.data,t);case"cpu-pinned":return new r.Tensor({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new r.Tensor({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new r.Tensor({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new r.Tensor({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":
  /*!************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/tensor.js ***!
    \************************************************************/(e,t,n)=>{n.r(t),n.d(t,{Tensor:()=>r});const r=n(/*! ./tensor-impl.js */"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js").Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":
  /*!***********************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/trace.js ***!
    \***********************************************************/(e,t,n)=>{n.r(t),n.d(t,{TRACE:()=>s,TRACE_FUNC_BEGIN:()=>i,TRACE_FUNC_END:()=>a});var r=n(/*! ./env-impl.js */"./node_modules/onnxruntime-common/dist/esm/env-impl.js");const s=(e,t)=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&console.timeStamp(`${e}::ORT::${t}`)},o=(e,t)=>{const n=(new Error).stack?.split(/\r\n|\r|\n/g)||[];let r=!1;for(let o=0;o<n.length;o++){if(r&&!n[o].includes("TRACE_FUNC")){let r=`FUNC_${e}::${n[o].trim().split(" ")[1]}`;return t&&(r+=`::${t}`),void s("CPU",r)}n[o].includes("TRACE_FUNC")&&(r=!0)}},i=e=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&o("BEGIN",e)},a=e=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&o("END",e)}},"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js":
  /*!***************************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/training-session-impl.js ***!
    \***************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{TrainingSession:()=>o});var r=n(/*! ./backend-impl.js */"./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),s=n(/*! ./tensor.js */"./node_modules/onnxruntime-common/dist/esm/tensor.js");class o{constructor(e,t,n){this.handler=e,this.hasOptimizerModel=t,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(e,t){const n=e.evalModel||"",s=e.optimizerModel||"",i=t||{},[a,l]=await(0,r.resolveBackendAndExecutionProviders)(i);if(a.createTrainingSessionHandler){const t=await a.createTrainingSessionHandler(e.checkpointState,e.trainModel,n,s,l);return new o(t,!!e.optimizerModel,!!e.evalModel)}throw new Error("Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.")}typeNarrowingForRunStep(e,t,n,r,o){const i={};let a={};if("object"!=typeof n||null===n||n instanceof s.Tensor||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let l=!0;if("object"==typeof r){if(null===r)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof s.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw new TypeError("'fetches' cannot be an empty array.");l=!1;for(const e of r){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===t.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);i[e]=null}if("object"==typeof o&&null!==o)a=o;else if(void 0!==o)throw new TypeError("'options' must be an object.")}else{let e=!1;const n=Object.getOwnPropertyNames(r);for(const o of t)if(-1!==n.indexOf(o)){const t=r[o];(null===t||t instanceof s.Tensor)&&(e=!0,l=!1,i[o]=t)}if(e){if("object"==typeof o&&null!==o)a=o;else if(void 0!==o)throw new TypeError("'options' must be an object.")}else a=r}}else if(void 0!==r)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const t of e)if(void 0===n[t])throw new Error(`input '${t}' is missing in 'feeds'.`);if(l)for(const e of t)i[e]=null;return[i,a]}convertHandlerReturnTypeToMapOfTensors(e){const t={};for(const n in e)if(Object.hasOwnProperty.call(e,n)){const r=e[n];r instanceof s.Tensor?t[n]=r:t[n]=new s.Tensor(r.type,r.data,r.dims)}return t}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,t,n){const[r,s]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,t,n),o=await this.handler.runTrainStep(e,r,s);return this.convertHandlerReturnTypeToMapOfTensors(o)}async runOptimizerStep(e){if(!this.hasOptimizerModel)throw new Error("This TrainingSession has no OptimizerModel loaded.");await this.handler.runOptimizerStep(e||{})}async runEvalStep(e,t,n){if(this.hasEvalModel){const[r,s]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,t,n),o=await this.handler.runEvalStep(e,r,s);return this.convertHandlerReturnTypeToMapOfTensors(o)}throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,t=!0){const n=await this.getParametersSize(t);if(e.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,t)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}},"./node_modules/onnxruntime-common/dist/esm/training-session.js":
  /*!**********************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/training-session.js ***!
    \**********************************************************************/(e,t,n)=>{n.r(t),n.d(t,{TrainingSession:()=>r});const r=n(/*! ./training-session-impl.js */"./node_modules/onnxruntime-common/dist/esm/training-session-impl.js").TrainingSession},"./node_modules/onnxruntime-common/dist/esm/version.js":
  /*!*************************************************************!*\
    !*** ./node_modules/onnxruntime-common/dist/esm/version.js ***!
    \*************************************************************/(e,t,n)=>{n.r(t),n.d(t,{version:()=>r});const r="1.20.1"},"./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs":
  /*!*********************************************************************!*\
    !*** ./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs ***!
    \*********************************************************************/(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>z,TRACE:()=>S,TRACE_FUNC_BEGIN:()=>F,TRACE_FUNC_END:()=>A,Tensor:()=>P,TrainingSession:()=>O,default:()=>Ou,env:()=>p,registerBackend:()=>i});
  /*!
   * ONNX Runtime Web v1.20.1
   * Copyright (c) Microsoft Corporation. All rights reserved.
   * Licensed under the MIT License.
   */
  var r,s,o,i,a,l,d,u,c,p,h,m,f,g,_,w,y,b,v,x,M,T,k,$,C,P,S,E,F,A,I,z,L,O,B=Object.defineProperty,D=Object.getOwnPropertyDescriptor,N=Object.getOwnPropertyNames,R=Object.prototype.hasOwnProperty,j=(r=function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')},typeof require<"u"?require:typeof Proxy<"u"?new Proxy(r,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):r),V=(e,t)=>()=>(e&&(t=e(e=0)),t),G=(e,t)=>{for(var n in t)B(e,n,{get:t[n],enumerable:!0})},U=e=>((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let s of N(t))!R.call(e,s)&&s!==n&&B(e,s,{get:()=>t[s],enumerable:!(r=D(t,s))||r.enumerable});return e})(B({},"__esModule",{value:!0}),e),q=V((()=>{s=new Map,o=[],i=(e,t,n)=>{if(!t||"function"!=typeof t.init||"function"!=typeof t.createInferenceSessionHandler)throw new TypeError("not a valid backend");{let r=s.get(e);if(void 0===r)s.set(e,{backend:t,priority:n});else{if(r.priority>n)return;if(r.priority===n&&r.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${n}`)}if(n>=0){let t=o.indexOf(e);-1!==t&&o.splice(t,1);for(let t=0;t<o.length;t++)if(s.get(o[t]).priority<=n)return void o.splice(t,0,e);o.push(e)}}},a=async e=>{let t=s.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let n=!!t.initPromise;try{return n||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(e){return n||(t.error=`${e}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},l=async e=>{let t,n=e.executionProviders||[],r=n.map((e=>"string"==typeof e?e:e.name)),s=0===r.length?o:r,i=[],l=new Set;for(let e of s){let n=await a(e);"string"==typeof n?i.push({name:e,err:n}):(t||(t=n),t===n&&l.add(e))}if(!t)throw new Error(`no available backend found. ERR: ${i.map((e=>`[${e.name}] ${e.err}`)).join(", ")}`);for(let{name:e,err:t}of i)r.includes(e)&&console.warn(`removing requested execution provider "${e}" from session options because it is not available: ${t}`);let d=n.filter((e=>l.has("string"==typeof e?e:e.name)));return[t,new Proxy(e,{get:(e,t)=>"executionProviders"===t?d:Reflect.get(e,t)})]}})),W=V((()=>{q()})),H=V((()=>{d="1.20.1"})),X=V((()=>{H(),u="warning",c={wasm:{},webgl:{},webgpu:{},versions:{common:d},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);u=e}},get logLevel(){return u}},Object.defineProperty(c,"logLevel",{enumerable:!0})})),Q=V((()=>{X(),p=c})),K=V((()=>{h=(e,t)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];let r=n.getContext("2d");if(null!=r){let s,o;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],o=e.dims[3]):(s=e.dims[3],o=e.dims[2]);let i,a,l=void 0!==t?.format?t.format:"RGB",d=t?.norm;void 0===d||void 0===d.mean?i=[255,255,255,255]:"number"==typeof d.mean?i=[d.mean,d.mean,d.mean,d.mean]:(i=[d.mean[0],d.mean[1],d.mean[2],0],void 0!==d.mean[3]&&(i[3]=d.mean[3])),void 0===d||void 0===d.bias?a=[0,0,0,0]:"number"==typeof d.bias?a=[d.bias,d.bias,d.bias,d.bias]:(a=[d.bias[0],d.bias[1],d.bias[2],0],void 0!==d.bias[3]&&(a[3]=d.bias[3]));let u=o*s,c=0,p=u,h=2*u,m=-1;"RGBA"===l?(c=0,p=u,h=2*u,m=3*u):"RGB"===l?(c=0,p=u,h=2*u):"RBG"===l&&(c=0,h=u,p=2*u);for(let t=0;t<o;t++)for(let n=0;n<s;n++){let s=(e.data[c++]-a[0])*i[0],o=(e.data[p++]-a[1])*i[1],l=(e.data[h++]-a[2])*i[2],d=-1===m?255:(e.data[m++]-a[3])*i[3];r.fillStyle="rgba("+s+","+o+","+l+","+d+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},m=(e,t)=>{let n,r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(null==r)throw new Error("Can not access image data");{let s,o,i;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],o=e.dims[1],i=e.dims[3]):(s=e.dims[3],o=e.dims[2],i=e.dims[1]);let a,l,d=void 0!==t&&void 0!==t.format?t.format:"RGB",u=t?.norm;void 0===u||void 0===u.mean?a=[255,255,255,255]:"number"==typeof u.mean?a=[u.mean,u.mean,u.mean,u.mean]:(a=[u.mean[0],u.mean[1],u.mean[2],255],void 0!==u.mean[3]&&(a[3]=u.mean[3])),void 0===u||void 0===u.bias?l=[0,0,0,0]:"number"==typeof u.bias?l=[u.bias,u.bias,u.bias,u.bias]:(l=[u.bias[0],u.bias[1],u.bias[2],0],void 0!==u.bias[3]&&(l[3]=u.bias[3]));let c=o*s;if(void 0!==t&&(void 0!==t.format&&4===i&&"RGBA"!==t.format||3===i&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");let p=4,h=0,m=1,f=2,g=3,_=0,w=c,y=2*c,b=-1;"RGBA"===d?(_=0,w=c,y=2*c,b=3*c):"RGB"===d?(_=0,w=c,y=2*c):"RBG"===d&&(_=0,y=c,w=2*c),n=r.createImageData(s,o);for(let t=0;t<o*s;h+=p,m+=p,f+=p,g+=p,t++)n.data[h]=(e.data[_++]-l[0])*a[0],n.data[m]=(e.data[w++]-l[1])*a[1],n.data[f]=(e.data[y++]-l[2])*a[2],n.data[g]=-1===b?255:(e.data[b++]-l[3])*a[3]}return n}})),Y=V((()=>{ee(),f=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");let n,r,{height:s,width:o}=t,i=t.norm??{mean:255,bias:0};n="number"==typeof i.mean?[i.mean,i.mean,i.mean,i.mean]:[i.mean[0],i.mean[1],i.mean[2],i.mean[3]??255],r="number"==typeof i.bias?[i.bias,i.bias,i.bias,i.bias]:[i.bias[0],i.bias[1],i.bias[2],i.bias[3]??0];let a=void 0!==t.format?t.format:"RGBA",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",d=s*o,u="RGBA"===l?new Float32Array(4*d):new Float32Array(3*d),c=4,p=0,h=1,m=2,f=3,g=0,_=d,w=2*d,y=-1;"RGB"===a&&(c=3,p=0,h=1,m=2,f=-1),"RGBA"===l?y=3*d:"RBG"===l?(g=0,w=d,_=2*d):"BGR"===l&&(w=0,_=d,g=2*d);for(let t=0;t<d;t++,p+=c,m+=c,h+=c,f+=c)u[g++]=(e[p]+r[0])/n[0],u[_++]=(e[h]+r[1])/n[1],u[w++]=(e[m]+r[2])/n[2],-1!==y&&-1!==f&&(u[y++]=(e[f]+r[3])/n[3]);return new C("float32",u,"RGBA"===l?[1,4,s,o]:[1,3,s,o])},g=async(e,t)=>{let n,r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,o=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,i="string"==typeof e,a=t??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},d=e=>typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(r){let r=l();r.width=e.width,r.height=e.height;let s=d(r);if(null==s)throw new Error("Can not access image data");{let r=e.height,o=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(r=t.resizedHeight,o=t.resizedWidth),void 0!==t){if(a=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=r,a.width=o}else a.tensorFormat="RGBA",a.height=r,a.width=o;s.drawImage(e,0,0),n=s.getImageData(0,0,o,r).data}}else{if(!s){if(o){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");let r=l();r.width=e.width,r.height=e.height;let s=d(r);if(null!=s){let t=e.height,r=e.width;return s.drawImage(e,0,0,r,t),n=s.getImageData(0,0,r,t).data,a.height=t,a.width=r,f(n,a)}throw new Error("Can not access image data")}if(i)return new Promise(((t,n)=>{let r=l(),s=d(r);if(!e||!s)return n();let o=new Image;o.crossOrigin="Anonymous",o.src=e,o.onload=()=>{r.width=o.width,r.height=o.height,s.drawImage(o,0,0,r.width,r.height);let e=s.getImageData(0,0,r.width,r.height);a.height=r.height,a.width=r.width,t(f(e.data,a))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let r,s;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(r=t.resizedHeight,s=t.resizedWidth):(r=e.height,s=e.width),void 0!==t&&(a=t),a.format="RGBA",a.height=r,a.width=s,void 0!==t){let t=l();t.width=s,t.height=r;let o=d(t);if(null==o)throw new Error("Can not access image data");o.putImageData(e,0,0),n=o.getImageData(0,0,s,r).data}else n=e.data}}if(void 0!==n)return f(n,a);throw new Error("Input data provided is not supported - aborted tensor creation")},_=(e,t)=>{let{width:n,height:r,download:s,dispose:o}=t;return new C({location:"texture",type:"float32",texture:e,dims:[1,r,n,4],download:s,dispose:o})},w=(e,t)=>{let{dataType:n,dims:r,download:s,dispose:o}=t;return new C({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:r,download:s,dispose:o})},y=(e,t)=>{let{dataType:n,dims:r,download:s,dispose:o}=t;return new C({location:"ml-tensor",type:n??"float32",mlTensor:e,dims:r,download:s,dispose:o})},b=(e,t,n)=>new C({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]})})),J=V((()=>{v=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),x=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),M=!1,T=()=>{if(!M){M=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,n=typeof Float16Array<"u"&&Float16Array.from;e&&(v.set("int64",BigInt64Array),x.set(BigInt64Array,"int64")),t&&(v.set("uint64",BigUint64Array),x.set(BigUint64Array,"uint64")),n?(v.set("float16",Float16Array),x.set(Float16Array,"float16")):v.set("float16",Uint16Array)}}})),Z=V((()=>{ee(),k=e=>{let t=1;for(let n=0;n<e.length;n++){let r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},$=(e,t)=>{switch(e.location){case"cpu":return new C(e.type,e.data,t);case"cpu-pinned":return new C({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new C({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new C({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new C({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}})),ee=V((()=>{K(),Y(),J(),Z(),C=class{constructor(e,t,n){let r,s;if(T(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,s=e.dims,e.location){case"cpu-pinned":{let t=v.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;case"ml-tensor":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint64"!==r&&"int8"!==r&&"uint8"!==r&&"bool"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,i;if("string"==typeof e)if(r=e,i=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");o=t}else{let n=v.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&n===Uint16Array||"uint4"===e||"int4"===e)throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${n.name} as data.`);o="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else if(t instanceof n)o=t;else{if(!(t instanceof Uint8ClampedArray))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);if("uint8"!==e)throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");o=Uint8Array.from(t)}}else if(i=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");let t=typeof e[0];if("string"===t)r="string",o=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",o=Uint8Array.from(e)}}else if(e instanceof Uint8ClampedArray)r="uint8",o=Uint8Array.from(e);else{let t=x.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,o=e}if(void 0===i)i=[o.length];else if(!Array.isArray(i))throw new TypeError("A tensor's dims must be a number array");s=i,this.cpuData=o,this.dataLocation="cpu"}let o=k(s);if(this.cpuData&&o!==this.cpuData.length&&("uint4"!==r&&"int4"!==r||Math.ceil(o/2)!==this.cpuData.length))throw new Error(`Tensor's size(${o}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=s,this.size=o}static async fromImage(e,t){return g(e,t)}static fromTexture(e,t){return _(e,t)}static fromGpuBuffer(e,t){return w(e,t)}static fromMLTensor(e,t){return y(e,t)}static fromPinnedBuffer(e,t,n){return b(e,t,n)}toDataURL(e){return h(this,e)}toImageData(e){return m(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return $(this,e)}}})),te=V((()=>{ee(),P=C})),ne=V((()=>{X(),S=(e,t)=>{(typeof c.trace>"u"?!c.wasm.trace:!c.trace)||console.timeStamp(`${e}::ORT::${t}`)},E=(e,t)=>{let n=(new Error).stack?.split(/\r\n|\r|\n/g)||[],r=!1;for(let s=0;s<n.length;s++){if(r&&!n[s].includes("TRACE_FUNC")){let r=`FUNC_${e}::${n[s].trim().split(" ")[1]}`;return t&&(r+=`::${t}`),void S("CPU",r)}n[s].includes("TRACE_FUNC")&&(r=!0)}},F=e=>{(typeof c.trace>"u"?!c.wasm.trace:!c.trace)||E("BEGIN",e)},A=e=>{(typeof c.trace>"u"?!c.wasm.trace:!c.trace)||E("END",e)}})),re=V((()=>{q(),te(),ne(),I=class e{constructor(e){this.handler=e}async run(e,t,n){F();let r={},s={};if("object"!=typeof e||null===e||e instanceof P||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof P)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,i=Object.getOwnPropertyNames(t);for(let n of this.outputNames)if(-1!==i.indexOf(n)){let s=t[n];(null===s||s instanceof P)&&(e=!0,o=!1,r[n]=s)}if(e){if("object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else s=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let t of this.inputNames)if(typeof e[t]>"u")throw new Error(`input '${t}' is missing in 'feeds'.`);if(o)for(let e of this.outputNames)r[e]=null;let i=await this.handler.run(e,r,s),a={};for(let e in i)if(Object.hasOwnProperty.call(i,e)){let t=i[e];a[e]=t instanceof P?t:new P(t.type,t.data,t.dims)}return A(),a}async release(){return this.handler.dispose()}static async create(t,n,r,s){F();let o,i={};if("string"==typeof t){if(o=t,"object"==typeof n&&null!==n)i=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(o=t,"object"==typeof n&&null!==n)i=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{if(!(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{let e=t,a=0,l=t.byteLength;if("object"==typeof n&&null!==n)i=n;else if("number"==typeof n){if(a=n,!Number.isSafeInteger(a))throw new RangeError("'byteOffset' must be an integer.");if(a<0||a>=e.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${e.byteLength}).`);if(l=t.byteLength-a,"number"==typeof r){if(l=r,!Number.isSafeInteger(l))throw new RangeError("'byteLength' must be an integer.");if(l<=0||a+l>e.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${e.byteLength-a}].`);if("object"==typeof s&&null!==s)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else if(typeof r<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");o=new Uint8Array(e,a,l)}}let[a,d]=await l(i),u=await a.createInferenceSessionHandler(o,d);return A(),new e(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}})),se=V((()=>{re(),z=I})),oe=V((()=>{})),ie=V((()=>{})),ae=V((()=>{})),le=V((()=>{})),de=V((()=>{q(),te(),L=class e{constructor(e,t,n){this.handler=e,this.hasOptimizerModel=t,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,n){let r=t.evalModel||"",s=t.optimizerModel||"",o=n||{},[i,a]=await l(o);if(i.createTrainingSessionHandler){let n=await i.createTrainingSessionHandler(t.checkpointState,t.trainModel,r,s,a);return new e(n,!!t.optimizerModel,!!t.evalModel)}throw new Error("Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.")}typeNarrowingForRunStep(e,t,n,r,s){let o={},i={};if("object"!=typeof n||null===n||n instanceof P||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let a=!0;if("object"==typeof r){if(null===r)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof P)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw new TypeError("'fetches' cannot be an empty array.");a=!1;for(let e of r){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===t.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);o[e]=null}if("object"==typeof s&&null!==s)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,n=Object.getOwnPropertyNames(r);for(let s of t)if(-1!==n.indexOf(s)){let t=r[s];(null===t||t instanceof P)&&(e=!0,a=!1,o[s]=t)}if(e){if("object"==typeof s&&null!==s)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else i=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let t of e)if(typeof n[t]>"u")throw new Error(`input '${t}' is missing in 'feeds'.`);if(a)for(let e of t)o[e]=null;return[o,i]}convertHandlerReturnTypeToMapOfTensors(e){let t={};for(let n in e)if(Object.hasOwnProperty.call(e,n)){let r=e[n];t[n]=r instanceof P?r:new P(r.type,r.data,r.dims)}return t}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,t,n){let[r,s]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,t,n),o=await this.handler.runTrainStep(e,r,s);return this.convertHandlerReturnTypeToMapOfTensors(o)}async runOptimizerStep(e){if(!this.hasOptimizerModel)throw new Error("This TrainingSession has no OptimizerModel loaded.");await this.handler.runOptimizerStep(e||{})}async runEvalStep(e,t,n){if(this.hasEvalModel){let[r,s]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,t,n),o=await this.handler.runEvalStep(e,r,s);return this.convertHandlerReturnTypeToMapOfTensors(o)}throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,t=!0){let n=await this.getParametersSize(t);if(e.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,t)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}})),ue=V((()=>{de(),O=L})),ce={};G(ce,{InferenceSession:()=>z,TRACE:()=>S,TRACE_FUNC_BEGIN:()=>F,TRACE_FUNC_END:()=>A,Tensor:()=>P,TrainingSession:()=>O,env:()=>p,registerBackend:()=>i});var pe=V((()=>{W(),Q(),se(),te(),oe(),ie(),ne(),ae(),le(),ue()})),he=V((()=>{})),me={};G(me,{default:()=>_e});var fe,ge,_e,we=V((()=>{Pu(),Fl(),El(),fe="ort-wasm-proxy-worker",(ge=globalThis.self?.name===fe)&&(self.onmessage=e=>{let{type:t,in:n}=e.data;try{switch(t){case"init-wasm":Be(n.wasm).then((()=>{Qd(n).then((()=>{postMessage({type:t})}),(e=>{postMessage({type:t,err:e})}))}),(e=>{postMessage({type:t,err:e})}));break;case"init-ep":{let{epName:e,env:r}=n;Kd(r,e).then((()=>{postMessage({type:t})}),(e=>{postMessage({type:t,err:e})}));break}case"copy-from":{let{buffer:e}=n,r=Zd(e);postMessage({type:t,out:r});break}case"create":{let{model:e,options:r}=n;eu(e,r).then((e=>{postMessage({type:t,out:e})}),(e=>{postMessage({type:t,err:e})}));break}case"release":tu(n),postMessage({type:t});break;case"run":{let{sessionId:e,inputIndices:r,inputs:s,outputIndices:o,options:i}=n;ru(e,r,s,o,new Array(o.length).fill(null),i).then((e=>{e.some((e=>"cpu"!==e[3]))?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:e},ou([...s,...e]))}),(e=>{postMessage({type:t,err:e})}));break}case"end-profiling":su(n),postMessage({type:t})}}catch(e){postMessage({type:t,err:e})}}),_e=ge?null:e=>new Worker(e??Me,{type:"module",name:fe})})),ye={};G(ye,{default:()=>xe});var be,ve,xe,Me,Te,ke,$e,Ce,Pe,Se,Ee,Fe,Ae,Ie,ze,Le,Oe,Be,De,Ne,Re,je,Ve,Ge,Ue,qe,We,He,Xe,Qe,Ke,Ye,Je,Ze,et,tt,nt,rt,st,ot,it,at,lt,dt,ut,ct,pt,ht,mt,ft,gt,_t,wt,yt,bt,vt,xt,Mt,Tt,kt,$t,Ct,Pt,St,Et,Ft,At,It,zt,Lt,Ot,Bt,Dt,Nt,Rt,jt,Vt,Gt,Ut,qt,Wt,Ht,Xt,Qt,Kt,Yt,Jt,Zt,en,tn,nn,rn,sn,on,an,ln,dn,un,cn,pn,hn,mn,fn,gn,_n,wn,yn,bn,vn,xn,Mn,Tn,kn,$n,Cn,Pn,Sn,En,Fn,An,In,zn,Ln,On,Bn,Dn,Nn,Rn,jn,Vn,Gn,Un,qn,Wn,Hn,Xn,Qn,Kn,Yn,Jn,Zn,er,tr,nr,rr,sr,or,ir,ar,lr,dr,ur,cr,pr,hr,mr,fr,gr,_r,wr,yr,br,vr,xr,Mr,Tr,kr,$r,Cr,Pr,Sr,Er,Fr,Ar,Ir,zr,Lr,Or,Br,Dr,Nr,Rr,jr,Vr,Gr,Ur,qr,Wr,Hr,Xr,Qr,Kr,Yr,Jr,Zr,es,ts,ns,rs,ss,os,is,as,ls,ds,us,cs,ps,hs,ms,fs,gs,_s,ws,ys,bs,vs,xs,Ms,Ts,ks,$s,Cs,Ps,Ss,Es,Fs,As,Is,zs,Ls,Os,Bs,Ds,Ns,Rs,js,Vs,Gs,Us,qs,Ws,Hs,Xs,Qs,Ks,Ys,Js,Zs,eo,to,no,ro,so,oo,io,ao,lo,uo,co,po,ho,mo,fo,go,_o,wo,yo,bo,vo,xo,Mo,To,ko,$o,Co,Po,So,Eo,Fo,Ao,Io,zo,Lo,Oo,Bo,Do,No,Ro,jo,Vo,Go,Uo,qo,Wo,Ho,Xo,Qo,Ko,Yo,Jo,Zo,ei,ti,ni,ri,si,oi,ii,ai,li,di,ui,ci,pi,hi,mi,fi,gi,_i,wi,yi,bi,vi,xi,Mi,Ti,ki,$i,Ci,Pi,Si,Ei,Fi,Ai,Ii,zi,Li,Oi,Bi,Di,Ni,Ri,ji,Vi,Gi,Ui,qi,Wi,Hi,Xi,Qi,Ki,Yi,Ji,Zi,ea,ta,na,ra,sa,oa,ia,aa,la,da,ua,ca,pa,ha,ma,fa,ga,_a,wa,ya,ba,va,xa,Ma,Ta,ka,$a,Ca,Pa,Sa,Ea,Fa,Aa,Ia,za,La,Oa,Ba,Da,Na,Ra,ja,Va,Ga,Ua,qa,Wa,Ha,Xa,Qa,Ka,Ya,Ja,Za,el,tl,nl,rl,sl,ol,il,al,ll,dl,ul,cl,pl,hl,ml,fl,gl,_l,wl,yl,bl,vl,xl,Ml,Tl,kl,$l,Cl,Pl,Sl=V((()=>{be=import.meta.url,ve=async function(e={}){function t(){return F.buffer!=z.buffer&&q(),z}function r(){return F.buffer!=z.buffer&&q(),L}function s(){return F.buffer!=z.buffer&&q(),O}function o(){return F.buffer!=z.buffer&&q(),B}function i(){return F.buffer!=z.buffer&&q(),D}function a(){return F.buffer!=z.buffer&&q(),N}function l(){return F.buffer!=z.buffer&&q(),R}function d(){return F.buffer!=z.buffer&&q(),G}var u,c,p=Object.assign({},e),h=new Promise(((e,t)=>{u=e,c=t})),m="object"==typeof window,f="function"==typeof importScripts,g=f&&"em-pthread"==self.name;p.mountExternalData=(e,t)=>{e.startsWith("./")&&(e=e.substring(2)),(p.Fb||(p.Fb=new Map)).set(e,t)},p.unmountExternalData=()=>{delete p.Fb};var _=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,shared:!0}).buffer.constructor;let w=()=>{let e=(e,t,n)=>(...r)=>{let s=Ht,o=t?.();r=e(...r);let i=t?.();return o!==i&&(e=i,n(o),t=n=null),Ht!=s?new Promise(((e,t)=>{Zt={resolve:e,reject:t}})):r},t=e=>async(...t)=>{try{if(p.Eb)throw Error("Session already started");let n=p.Eb={fc:t[0],errors:[]},r=await e(...t);if(p.Eb!==n)throw Error("Session mismatch");p.Gb?.flush();let s=n.errors;if(0<s.length){let e=await Promise.all(s);if(e=e.filter((e=>e)),0<e.length)throw Error(e.join("\n"))}return r}finally{p.Eb=null}};p._OrtCreateSession=e(p._OrtCreateSession,(()=>p._OrtCreateSession),(e=>p._OrtCreateSession=e)),p._OrtRun=t(e(p._OrtRun,(()=>p._OrtRun),(e=>p._OrtRun=e))),p._OrtRunWithBinding=t(e(p._OrtRunWithBinding,(()=>p._OrtRunWithBinding),(e=>p._OrtRunWithBinding=e))),p._OrtBindInput=e(p._OrtBindInput,(()=>p._OrtBindInput),(e=>p._OrtBindInput=e)),w=void 0};p.jsepInit=(e,t)=>{if(w?.(),"webgpu"===e){[p.Gb,p.Ub,p.Yb,p.Nb,p.Xb,p.jb,p.Zb,p.bc,p.Vb,p.Wb,p.$b]=t;let e=p.Gb;p.jsepRegisterBuffer=(t,n,r,s)=>e.registerBuffer(t,n,r,s),p.jsepGetBuffer=t=>e.getBuffer(t),p.jsepCreateDownloader=(t,n,r)=>e.createDownloader(t,n,r),p.jsepOnReleaseSession=t=>{e.onReleaseSession(t)},p.jsepOnRunStart=t=>e.onRunStart(t),p.cc=(t,n)=>{e.upload(t,n)}}else if("webnn"===e){[p.Gb,p.ac,p.Ob,p.jsepEnsureTensor,p.dc,p.jsepDownloadTensor]=t,p.jsepReleaseTensorId=p.Ob;let e=p.Gb;p.jsepOnRunStart=t=>e.onRunStart(t),p.jsepRegisterMLContext=(t,n)=>{e.registerMLContext(t,n)},p.jsepOnReleaseSession=t=>{e.onReleaseSession(t)},p.jsepCreateMLTensorDownloader=(t,n)=>e.createMLTensorDownloader(t,n),p.jsepRegisterMLTensor=(t,n,r)=>e.registerMLTensor(t,n,r)}};var y,b,v=Object.assign({},p),x=(e,t)=>{throw t},M="";(m||f)&&(f?M=self.location.href:typeof document<"u"&&document.currentScript&&(M=document.currentScript.src),be&&(M=be),M=M.startsWith("blob:")?"":M.substr(0,M.replace(/[?#].*/,"").lastIndexOf("/")+1),f&&(b=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),y=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var T,k=console.log.bind(console),$=console.error.bind(console),C=k,P=$;if(Object.assign(p,v),v=null,g){let e=function(t){try{var n=t.data,r=n.cmd;if("load"===r){let t=[];self.onmessage=e=>t.push(e),self.startWorker=()=>{postMessage({cmd:"loaded"});for(let n of t)e(n);self.onmessage=e};for(let e of n.handlers)p[e]&&!p[e].proxy||(p[e]=(...t)=>{postMessage({Mb:"callHandler",oc:e,args:t})},"print"==e&&(C=p[e]),"printErr"==e&&(P=p[e]));F=n.wasmMemory,q(),S(n.wasmModule)}else if("run"===r){Mr(n.pthread_ptr,0,0,1,0,0),Lt(n.pthread_ptr),Ce(),Me(),E||(wr(),E=!0);try{Pe(n.start_routine,n.arg)}catch(e){if("unwind"!=e)throw e}}else"cancel"===r?br()&&Cr(-1):"setimmediate"!==n.target&&("checkMailbox"===r?E&&Ot():r&&(P(`worker: received unknown command ${r}`),P(n)))}catch(e){throw Tr(),e}};var S,E=!1;P=function(...e){e=e.join(" "),console.error(e)},self.alert=function(...e){postMessage({Mb:"alert",text:e.join(" "),qc:br()})},p.instantiateWasm=(e,t)=>new Promise((e=>{S=n=>{n=new WebAssembly.Instance(n,oe()),t(n),e()}})),self.onunhandledrejection=e=>{throw e.reason||e},self.onmessage=e}p.wasmBinary&&(T=p.wasmBinary);var F,A,I,z,L,O,B,D,N,R,j,V,G,U=!1;function q(){var e=F.buffer;p.HEAP8=z=new Int8Array(e),p.HEAP16=O=new Int16Array(e),p.HEAPU8=L=new Uint8Array(e),p.HEAPU16=B=new Uint16Array(e),p.HEAP32=D=new Int32Array(e),p.HEAPU32=N=new Uint32Array(e),p.HEAPF32=R=new Float32Array(e),p.HEAPF64=G=new Float64Array(e),p.HEAP64=j=new BigInt64Array(e),p.HEAPU64=V=new BigUint64Array(e)}if(!g){if(!((F=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0})).buffer instanceof _))throw P("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),Error("bad memory");q()}var W=[],H=[],X=[],Q=0,K=null,Y=null;function J(){if(0==--Q&&(null!==K&&(clearInterval(K),K=null),Y)){var e=Y;Y=null,e()}}function Z(e){throw P(e="Aborted("+e+")"),U=!0,I=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),c(e),e}var ee,te=e=>e.startsWith("data:application/octet-stream;base64,"),ne=e=>e.startsWith("file://");function re(e){if(e==ee&&T)return new Uint8Array(T);if(b)return b(e);throw"both async and sync fetching of the wasm failed"}function se(e,t,n){return function(e){if(!T&&(m||f)){if("function"==typeof fetch&&!ne(e))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw`failed to load wasm binary file at '${e}'`;return t.arrayBuffer()})).catch((()=>re(e)));if(y)return new Promise(((t,n)=>{y(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>re(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then(n,(e=>{P(`failed to asynchronously prepare wasm: ${e}`),Z(e)}))}function oe(){return{a:{O:le,Aa:ae,b:Ee,aa:Ae,B:Oe,qa:Be,Y:je,_:Ve,ra:Ge,oa:Ue,ha:qe,na:We,L:He,Z:Xe,W:Qe,pa:Ke,X:Ye,wa:et,F:at,Q:dt,P:_t,E:yt,u:bt,q:vt,G:xt,A:Et,R:Ft,ua:At,ka:It,U:Bt,ba:Nt,H:Rt,ja:Lt,ta:jt,t:Ut,x:nn,o:sn,l:ln,c:pt,n:un,j:mn,w:fn,p:gn,g:_n,s:wn,m:yn,e:bn,k:vn,i:xn,h:Mn,d:Tn,ea:kn,fa:Sn,ga:En,ca:Fn,da:An,T:In,f:On,D:Bn,I:Dn,M:Nn,y:Rn,sa:Vn,V:Gn,v:jn,z:Un,N:qn,S:Wn,za:Kn,ya:Yn,la:tr,ma:nr,$:ge,C:rr,K:sr,ia:or,J:ar,a:F,xa:me,va:cr,r:pr}}}var ie={868340:(e,t,n,s,o)=>{if(void 0===p||!p.Fb)return 1;if((e=Le(e>>>0)).startsWith("./")&&(e=e.substring(2)),!(e=p.Fb.get(e)))return 2;if(s>>>=0,(t>>>=0)+(n>>>=0)>e.byteLength)return 3;try{let i=e.subarray(t,t+n);switch(o){case 0:r().set(i,s>>>0);break;case 1:p.cc(s,i);break;default:return 4}return 0}catch{return 4}},869023:(e,t,n)=>{p.dc(e,r().subarray(t>>>0,t+n>>>0))},869086:()=>p.ac(),869127:e=>{p.Ob(e)},869163:()=>{p.Vb()},869194:()=>{p.Wb()},869223:()=>{p.$b()},869248:e=>p.Ub(e),869281:e=>p.Yb(e),869313:(e,t,n)=>{p.Nb(e,t,n,!0)},869352:(e,t,n)=>{p.Nb(e,t,n)},869385:()=>typeof wasmOffsetConverter<"u",869442:e=>{p.jb("Abs",e,void 0)},869493:e=>{p.jb("Neg",e,void 0)},869544:e=>{p.jb("Floor",e,void 0)},869597:e=>{p.jb("Ceil",e,void 0)},869649:e=>{p.jb("Reciprocal",e,void 0)},869707:e=>{p.jb("Sqrt",e,void 0)},869759:e=>{p.jb("Exp",e,void 0)},869810:e=>{p.jb("Erf",e,void 0)},869861:e=>{p.jb("Sigmoid",e,void 0)},869916:(e,t,n)=>{p.jb("HardSigmoid",e,{alpha:t,beta:n})},869995:e=>{p.jb("Log",e,void 0)},870046:e=>{p.jb("Sin",e,void 0)},870097:e=>{p.jb("Cos",e,void 0)},870148:e=>{p.jb("Tan",e,void 0)},870199:e=>{p.jb("Asin",e,void 0)},870251:e=>{p.jb("Acos",e,void 0)},870303:e=>{p.jb("Atan",e,void 0)},870355:e=>{p.jb("Sinh",e,void 0)},870407:e=>{p.jb("Cosh",e,void 0)},870459:e=>{p.jb("Asinh",e,void 0)},870512:e=>{p.jb("Acosh",e,void 0)},870565:e=>{p.jb("Atanh",e,void 0)},870618:e=>{p.jb("Tanh",e,void 0)},870670:e=>{p.jb("Not",e,void 0)},870721:(e,t,n)=>{p.jb("Clip",e,{min:t,max:n})},870790:e=>{p.jb("Clip",e,void 0)},870842:(e,t)=>{p.jb("Elu",e,{alpha:t})},870900:e=>{p.jb("Gelu",e,void 0)},870952:e=>{p.jb("Relu",e,void 0)},871004:(e,t)=>{p.jb("LeakyRelu",e,{alpha:t})},871068:(e,t)=>{p.jb("ThresholdedRelu",e,{alpha:t})},871138:(e,t)=>{p.jb("Cast",e,{to:t})},871196:e=>{p.jb("Add",e,void 0)},871247:e=>{p.jb("Sub",e,void 0)},871298:e=>{p.jb("Mul",e,void 0)},871349:e=>{p.jb("Div",e,void 0)},871400:e=>{p.jb("Pow",e,void 0)},871451:e=>{p.jb("Equal",e,void 0)},871504:e=>{p.jb("Greater",e,void 0)},871559:e=>{p.jb("GreaterOrEqual",e,void 0)},871621:e=>{p.jb("Less",e,void 0)},871673:e=>{p.jb("LessOrEqual",e,void 0)},871732:(e,t,n,r,s)=>{p.jb("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,s>>>0)):[]})},871891:(e,t,n,r,s)=>{p.jb("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,s>>>0)):[]})},872049:(e,t,n,r,s)=>{p.jb("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,s>>>0)):[]})},872207:(e,t,n,r,s)=>{p.jb("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,s>>>0)):[]})},872366:(e,t,n,r,s)=>{p.jb("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,s>>>0)):[]})},872524:(e,t,n,r,s)=>{p.jb("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,s>>>0)):[]})},872681:(e,t,n,r,s)=>{p.jb("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,s>>>0)):[]})},872838:(e,t,n,r,s)=>{p.jb("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,s>>>0)):[]})},872999:(e,t,n,r,s)=>{p.jb("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,s>>>0)):[]})},873163:(e,t,n,r,s)=>{p.jb("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(i().subarray(r>>>0,s>>>0)):[]})},873327:e=>{p.jb("Where",e,void 0)},873380:(e,t,n)=>{p.jb("Transpose",e,{perm:t?Array.from(i().subarray(t>>>0,n>>>0)):[]})},873488:(e,t,n,r)=>{p.jb("DepthToSpace",e,{blocksize:t,mode:Le(n),format:r?"NHWC":"NCHW"})},873621:(e,t,n,r)=>{p.jb("DepthToSpace",e,{blocksize:t,mode:Le(n),format:r?"NHWC":"NCHW"})},873754:(e,n,r,s,o,a,l,d,u,c,h,m,f,g,_)=>{p.jb("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:n,dilations:[r],group:s,kernelShape:[o],pads:[a,l],strides:[d],wIsConst:()=>!!t()[c>>>0],outputPadding:h?Array.from(i().subarray(h>>>0,m>>>0)):[],outputShape:f?Array.from(i().subarray(f>>>0,g>>>0)):[],activation:Le(_)})},874155:(e,n,r,s,o,a,l,d,u,c,h,m,f,g)=>{p.jb("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:Array.from(i().subarray(r>>>0,2+(r>>>0)>>>0)),group:s,kernelShape:Array.from(i().subarray(o>>>0,2+(o>>>0)>>>0)),pads:Array.from(i().subarray(a>>>0,4+(a>>>0)>>>0)),strides:Array.from(i().subarray(l>>>0,2+(l>>>0)>>>0)),wIsConst:()=>!!t()[u>>>0],outputPadding:c?Array.from(i().subarray(c>>>0,h>>>0)):[],outputShape:m?Array.from(i().subarray(m>>>0,f>>>0)):[],activation:Le(g)})},874720:(e,n,r,s,o,a,l,d,u,c,h,m,f,g,_)=>{p.jb("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:n,dilations:[r],group:s,kernelShape:[o],pads:[a,l],strides:[d],wIsConst:()=>!!t()[c>>>0],outputPadding:h?Array.from(i().subarray(h>>>0,m>>>0)):[],outputShape:f?Array.from(i().subarray(f>>>0,g>>>0)):[],activation:Le(_)})},875121:(e,n,r,s,o,a,l,d,u,c,h,m,f,g)=>{p.jb("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:Array.from(i().subarray(r>>>0,2+(r>>>0)>>>0)),group:s,kernelShape:Array.from(i().subarray(o>>>0,2+(o>>>0)>>>0)),pads:Array.from(i().subarray(a>>>0,4+(a>>>0)>>>0)),strides:Array.from(i().subarray(l>>>0,2+(l>>>0)>>>0)),wIsConst:()=>!!t()[u>>>0],outputPadding:c?Array.from(i().subarray(c>>>0,h>>>0)):[],outputShape:m?Array.from(i().subarray(m>>>0,f>>>0)):[],activation:Le(g)})},875686:(e,t)=>{p.jb("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},875777:(e,t,n,r,s,o,a,l,d,u,c,h,m,f)=>{p.jb("AveragePool",e,{format:f?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:s,dilations:o?Array.from(i().subarray(o>>>0,a>>>0)):[],kernel_shape:l?Array.from(i().subarray(l>>>0,d>>>0)):[],pads:u?Array.from(i().subarray(u>>>0,c>>>0)):[],strides:h?Array.from(i().subarray(h>>>0,m>>>0)):[]})},876192:(e,t)=>{p.jb("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},876283:(e,t,n,r,s,o,a,l,d,u,c,h,m,f)=>{p.jb("AveragePool",e,{format:f?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:s,dilations:o?Array.from(i().subarray(o>>>0,a>>>0)):[],kernel_shape:l?Array.from(i().subarray(l>>>0,d>>>0)):[],pads:u?Array.from(i().subarray(u>>>0,c>>>0)):[],strides:h?Array.from(i().subarray(h>>>0,m>>>0)):[]})},876698:(e,t)=>{p.jb("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},876785:(e,t,n,r,s,o,a,l,d,u,c,h,m,f)=>{p.jb("MaxPool",e,{format:f?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:s,dilations:o?Array.from(i().subarray(o>>>0,a>>>0)):[],kernel_shape:l?Array.from(i().subarray(l>>>0,d>>>0)):[],pads:u?Array.from(i().subarray(u>>>0,c>>>0)):[],strides:h?Array.from(i().subarray(h>>>0,m>>>0)):[]})},877196:(e,t)=>{p.jb("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},877283:(e,t,n,r,s,o,a,l,d,u,c,h,m,f)=>{p.jb("MaxPool",e,{format:f?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:s,dilations:o?Array.from(i().subarray(o>>>0,a>>>0)):[],kernel_shape:l?Array.from(i().subarray(l>>>0,d>>>0)):[],pads:u?Array.from(i().subarray(u>>>0,c>>>0)):[],strides:h?Array.from(i().subarray(h>>>0,m>>>0)):[]})},877694:(e,t,n,r,s)=>{p.jb("Gemm",e,{alpha:t,beta:n,transA:r,transB:s})},877798:e=>{p.jb("MatMul",e,void 0)},877852:(e,t,n,r)=>{p.jb("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},877960:(e,t,n,r)=>{p.jb("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},878068:(e,t)=>{p.jb("Softmax",e,{axis:t})},878131:(e,t)=>{p.jb("Concat",e,{axis:t})},878191:(e,t,n,r,s)=>{p.jb("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(i().subarray(r>>>0,s>>>0)):[]})},878331:e=>{p.jb("Expand",e,void 0)},878385:(e,t)=>{p.jb("Gather",e,{axis:Number(t)})},878456:(e,t)=>{p.jb("GatherElements",e,{axis:Number(t)})},878535:(e,t,n,r,s,o,a,l,d,u,c)=>{p.jb("Resize",e,{antialias:t,axes:n?Array.from(i().subarray(n>>>0,r>>>0)):[],coordinateTransformMode:Le(s),cubicCoeffA:o,excludeOutside:a,extrapolationValue:l,keepAspectRatioPolicy:Le(d),mode:Le(u),nearestMode:Le(c)})},878881:(e,t,n,r,s,o,a)=>{p.jb("Slice",e,{starts:t?Array.from(i().subarray(t>>>0,n>>>0)):[],ends:r?Array.from(i().subarray(r>>>0,s>>>0)):[],axes:o?Array.from(i().subarray(o>>>0,a>>>0)):[]})},879097:e=>{p.jb("Tile",e,void 0)},879149:(e,t,n)=>{p.jb("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},879263:(e,t,n)=>{p.jb("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},879377:e=>{p.jb("Range",e,void 0)},879430:(e,t)=>{p.jb("Einsum",e,{equation:Le(t)})},879511:(e,t,n,r,s)=>{p.jb("Pad",e,{mode:t,value:n,pads:r?Array.from(i().subarray(r>>>0,s>>>0)):[]})},879638:(e,t,n,r,s,o)=>{p.jb("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!s,trainingMode:!!r,format:o?"NHWC":"NCHW"})},879807:(e,t,n,r,s,o)=>{p.jb("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!s,trainingMode:!!r,format:o?"NHWC":"NCHW"})},879976:(e,t,n)=>{p.jb("CumSum",e,{exclusive:Number(t),reverse:Number(n)})},880073:(e,t,n)=>{p.jb("DequantizeLinear",e,{axis:t,blockSize:n})},880163:(e,t,n,r,s,o,a,l,d)=>{p.jb("Attention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:s,doRotary:o,qkvHiddenSizes:a?Array.from(i().subarray(Number(l)>>>0,Number(l)+a>>>0)):[],pastPresentShareBuffer:!!d})},880435:e=>{p.jb("BiasAdd",e,void 0)},880490:e=>{p.jb("BiasSplitGelu",e,void 0)},880551:e=>{p.jb("FastGelu",e,void 0)},880607:(e,n,r,s,o,a,d,u,c,h,m,f,g,_,w,y)=>{p.jb("Conv",e,{format:f?"NHWC":"NCHW",auto_pad:n,dilations:r?Array.from(i().subarray(r>>>0,s>>>0)):[],group:o,kernel_shape:a?Array.from(i().subarray(a>>>0,d>>>0)):[],pads:u?Array.from(i().subarray(u>>>0,c>>>0)):[],strides:h?Array.from(i().subarray(h>>>0,m>>>0)):[],w_is_const:()=>!!t()[g>>>0],activation:Le(_),activation_params:w?Array.from(l().subarray(w>>>0,y>>>0)):[]})},881103:e=>{p.jb("Gelu",e,void 0)},881155:(e,t,n,r)=>{p.jb("GroupQueryAttention",e,{numHeads:t,kvNumHeads:n,scale:r})},881268:(e,t,n,r)=>{p.jb("LayerNormalization",e,{axis:t,epsilon:n,simplified:!!r})},881379:(e,t,n,r)=>{p.jb("LayerNormalization",e,{axis:t,epsilon:n,simplified:!!r})},881490:(e,t,n,r,s,o)=>{p.jb("MatMulNBits",e,{k:t,n,accuracyLevel:r,bits:s,blockSize:o})},881617:(e,t,n,r,s,o)=>{p.jb("MultiHeadAttention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:s,doRotary:o})},881776:(e,t)=>{p.jb("QuickGelu",e,{alpha:t})},881840:(e,t,n,r,s)=>{p.jb("RotaryEmbedding",e,{interleaved:!!t,numHeads:n,rotaryEmbeddingDim:r,scale:s})},881979:(e,t,n)=>{p.jb("SkipLayerNormalization",e,{epsilon:t,simplified:!!n})},882081:(e,t,n)=>{p.jb("SkipLayerNormalization",e,{epsilon:t,simplified:!!n})},882183:(e,t,n,r)=>{p.jb("GatherBlockQuantized",e,{gatherAxis:t,quantizeAxis:n,blockSize:r})},882304:e=>{p.Zb(e)},882338:(e,t)=>p.bc(e,t,p.Eb.fc,p.Eb.errors)};function ae(e,t,n){return tn((async()=>{await p.Xb(e,t,n)}))}function le(){return typeof wasmOffsetConverter<"u"}function de(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}var ue=e=>{e.terminate(),e.onmessage=()=>{}},ce=e=>{0==_e.length&&(ke(),Te(_e[0]));var t=_e.pop();if(!t)return 6;we.push(t),ve[e.Ab]=t,t.Ab=e.Ab;var n={cmd:"run",start_routine:e.hc,arg:e.Qb,pthread_ptr:e.Ab};return t.postMessage(n,e.mc),0},pe=0,he=(e,t,...n)=>{for(var r=2*n.length,s=Ar(),o=Fr(8*r),i=o>>>3,a=0;a<n.length;a++){var l=n[a];"bigint"==typeof l?(j[i+2*a]=1n,j[i+2*a+1]=l):(j[i+2*a]=0n,d()[i+2*a+1>>>0]=l)}return e=kr(e,0,r,o,t),Er(s),e};function me(e){if(g)return he(0,1,e);if(I=e,!(0<pe)){for(var t of we)ue(t);for(t of _e)ue(t);_e=[],we=[],ve=[],U=!0}x(e,new de(e))}function fe(e){if(g)return he(1,0,e);ge(e)}var ge=e=>{if(I=e,g)throw fe(e),"unwind";me(e)},_e=[],we=[],ye=[],ve={},xe=e=>{var t=e.Ab;delete ve[t],_e.push(e),we.splice(we.indexOf(e),1),e.Ab=0,$r(t)};function Me(){ye.forEach((e=>e()))}var Te=e=>new Promise((t=>{e.onmessage=n=>{var r=(n=n.data).cmd;if(n.targetThread&&n.targetThread!=br()){var s=ve[n.targetThread];s?s.postMessage(n,n.transferList):P(`Internal error! Worker sent a message "${r}" to target pthread ${n.targetThread}, but that thread no longer exists!`)}else"checkMailbox"===r?Ot():"spawnThread"===r?ce(n):"cleanupThread"===r?xe(ve[n.thread]):"killThread"===r?(n=n.thread,r=ve[n],delete ve[n],ue(r),$r(n),we.splice(we.indexOf(r),1),r.Ab=0):"cancelThread"===r?ve[n.thread].postMessage({cmd:"cancel"}):"loaded"===r?(e.loaded=!0,t(e)):"alert"===r?alert(`Thread ${n.threadId}: ${n.text}`):"setimmediate"===n.target?e.postMessage(n):"callHandler"===r?p[n.handler](...n.args):r&&P(`worker sent an unknown command ${r}`)},e.onerror=e=>{throw P(`worker sent an error! ${e.filename}:${e.lineno}: ${e.message}`),e};var n,r=[];for(n of[])p.hasOwnProperty(n)&&r.push(n);e.postMessage({cmd:"load",handlers:r,wasmMemory:F,wasmModule:A})}));function ke(){var e=new Worker(new URL(import.meta.url),{type:"module",workerData:"em-pthread",name:"em-pthread"});_e.push(e)}var $e=e=>{for(;0<e.length;)e.shift()(p)},Ce=()=>{var e=br(),t=a()[e+52>>>2>>>0];e=a()[e+56>>>2>>>0],Sr(t,t-e),Er(t)},Pe=(e,t)=>{pe=0,e=Ir(e,t),0<pe?I=e:Cr(e)};class Se{constructor(e){this.Jb=e-24}}function Ee(e,t,n){var r=new Se(e>>>=0);throw t>>>=0,n>>>=0,a()[r.Jb+16>>>2>>>0]=0,a()[r.Jb+4>>>2>>>0]=t,a()[r.Jb+8>>>2>>>0]=n,e}function Fe(e,t,n,r){return g?he(2,1,e,t,n,r):Ae(e,t,n,r)}function Ae(e,t,n,r){if(e>>>=0,t>>>=0,n>>>=0,r>>>=0,void 0===_)return P("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var s=[];return g&&0===s.length?Fe(e,t,n,r):(e={hc:n,Ab:e,Qb:r,mc:s},g?(e.Mb="spawnThread",postMessage(e,s),0):ce(e))}var Ie=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,ze=(e,t,n)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&Ie)return Ie.decode(e.buffer instanceof _?e.slice(t,n):e.subarray(t,n));for(r="";t<n;){var s=e[t++];if(128&s){var o=63&e[t++];if(192==(224&s))r+=String.fromCharCode((31&s)<<6|o);else{var i=63&e[t++];65536>(s=224==(240&s)?(15&s)<<12|o<<6|i:(7&s)<<18|o<<12|i<<6|63&e[t++])?r+=String.fromCharCode(s):(s-=65536,r+=String.fromCharCode(55296|s>>10,56320|1023&s))}}else r+=String.fromCharCode(s)}return r},Le=(e,t)=>(e>>>=0)?ze(r(),e,t):"";function Oe(e,t,n){return g?he(3,1,e,t,n):0}function Be(e,t){if(g)return he(4,1,e,t)}var De=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},Ne=(e,t,n,r)=>{if(!(0<r))return 0;var s=n>>>=0;r=n+r-1;for(var o=0;o<e.length;++o){var i=e.charCodeAt(o);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++o)),127>=i){if(n>=r)break;t[n++>>>0]=i}else{if(2047>=i){if(n+1>=r)break;t[n++>>>0]=192|i>>6}else{if(65535>=i){if(n+2>=r)break;t[n++>>>0]=224|i>>12}else{if(n+3>=r)break;t[n++>>>0]=240|i>>18,t[n++>>>0]=128|i>>12&63}t[n++>>>0]=128|i>>6&63}t[n++>>>0]=128|63&i}}return t[n>>>0]=0,n-s},Re=(e,t,n)=>Ne(e,r(),t,n);function je(e,t){if(g)return he(5,1,e,t)}function Ve(e,t,n){if(g)return he(6,1,e,t,n)}function Ge(e,t,n){return g?he(7,1,e,t,n):0}function Ue(e,t){if(g)return he(8,1,e,t)}function qe(e,t,n){if(g)return he(9,1,e,t,n)}function We(e,t,n,r){if(g)return he(10,1,e,t,n,r)}function He(e,t,n,r){if(g)return he(11,1,e,t,n,r)}function Xe(e,t,n,r){if(g)return he(12,1,e,t,n,r)}function Qe(e){if(g)return he(13,1,e)}function Ke(e,t){if(g)return he(14,1,e,t)}function Ye(e,t,n){if(g)return he(15,1,e,t,n)}var Je,Ze,et=()=>{Z("")},tt=e=>{for(var t="";r()[e>>>0];)t+=Je[r()[e++>>>0]];return t},nt={},rt={},st={};function ot(e,t,n={}){if(!("argPackAdvance"in t))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(e,t,n={}){var r=t.name;if(!e)throw new Ze(`type "${r}" must have a positive integer typeid pointer`);if(rt.hasOwnProperty(e)){if(n.Sb)return;throw new Ze(`Cannot register type '${r}' twice`)}rt[e]=t,delete st[e],nt.hasOwnProperty(e)&&(t=nt[e],delete nt[e],t.forEach((e=>e())))}(e,t,n)}var it=(e,n,l)=>{switch(n){case 1:return l?e=>t()[e>>>0]:e=>r()[e>>>0];case 2:return l?e=>s()[e>>>1>>>0]:e=>o()[e>>>1>>>0];case 4:return l?e=>i()[e>>>2>>>0]:e=>a()[e>>>2>>>0];case 8:return l?e=>j[e>>>3]:e=>V[e>>>3];default:throw new TypeError(`invalid integer width (${n}): ${e}`)}};function at(e,t,n){n>>>=0,ot(e>>>=0,{name:t=tt(t>>>0),fromWireType:e=>e,toWireType:function(e,t){if("bigint"!=typeof t&&"number"!=typeof t)throw t=null===t?"null":"object"==(e=typeof t)||"array"===e||"function"===e?t.toString():""+t,new TypeError(`Cannot convert "${t}" to ${this.name}`);return"number"==typeof t&&(t=BigInt(t)),t},argPackAdvance:lt,readValueFromPointer:it(t,n,-1==t.indexOf("u")),Db:null})}var lt=8;function dt(e,t,n,s){ot(e>>>=0,{name:t=tt(t>>>0),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?n:s},argPackAdvance:lt,readValueFromPointer:function(e){return this.fromWireType(r()[e>>>0])},Db:null})}var ut=[],ct=[];function pt(e){9<(e>>>=0)&&0==--ct[e+1]&&(ct[e]=void 0,ut.push(e))}var ht=e=>{if(!e)throw new Ze("Cannot use deleted val. handle = "+e);return ct[e]},mt=e=>{switch(e){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let t=ut.pop()||ct.length;return ct[t]=e,ct[t+1]=1,t}};function ft(e){return this.fromWireType(a()[e>>>2>>>0])}var gt={name:"emscripten::val",fromWireType:e=>{var t=ht(e);return pt(e),t},toWireType:(e,t)=>mt(t),argPackAdvance:lt,readValueFromPointer:ft,Db:null};function _t(e){return ot(e>>>0,gt)}var wt=(e,t)=>{switch(t){case 4:return function(e){return this.fromWireType(l()[e>>>2>>>0])};case 8:return function(e){return this.fromWireType(d()[e>>>3>>>0])};default:throw new TypeError(`invalid float width (${t}): ${e}`)}};function yt(e,t,n){n>>>=0,ot(e>>>=0,{name:t=tt(t>>>0),fromWireType:e=>e,toWireType:(e,t)=>t,argPackAdvance:lt,readValueFromPointer:wt(t,n),Db:null})}function bt(e,t,n,r,s){if(e>>>=0,n>>>=0,t=tt(t>>>0),-1===s&&(s=4294967295),s=e=>e,0===r){var o=32-8*n;s=e=>e<<o>>>o}var i=t.includes("unsigned")?function(e,t){return t>>>0}:function(e,t){return t};ot(e,{name:t,fromWireType:s,toWireType:i,argPackAdvance:lt,readValueFromPointer:it(t,n,0!==r),Db:null})}function vt(e,n,r){function s(e){var n=a()[e>>>2>>>0];return e=a()[e+4>>>2>>>0],new o(t().buffer,e,n)}var o=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][n];ot(e>>>=0,{name:r=tt(r>>>0),fromWireType:s,argPackAdvance:lt,readValueFromPointer:s},{Sb:!0})}function xt(e,t){e>>>=0;var n="std::string"===(t=tt(t>>>0));ot(e,{name:t,fromWireType:function(e){var t=a()[e>>>2>>>0],s=e+4;if(n)for(var o=s,i=0;i<=t;++i){var l=s+i;if(i==t||0==r()[l>>>0]){if(o=Le(o,l-o),void 0===d)var d=o;else d+=String.fromCharCode(0),d+=o;o=l+1}}else{for(d=Array(t),i=0;i<t;++i)d[i]=String.fromCharCode(r()[s+i>>>0]);d=d.join("")}return xr(e),d},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var s="string"==typeof t;if(!(s||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array))throw new Ze("Cannot pass non-string to std::string");var o=n&&s?De(t):t.length,i=vr(4+o+1),l=i+4;if(a()[i>>>2>>>0]=o,n&&s)Re(t,l,o+1);else if(s)for(s=0;s<o;++s){var d=t.charCodeAt(s);if(255<d)throw xr(l),new Ze("String has UTF-16 code units that do not fit in 8 bits");r()[l+s>>>0]=d}else for(s=0;s<o;++s)r()[l+s>>>0]=t[s];return null!==e&&e.push(xr,i),i},argPackAdvance:lt,readValueFromPointer:ft,Db(e){xr(e)}})}var Mt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Tt=(e,t)=>{for(var n=e>>1,i=n+t/2;!(n>=i)&&o()[n>>>0];)++n;if(32<(n<<=1)-e&&Mt)return Mt.decode(r().slice(e,n));for(n="",i=0;!(i>=t/2);++i){var a=s()[e+2*i>>>1>>>0];if(0==a)break;n+=String.fromCharCode(a)}return n},kt=(e,t,n)=>{if(n??=2147483647,2>n)return 0;var r=t;n=(n-=2)<2*e.length?n/2:e.length;for(var o=0;o<n;++o){var i=e.charCodeAt(o);s()[t>>>1>>>0]=i,t+=2}return s()[t>>>1>>>0]=0,t-r},$t=e=>2*e.length,Ct=(e,t)=>{for(var n=0,r="";!(n>=t/4);){var s=i()[e+4*n>>>2>>>0];if(0==s)break;++n,65536<=s?(s-=65536,r+=String.fromCharCode(55296|s>>10,56320|1023&s)):r+=String.fromCharCode(s)}return r},Pt=(e,t,n)=>{if(t>>>=0,n??=2147483647,4>n)return 0;var r=t;n=r+n-4;for(var s=0;s<e.length;++s){var o=e.charCodeAt(s);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++s)),i()[t>>>2>>>0]=o,(t+=4)+4>n)break}return i()[t>>>2>>>0]=0,t-r},St=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t};function Et(e,t,n){if(e>>>=0,t>>>=0,n=tt(n>>>=0),2===t)var r=Tt,s=kt,i=$t,l=e=>o()[e>>>1>>>0];else 4===t&&(r=Ct,s=Pt,i=St,l=e=>a()[e>>>2>>>0]);ot(e,{name:n,fromWireType:e=>{for(var n,s=a()[e>>>2>>>0],o=e+4,i=0;i<=s;++i){var d=e+4+i*t;i!=s&&0!=l(d)||(o=r(o,d-o),void 0===n?n=o:(n+=String.fromCharCode(0),n+=o),o=d+t)}return xr(e),n},toWireType:(e,r)=>{if("string"!=typeof r)throw new Ze(`Cannot pass non-string to C++ string type ${n}`);var o=i(r),l=vr(4+o+t);return a()[l>>>2>>>0]=o/t,s(r,l+4,o+t),null!==e&&e.push(xr,l),l},argPackAdvance:lt,readValueFromPointer:ft,Db(e){xr(e)}})}function Ft(e,t){ot(e>>>=0,{Tb:!0,name:t=tt(t>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})}var At=()=>1;function It(e){Mr(e>>>0,!f,1,!m,131072,!1),Me()}var zt=e=>{if(!U)try{if(e(),!(0<pe))try{g?Cr(I):ge(I)}catch(e){e instanceof de||"unwind"==e||x(1,e)}}catch(e){e instanceof de||"unwind"==e||x(1,e)}};function Lt(e){e>>>=0,"function"==typeof Atomics.nc&&(Atomics.nc(i(),e>>>2,e).value.then(Ot),e+=128,Atomics.store(i(),e>>>2,1))}var Ot=()=>{var e=br();e&&(Lt(e),zt(Pr))};function Bt(e,t){(e>>>=0)==t>>>0?setTimeout(Ot):g?postMessage({targetThread:e,cmd:"checkMailbox"}):(e=ve[e])&&e.postMessage({cmd:"checkMailbox"})}var Dt=[];function Nt(e,t,n,r,s){for(t>>>=0,r/=2,Dt.length=r,n=s>>>0>>>3,s=0;s<r;s++)Dt[s]=j[n+2*s]?j[n+2*s+1]:d()[n+2*s+1>>>0];return(t?ie[t]:fr[e])(...Dt)}function Rt(e){e>>>=0,g?postMessage({cmd:"cleanupThread",thread:e}):xe(ve[e])}function jt(e){}var Vt=(e,t)=>{var n=rt[e];if(void 0===n)throw e=_r(e),n=tt(e),xr(e),new Ze(`${t} has unknown type ${n}`);return n},Gt=(e,t,n)=>{var r=[];return e=e.toWireType(r,n),r.length&&(a()[t>>>2>>>0]=mt(r)),e};function Ut(e,t,n){return t>>>=0,n>>>=0,e=ht(e>>>0),t=Vt(t,"emval::as"),Gt(t,n,e)}var qt=e=>{try{e()}catch(e){Z(e)}},Wt=0,Ht=null,Xt=0,Qt=[],Kt={},Yt={},Jt=0,Zt=null,en=[];function tn(e){return function(){if(!U){if(0===Wt){var t=!1,n=!1;(t=>{e().then(t)})(((e=0)=>{if(!U&&(Xt=e,t=!0,n)){Wt=2,qt((()=>Or(Ht))),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.resume(),e=!1;try{var r=(a=i()[Ht+8>>>2>>>0],a=gr[Yt[a]],--pe,a())}catch(a){r=a,e=!0}var s=!1;if(!Ht){var o=Zt;o&&(Zt=null,(e?o.reject:o.resolve)(r),s=!0)}if(e&&!s)throw r}var a})),n=!0,t||(Wt=1,Ht=function(){var e=vr(65548),t=e+12;a()[e>>>2>>>0]=t,a()[e+4>>>2>>>0]=t+65536,t=Qt[0];var n=Kt[t];return void 0===n&&(n=Jt++,Kt[t]=n,Yt[n]=t),t=n,i()[e+8>>>2>>>0]=t,e}(),typeof Browser<"u"&&Browser.Kb.Rb&&Browser.Kb.pause(),qt((()=>zr(Ht))))}else 2===Wt?(Wt=0,qt(Br),xr(Ht),Ht=null,en.forEach(zt)):Z(`invalid state: ${Wt}`);return Xt}}()}function nn(e){return e>>>=0,tn((()=>(e=ht(e)).then(mt)))}var rn=[];function sn(e,t,n,r){return n>>>=0,r>>>=0,(e=rn[e>>>0])(null,t=ht(t>>>0),n,r)}var on={},an=e=>{var t=on[e];return void 0===t?tt(e):t};function ln(e,t,n,r,s){return n>>>=0,r>>>=0,s>>>=0,(e=rn[e>>>0])(t=ht(t>>>0),t[n=an(n)],r,s)}var dn=()=>"object"==typeof globalThis?globalThis:Function("return this")();function un(e){return 0==(e>>>=0)?mt(dn()):(e=an(e),mt(dn()[e]))}var cn=e=>{var t=rn.length;return rn.push(e),t},pn=(e,t)=>{for(var n=Array(e),r=0;r<e;++r)n[r]=Vt(a()[t+4*r>>>2>>>0],"parameter "+r);return n},hn=(e,t)=>Object.defineProperty(t,"name",{value:e});function mn(e,t,n){var r=(t=pn(e,t>>>0)).shift();e--;var s="return function (obj, func, destructorsRef, args) {\n",o=0,i=[];0===n&&i.push("obj");for(var a=["retType"],l=[r],d=0;d<e;++d)i.push("arg"+d),a.push("argType"+d),l.push(t[d]),s+=`  var arg${d} = argType${d}.readValueFromPointer(args${o?"+"+o:""});\n`,o+=t[d].argPackAdvance;return s+=`  var rv = ${1===n?"new func":"func.call"}(${i.join(", ")});\n`,r.Tb||(a.push("emval_returnValue"),l.push(Gt),s+="  return emval_returnValue(retType, destructorsRef, rv);\n"),a.push(s+"};\n"),e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof t} which is not a function`);var n=hn(t.name||"unknownFunctionName",(function(){}));return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(a)(...l),n=`methodCaller<(${t.map((e=>e.name)).join(", ")}) => ${r.name}>`,cn(hn(n,e))}function fn(e){return e=an(e>>>0),mt(p[e])}function gn(e,t){return t>>>=0,e=ht(e>>>0),t=ht(t),mt(e[t])}function _n(e){9<(e>>>=0)&&(ct[e+1]+=1)}function wn(){return mt([])}function yn(e){e=ht(e>>>0);for(var t=Array(e.length),n=0;n<e.length;n++)t[n]=e[n];return mt(t)}function bn(e){return mt(an(e>>>0))}function vn(){return mt({})}function xn(e){for(var t=ht(e>>>=0);t.length;){var n=t.pop();t.pop()(n)}pt(e)}function Mn(e,t,n){t>>>=0,n>>>=0,e=ht(e>>>0),t=ht(t),n=ht(n),e[t]=n}function Tn(e,t){return t>>>=0,e=(e=Vt(e>>>0,"_emval_take_value")).readValueFromPointer(t),mt(e)}function kn(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),i()[t>>>2>>>0]=e.getUTCSeconds(),i()[t+4>>>2>>>0]=e.getUTCMinutes(),i()[t+8>>>2>>>0]=e.getUTCHours(),i()[t+12>>>2>>>0]=e.getUTCDate(),i()[t+16>>>2>>>0]=e.getUTCMonth(),i()[t+20>>>2>>>0]=e.getUTCFullYear()-1900,i()[t+24>>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[t+28>>>2>>>0]=e}var $n=e=>e%4==0&&(e%100!=0||e%400==0),Cn=[0,31,60,91,121,152,182,213,244,274,305,335],Pn=[0,31,59,90,120,151,181,212,243,273,304,334];function Sn(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),i()[t>>>2>>>0]=e.getSeconds(),i()[t+4>>>2>>>0]=e.getMinutes(),i()[t+8>>>2>>>0]=e.getHours(),i()[t+12>>>2>>>0]=e.getDate(),i()[t+16>>>2>>>0]=e.getMonth(),i()[t+20>>>2>>>0]=e.getFullYear()-1900,i()[t+24>>>2>>>0]=e.getDay();var n=($n(e.getFullYear())?Cn:Pn)[e.getMonth()]+e.getDate()-1|0;i()[t+28>>>2>>>0]=n,i()[t+36>>>2>>>0]=-60*e.getTimezoneOffset(),n=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(n!=r&&e.getTimezoneOffset()==Math.min(r,n)),i()[t+32>>>2>>>0]=e}function En(e){e>>>=0;var t=new Date(i()[e+20>>>2>>>0]+1900,i()[e+16>>>2>>>0],i()[e+12>>>2>>>0],i()[e+8>>>2>>>0],i()[e+4>>>2>>>0],i()[e>>>2>>>0],0),n=i()[e+32>>>2>>>0],r=t.getTimezoneOffset(),s=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=new Date(t.getFullYear(),0,1).getTimezoneOffset(),a=Math.min(o,s);return 0>n?i()[e+32>>>2>>>0]=+(s!=o&&a==r):0<n!=(a==r)&&(s=Math.max(o,s),t.setTime(t.getTime()+6e4*((0<n?a:s)-r))),i()[e+24>>>2>>>0]=t.getDay(),n=($n(t.getFullYear())?Cn:Pn)[t.getMonth()]+t.getDate()-1|0,i()[e+28>>>2>>>0]=n,i()[e>>>2>>>0]=t.getSeconds(),i()[e+4>>>2>>>0]=t.getMinutes(),i()[e+8>>>2>>>0]=t.getHours(),i()[e+12>>>2>>>0]=t.getDate(),i()[e+16>>>2>>>0]=t.getMonth(),i()[e+20>>>2>>>0]=t.getYear(),e=t.getTime(),BigInt(isNaN(e)?-1:e/1e3)}function Fn(e,t,n,r,s,o,i){return g?he(16,1,e,t,n,r,s,o,i):-52}function An(e,t,n,r,s,o){if(g)return he(17,1,e,t,n,r,s,o)}function In(e,t,n,r){e>>>=0,t>>>=0,n>>>=0,r>>>=0;var s=(new Date).getFullYear(),o=new Date(s,0,1),l=new Date(s,6,1);s=o.getTimezoneOffset();var d=l.getTimezoneOffset(),u=Math.max(s,d);a()[e>>>2>>>0]=60*u,i()[t>>>2>>>0]=+(s!=d),o=(e=e=>e.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(o),l=e(l),d<s?(Re(o,n,17),Re(l,r,17)):(Re(o,r,17),Re(l,n,17))}var zn=[],Ln=(e,t)=>{zn.length=0;for(var n;n=r()[e++>>>0];){var s=105!=n;t+=(s&=112!=n)&&t%8?4:0,zn.push(112==n?a()[t>>>2>>>0]:106==n?j[t>>>3]:105==n?i()[t>>>2>>>0]:d()[t>>>3>>>0]),t+=s?8:4}return zn};function On(e,t,n){return e>>>=0,t=Ln(t>>>0,n>>>0),ie[e](...t)}function Bn(e,t,n){return e>>>=0,t=Ln(t>>>0,n>>>0),ie[e](...t)}var Dn=()=>{},Nn=()=>Date.now();function Rn(e,t){return P(Le(e>>>0,t>>>0))}var jn,Vn=()=>{throw pe+=1,"unwind"};function Gn(){return 4294901760}jn=()=>performance.timeOrigin+performance.now();var Un=()=>navigator.hardwareConcurrency;function qn(){return Z("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Wn(e){e>>>=0;var t=r().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var s=t*(1+.2/n);s=Math.min(s,e+100663296);var o=Math;s=Math.max(e,s);e:{o=(o.min.call(o,4294901760,s+(65536-s%65536)%65536)-F.buffer.byteLength+65535)/65536;try{F.grow(o),q();var i=1;break e}catch{}i=void 0}if(i)return!0}return!1}var Hn=()=>(Z("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Xn={},Qn=e=>{e.forEach((e=>{var t=Hn();t&&(Xn[t]=e)}))};function Kn(){var e=Error().stack.toString().split("\n");return"Error"==e[0]&&e.shift(),Qn(e),Xn.Pb=Hn(),Xn.ec=e,Xn.Pb}function Yn(e,t,n){if(e>>>=0,t>>>=0,Xn.Pb==e)var r=Xn.ec;else"Error"==(r=Error().stack.toString().split("\n"))[0]&&r.shift(),Qn(r);for(var s=3;r[s]&&Hn()!=e;)++s;for(e=0;e<n&&r[e+s];++e)i()[t+4*e>>>2>>>0]=Hn();return e}var Jn,Zn={},er=()=>{if(!Jn){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(e in Zn)void 0===Zn[e]?delete t[e]:t[e]=Zn[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);Jn=n}return Jn};function tr(e,n){if(g)return he(18,1,e,n);e>>>=0,n>>>=0;var r=0;return er().forEach(((s,o)=>{var i=n+r;for(o=a()[e+4*o>>>2>>>0]=i,i=0;i<s.length;++i)t()[o++>>>0]=s.charCodeAt(i);t()[o>>>0]=0,r+=s.length+1})),0}function nr(e,t){if(g)return he(19,1,e,t);e>>>=0,t>>>=0;var n=er();a()[e>>>2>>>0]=n.length;var r=0;return n.forEach((e=>r+=e.length+1)),a()[t>>>2>>>0]=r,0}function rr(e){return g?he(20,1,e):52}function sr(e,t,n,r){return g?he(21,1,e,t,n,r):52}function or(e,t,n,r){return g?he(22,1,e,t,n,r):70}var ir=[null,[],[]];function ar(e,t,n,s){if(g)return he(23,1,e,t,n,s);t>>>=0,n>>>=0,s>>>=0;for(var o=0,i=0;i<n;i++){var l=a()[t>>>2>>>0],d=a()[t+4>>>2>>>0];t+=8;for(var u=0;u<d;u++){var c=r()[l+u>>>0],p=ir[e];0===c||10===c?((1===e?C:P)(ze(p,0)),p.length=0):p.push(c)}o+=d}return a()[s>>>2>>>0]=o,0}var lr=[31,29,31,30,31,30,31,31,30,31,30,31],dr=[31,28,31,30,31,30,31,31,30,31,30,31],ur=(e,n)=>{t().set(e,n>>>0)};function cr(e,t,n,r){function s(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function o(e,t){return s(e,t,"0")}function l(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function d(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function u(e){var t=e.Bb;for(e=new Date(new Date(e.Cb+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=($n(e.getFullYear())?lr:dr)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=d(new Date(e.getFullYear(),0,4)),n=d(n),0>=l(t,e)?0>=l(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0,r>>>=0;var c=a()[r+40>>>2>>>0];for(var p in r={kc:i()[r>>>2>>>0],jc:i()[r+4>>>2>>>0],Hb:i()[r+8>>>2>>>0],Lb:i()[r+12>>>2>>>0],Ib:i()[r+16>>>2>>>0],Cb:i()[r+20>>>2>>>0],ub:i()[r+24>>>2>>>0],Bb:i()[r+28>>>2>>>0],rc:i()[r+32>>>2>>>0],ic:i()[r+36>>>2>>>0],lc:c?Le(c):""},n=Le(n),c={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(p,"g"),c[p]);var h,m,f="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),g="January February March April May June July August September October November December".split(" ");for(p in c={"%a":e=>f[e.ub].substring(0,3),"%A":e=>f[e.ub],"%b":e=>g[e.Ib].substring(0,3),"%B":e=>g[e.Ib],"%C":e=>o((e.Cb+1900)/100|0,2),"%d":e=>o(e.Lb,2),"%e":e=>s(e.Lb,2," "),"%g":e=>u(e).toString().substring(2),"%G":u,"%H":e=>o(e.Hb,2),"%I":e=>(0==(e=e.Hb)?e=12:12<e&&(e-=12),o(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.Ib-1;t+=($n(e.Cb+1900)?lr:dr)[n++]);return o(e.Lb+t,3)},"%m":e=>o(e.Ib+1,2),"%M":e=>o(e.jc,2),"%n":()=>"\n","%p":e=>0<=e.Hb&&12>e.Hb?"AM":"PM","%S":e=>o(e.kc,2),"%t":()=>"\t","%u":e=>e.ub||7,"%U":e=>o(Math.floor((e.Bb+7-e.ub)/7),2),"%V":e=>{var t=Math.floor((e.Bb+7-(e.ub+6)%7)/7);if(2>=(e.ub+371-e.Bb-2)%7&&t++,t)53==t&&(4==(n=(e.ub+371-e.Bb)%7)||3==n&&$n(e.Cb)||(t=1));else{t=52;var n=(e.ub+7-e.Bb-1)%7;(4==n||5==n&&$n(e.Cb%400-1))&&t++}return o(t,2)},"%w":e=>e.ub,"%W":e=>o(Math.floor((e.Bb+7-(e.ub+6)%7)/7),2),"%y":e=>(e.Cb+1900).toString().substring(2),"%Y":e=>e.Cb+1900,"%z":e=>(0<=(e=e.ic)?"+":"-")+("0000"+((e=Math.abs(e)/60)/60*100+e%60)).slice(-4),"%Z":e=>e.lc,"%%":()=>"%"},n=n.replace(/%%/g,"\0\0"),c)n.includes(p)&&(n=n.replace(new RegExp(p,"g"),c[p](r)));return h=n=n.replace(/\0\0/g,"%"),m=Array(De(h)+1),Ne(h,m,0,m.length),(p=m).length>t?0:(ur(p,e),p.length-1)}function pr(e,t,n,r){return cr(e>>>0,t>>>0,n>>>0,r>>>0)}g||function(){for(var e=p.numThreads-1;e--;)ke();W.unshift((()=>{var e;Q++,e=()=>J(),g?e():Promise.all(_e.map(Te)).then(e)}))}();for(var hr=Array(256),mr=0;256>mr;++mr)hr[mr]=String.fromCharCode(mr);Je=hr,Ze=p.BindingError=class extends Error{constructor(e){super(e),this.name="BindingError"}},p.InternalError=class extends Error{constructor(e){super(e),this.name="InternalError"}},ct.push(0,1,void 0,1,null,1,!0,1,!1,1),p.count_emval_handles=()=>ct.length/2-5-ut.length;var fr=[me,fe,Fe,Oe,Be,je,Ve,Ge,Ue,qe,We,He,Xe,Qe,Ke,Ye,Fn,An,tr,nr,rr,sr,or,ar],gr=function(){function e(e,t){return gr=e.exports,gr=function(){var e=gr,t={};for(let[n,r]of Object.entries(e))t[n]="function"==typeof r?(...e)=>{Qt.push(n);try{return r(...e)}finally{U||(Qt.pop(),Ht&&1===Wt&&0===Qt.length&&(Wt=0,pe+=1,qt(Lr),typeof Fibers<"u"&&Fibers.sc()))}}:r;return t}(),n=gr,r=e=>t=>e(t)>>>0,s=e=>()=>e()>>>0,(n=Object.assign({},n)).Ca=r(n.Ca),n.fb=s(n.fb),n.gb=r(n.gb),n.emscripten_main_runtime_thread_id=s(n.emscripten_main_runtime_thread_id),n.sb=r(n.sb),n.tb=s(n.tb),gr=n,ye.push(gr.ib),H.unshift(gr.Ba),A=t,J(),gr;var n,r,s}var t,r,s,o=oe();if(Q++,p.instantiateWasm)try{return p.instantiateWasm(o,e)}catch(t){P(`Module.instantiateWasm callback failed with error: ${t}`),c(t)}return ee||=p.locateFile?te("ort-wasm-simd-threaded.jsep.wasm")?"ort-wasm-simd-threaded.jsep.wasm":p.locateFile?p.locateFile("ort-wasm-simd-threaded.jsep.wasm",M):M+"ort-wasm-simd-threaded.jsep.wasm":new URL(n(/*! ort-wasm-simd-threaded.jsep.wasm */"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),n.b).href,(t=o,r=function(t){e(t.instance,t.module)},s=ee,T||"function"!=typeof WebAssembly.instantiateStreaming||te(s)||ne(s)||"function"!=typeof fetch?se(s,t,r):fetch(s,{credentials:"same-origin"}).then((e=>WebAssembly.instantiateStreaming(e,t).then(r,(function(e){return P(`wasm streaming compile failed: ${e}`),P("falling back to ArrayBuffer instantiation"),se(s,t,r)}))))).catch(c),{}}(),_r=e=>(_r=gr.Ca)(e),wr=()=>(wr=gr.Da)();p._OrtInit=(e,t)=>(p._OrtInit=gr.Ea)(e,t),p._OrtGetLastError=(e,t)=>(p._OrtGetLastError=gr.Fa)(e,t),p._OrtCreateSessionOptions=(e,t,n,r,s,o,i,a,l,d)=>(p._OrtCreateSessionOptions=gr.Ga)(e,t,n,r,s,o,i,a,l,d),p._OrtAppendExecutionProvider=(e,t)=>(p._OrtAppendExecutionProvider=gr.Ha)(e,t),p._OrtAddFreeDimensionOverride=(e,t,n)=>(p._OrtAddFreeDimensionOverride=gr.Ia)(e,t,n),p._OrtAddSessionConfigEntry=(e,t,n)=>(p._OrtAddSessionConfigEntry=gr.Ja)(e,t,n),p._OrtReleaseSessionOptions=e=>(p._OrtReleaseSessionOptions=gr.Ka)(e),p._OrtCreateSession=(e,t,n)=>(p._OrtCreateSession=gr.La)(e,t,n),p._OrtReleaseSession=e=>(p._OrtReleaseSession=gr.Ma)(e),p._OrtGetInputOutputCount=(e,t,n)=>(p._OrtGetInputOutputCount=gr.Na)(e,t,n),p._OrtGetInputName=(e,t)=>(p._OrtGetInputName=gr.Oa)(e,t),p._OrtGetOutputName=(e,t)=>(p._OrtGetOutputName=gr.Pa)(e,t),p._OrtFree=e=>(p._OrtFree=gr.Qa)(e),p._OrtCreateTensor=(e,t,n,r,s,o)=>(p._OrtCreateTensor=gr.Ra)(e,t,n,r,s,o),p._OrtGetTensorData=(e,t,n,r,s)=>(p._OrtGetTensorData=gr.Sa)(e,t,n,r,s),p._OrtReleaseTensor=e=>(p._OrtReleaseTensor=gr.Ta)(e),p._OrtCreateRunOptions=(e,t,n,r)=>(p._OrtCreateRunOptions=gr.Ua)(e,t,n,r),p._OrtAddRunConfigEntry=(e,t,n)=>(p._OrtAddRunConfigEntry=gr.Va)(e,t,n),p._OrtReleaseRunOptions=e=>(p._OrtReleaseRunOptions=gr.Wa)(e),p._OrtCreateBinding=e=>(p._OrtCreateBinding=gr.Xa)(e),p._OrtBindInput=(e,t,n)=>(p._OrtBindInput=gr.Ya)(e,t,n),p._OrtBindOutput=(e,t,n,r)=>(p._OrtBindOutput=gr.Za)(e,t,n,r),p._OrtClearBoundOutputs=e=>(p._OrtClearBoundOutputs=gr._a)(e),p._OrtReleaseBinding=e=>(p._OrtReleaseBinding=gr.$a)(e),p._OrtRunWithBinding=(e,t,n,r,s)=>(p._OrtRunWithBinding=gr.ab)(e,t,n,r,s),p._OrtRun=(e,t,n,r,s,o,i,a)=>(p._OrtRun=gr.bb)(e,t,n,r,s,o,i,a),p._OrtEndProfiling=e=>(p._OrtEndProfiling=gr.cb)(e),p._JsepOutput=(e,t,n)=>(p._JsepOutput=gr.db)(e,t,n),p._JsepGetNodeName=e=>(p._JsepGetNodeName=gr.eb)(e);var yr,br=()=>(br=gr.fb)(),vr=p._malloc=e=>(vr=p._malloc=gr.gb)(e),xr=p._free=e=>(xr=p._free=gr.hb)(e),Mr=(e,t,n,r,s,o)=>(Mr=gr.kb)(e,t,n,r,s,o),Tr=()=>(Tr=gr.lb)(),kr=(e,t,n,r,s)=>(kr=gr.mb)(e,t,n,r,s),$r=e=>($r=gr.nb)(e),Cr=e=>(Cr=gr.ob)(e),Pr=()=>(Pr=gr.pb)(),Sr=(e,t)=>(Sr=gr.qb)(e,t),Er=e=>(Er=gr.rb)(e),Fr=e=>(Fr=gr.sb)(e),Ar=()=>(Ar=gr.tb)(),Ir=p.dynCall_ii=(e,t)=>(Ir=p.dynCall_ii=gr.vb)(e,t),zr=e=>(zr=gr.wb)(e),Lr=()=>(Lr=gr.xb)(),Or=e=>(Or=gr.yb)(e),Br=()=>(Br=gr.zb)();function Dr(){0<Q||(g?(u(p),g||$e(H),startWorker(p)):($e(W),0<Q||yr||(yr=!0,p.calledRun=!0,U||(g||$e(H),u(p),g||$e(X)))))}return p.___start_em_js=882450,p.___stop_em_js=882672,p.stackSave=()=>Ar(),p.stackRestore=e=>Er(e),p.stackAlloc=e=>Fr(e),p.UTF8ToString=Le,p.stringToUTF8=Re,p.lengthBytesUTF8=De,Y=function e(){yr||Dr(),yr||(Y=e)},Dr(),h},xe=ve,"em-pthread"===globalThis.self?.name&&ve()})),El=V((()=>{he(),Me=import.meta.url??(typeof document<"u"?document.currentScript?.src:typeof self<"u"?self.location?.href:void 0),Te=typeof location>"u"?void 0:location.origin,ke=(e,t)=>{try{let n=t??Me;return(n?new URL(e,n):new URL(e)).origin===Te}catch{return!1}},$e=async e=>{let t=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(t)},Ce=(we(),U(me)).default,Pe=async()=>{if(!Me)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(ke(Me))return[void 0,Ce()];let e=await $e(Me);return[e,Ce(e)]},Se=(Sl(),U(ye)).default,Ee=async(e,t,n)=>[void 0,Se]})),Fl=V((()=>{El(),Ae=!1,Ie=!1,ze=!1,Le=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Oe=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Be=async e=>{if(Ae)return Promise.resolve();if(Ie)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(ze)throw new Error("previous call to 'initializeWebAssembly()' failed.");Ie=!0;let t=e.initTimeout,n=e.numThreads;if(!Oe())throw new Error("WebAssembly SIMD is not supported in the current environment.");let r=Le();n>1&&!r&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+n+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=n=1);let s=e.wasmPaths,o="string"==typeof s?s:void 0,i=s?.mjs,a=i?.href??i,l=s?.wasm,d=l?.href??l,u=e.wasmBinary,[c,p]=await Ee(a,o,n>1),h=!1,m=[];if(t>0&&m.push(new Promise((e=>{setTimeout((()=>{h=!0,e()}),t)}))),m.push(new Promise(((e,t)=>{let r={numThreads:n};u?r.wasmBinary=u:(d||o)&&(r.locateFile=(e,t)=>d??(o??t)+e),p(r).then((t=>{Ie=!1,Ae=!0,Fe=t,e(),c&&URL.revokeObjectURL(c)}),(e=>{Ie=!1,ze=!0,t(e)}))}))),await Promise.race(m),h)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},De=()=>{if(Ae&&Fe)return Fe;throw new Error("WebAssembly is not initialized yet.")}})),Al=V((()=>{Fl(),Ne=(e,t)=>{let n=De(),r=n.lengthBytesUTF8(e)+1,s=n._malloc(r);return n.stringToUTF8(e,s,r),t.push(s),s},Re=(e,t,n,r)=>{if("object"==typeof e&&null!==e){if(n.has(e))throw new Error("Circular reference in options");n.add(e)}Object.entries(e).forEach((([e,s])=>{let o=t?t+e:e;if("object"==typeof s)Re(s,o+".",n,r);else if("string"==typeof s||"number"==typeof s)r(o,s.toString());else{if("boolean"!=typeof s)throw new Error("Can't handle extra config type: "+typeof s);r(o,s?"1":"0")}}))},je=e=>{let t=De(),n=t.stackSave();try{let n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);let r=t.HEAP32[n/4],s=t.HEAPU32[n/4+1],o=s?t.UTF8ToString(s):"";throw new Error(`${e} ERROR_CODE: ${r}, ERROR_MESSAGE: ${o}`)}finally{t.stackRestore(n)}}})),Il=V((()=>{Fl(),Al(),Ve=e=>{let t=De(),n=0,r=[],s=e||{};try{if(void 0===e?.logSeverityLevel)s.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===e?.logVerbosityLevel)s.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===e?.terminate&&(s.terminate=!1);let o=0;return void 0!==e?.tag&&(o=Ne(e.tag,r)),n=t._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,o),0===n&&je("Can't create run options."),void 0!==e?.extra&&Re(e.extra,"",new WeakSet,((e,s)=>{let o=Ne(e,r),i=Ne(s,r);0!==t._OrtAddRunConfigEntry(n,o,i)&&je(`Can't set a run config entry: ${e} - ${s}.`)})),[n,r]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),r.forEach((e=>t._free(e))),e}}})),zl=V((()=>{Fl(),Al(),Ge=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Ue=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},qe=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some((e=>"webgpu"===("string"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)},We=(e,t,n)=>{for(let r of t){let t="string"==typeof r?r:r.name;switch(t){case"webnn":if(t="WEBNN","string"!=typeof r){let t=r?.deviceType;if(t){let r=Ne("deviceType",n),s=Ne(t,n);0!==De()._OrtAddSessionConfigEntry(e,r,s)&&je(`Can't set a session config entry: 'deviceType' - ${t}.`)}}break;case"webgpu":if(t="JS","string"!=typeof r){let t=r;if(t?.preferredLayout){if("NCHW"!==t.preferredLayout&&"NHWC"!==t.preferredLayout)throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${t.preferredLayout}`);let r=Ne("preferredLayout",n),s=Ne(t.preferredLayout,n);0!==De()._OrtAddSessionConfigEntry(e,r,s)&&je(`Can't set a session config entry: 'preferredLayout' - ${t.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}let s=Ne(t,n);0!==De()._OrtAppendExecutionProvider(e,s)&&je(`Can't append execution provider: ${t}.`)}},He=e=>{let t=De(),n=0,r=[],s=e||{};qe(s);try{let e=Ge(s.graphOptimizationLevel??"all"),o=Ue(s.executionMode??"sequential"),i="string"==typeof s.logId?Ne(s.logId,r):0,a=s.logSeverityLevel??2;if(!Number.isInteger(a)||a<0||a>4)throw new Error(`log serverity level is not valid: ${a}`);let l=s.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let d="string"==typeof s.optimizedModelFilePath?Ne(s.optimizedModelFilePath,r):0;if(n=t._OrtCreateSessionOptions(e,!!s.enableCpuMemArena,!!s.enableMemPattern,o,!!s.enableProfiling,0,i,a,l,d),0===n&&je("Can't create session options."),s.executionProviders&&We(n,s.executionProviders,r),void 0!==s.enableGraphCapture){if("boolean"!=typeof s.enableGraphCapture)throw new Error(`enableGraphCapture must be a boolean value: ${s.enableGraphCapture}`);let e=Ne("enableGraphCapture",r),o=Ne(s.enableGraphCapture.toString(),r);0!==t._OrtAddSessionConfigEntry(n,e,o)&&je(`Can't set a session config entry: 'enableGraphCapture' - ${s.enableGraphCapture}.`)}if(s.freeDimensionOverrides)for(let[e,o]of Object.entries(s.freeDimensionOverrides)){if("string"!=typeof e)throw new Error(`free dimension override name must be a string: ${e}`);if("number"!=typeof o||!Number.isInteger(o)||o<0)throw new Error(`free dimension override value must be a non-negative integer: ${o}`);let s=Ne(e,r);0!==t._OrtAddFreeDimensionOverride(n,s,o)&&je(`Can't set a free dimension override: ${e} - ${o}.`)}return void 0!==s.extra&&Re(s.extra,"",new WeakSet,((e,s)=>{let o=Ne(e,r),i=Ne(s,r);0!==t._OrtAddSessionConfigEntry(n,o,i)&&je(`Can't set a session config entry: ${e} - ${s}.`)})),[n,r]}catch(e){throw 0!==n&&t._OrtReleaseSessionOptions(n),r.forEach((e=>t._free(e))),e}}})),Ll=V((()=>{Xe=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Qe=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},Ke=(e,t)=>{let n=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],r="number"==typeof t?t:t.reduce(((e,t)=>e*t),1);return n>0?Math.ceil(r*n):void 0},Ye=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Je=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Ze=e=>"float32"===e||"float16"===e||"int32"===e||"int64"===e||"uint32"===e||"uint8"===e||"bool"===e||"uint4"===e||"int4"===e,et=e=>"float32"===e||"float16"===e||"int32"===e||"int64"===e||"uint32"===e||"uint64"===e||"int8"===e||"uint8"===e||"bool"===e,tt=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}})),Ol=V((()=>{he(),nt=async e=>{if("string"==typeof e){{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let n=t.headers.get("Content-Length"),r=n?parseInt(n,10):0;if(r<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n,s=t.body.getReader();try{n=new ArrayBuffer(r)}catch(e){if(!(e instanceof RangeError))throw e;{let e=Math.ceil(r/65536);n=new WebAssembly.Memory({initial:e,maximum:e}).buffer}}let o=0;for(;;){let{done:e,value:t}=await s.read();if(e)break;let r=t.byteLength;new Uint8Array(n,o,r).set(t),o+=r}return new Uint8Array(n,0,r)}}}return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}})),Bl=V((()=>{Ll(),rt=["V","I","W","E","F"],st=(e,t)=>{console.log(`[${rt[e]},${(new Date).toISOString()}]${t}`)},at=(e,t)=>{ot=e,it=t},lt=(e,t)=>{let n=Je(e);n>=Je(ot)&&st(n,"function"==typeof t?t():t)},dt=(...e)=>{it&&lt(...e)}})),Dl=V((()=>{Ll(),ut=(e,t)=>new(Ye(t))(e)})),Nl=V((()=>{})),Rl=V((()=>{Bl(),Nl(),ct=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),pt=[],ht=e=>16*Math.ceil(e/16),mt=e=>{for(let t=0;t<pt.length;t++){let n=pt[t];if(e<=n)return n}return 16*Math.ceil(e/16)},ft=1,gt=()=>ft++,_t=async(e,t,n,r)=>{let s=ht(n),o=e.device.createBuffer({size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let i=e.getCommandEncoder();e.endComputePass(),i.copyBufferToBuffer(t,0,o,0,s),e.flush(),await o.mapAsync(GPUMapMode.READ);let a=o.getMappedRange();if(r){let e=r();return e.set(new Uint8Array(a,0,n)),e}return new Uint8Array(a.slice(0,n))}finally{o.destroy()}},wt=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[e]of ct)pt.push(e),this.freeBuffers.set(e,[]),this.freeUniformBuffers.set(e,[])}upload(e,t){let n=t.buffer,r=t.byteOffset,s=t.byteLength,o=ht(s),i=this.storageCache.get(e);if(!i)throw new Error("gpu data for uploading does not exist");if(i.originalSize!==s)throw new Error(`inconsistent data size. gpu data size=${i.originalSize}, data size=${s}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:o,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=a.getMappedRange();new Uint8Array(l).set(new Uint8Array(n,r,s)),a.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(a,0,i.gpuData.buffer,0,o),dt("verbose",(()=>`[WebGPU] GpuDataManager.upload(id=${e})`)),this.buffersForUploadingPending.push(a)}memcpy(e,t){let n=this.storageCache.get(e);if(!n)throw new Error("source gpu data for memcpy does not exist");let r=this.storageCache.get(t);if(!r)throw new Error("destination gpu data for memcpy does not exist");if(n.originalSize!==r.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=ht(n.originalSize),o=this.backend.getCommandEncoder();this.backend.endComputePass(),o.copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,s)}registerExternalBuffer(e,t,n){let r;if(n){if(r=n[0],e===n[1])return dt("verbose",(()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, buffer is the same, skip.`)),r;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error("Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!")}else r=gt();return this.storageCache.set(r,{gpuData:{id:r,type:0,buffer:e},originalSize:t}),dt("verbose",(()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, registered.`)),r}unregisterExternalBuffer(e){void 0!==e&&(this.storageCache.delete(e),dt("verbose",(()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`)))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let n,r=mt(e),s=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,o=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||o){let e=(s?this.freeBuffers:this.freeUniformBuffers).get(r);n=e&&e.length>0?e.pop():this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});let i={id:gt(),type:0,buffer:n};return this.storageCache.set(i.id,{gpuData:i,originalSize:e}),dt("verbose",(()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${i.id}`)),i}get(e){return this.storageCache.get(e)?.gpuData}release(e){let t=this.storageCache.get(e);if(!t)throw new Error("releasing data does not exist");return dt("verbose",(()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`)),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,t){let n=this.storageCache.get(e);if(!n)throw new Error("data does not exist");await _t(this.backend,n.gpuData.buffer,n.originalSize,t)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],0!==this.buffersPending.length)if("default"===this.backend.sessionStatus){for(let e of this.buffersPending){let t=ct.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let n=this.freeBuffers.get(e.size)||[];void 0===t||n.length>=t?e.destroy():n.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let n=this.freeUniformBuffers.get(e.size)||[];void 0===t||n.length>=t?e.destroy():n.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.freeUniformBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache.forEach((e=>{e.gpuData.buffer.destroy()})),this.capturedPendingBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach((e=>{e.destroy()})),this.capturedPendingBuffers.delete(e))}},yt=(...e)=>new wt(...e)})),jl=V((()=>{bt=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(";")),this.key}},vt=e=>new bt(e)})),Vl=V((()=>{xt=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},Mt=class{static calcShape(e,t,n=!1){let r=e.length,s=t.length;if(0===r)return t;if(0===s)return e;let o=Math.max(e.length,t.length),i=new Array(o);if(n){if(r<2||s<2)return;let n=xt.calcMatMulShape([e[r-2],e[r-1]],[t[s-2],t[s-1]]);if(void 0===n)return;[i[o-2],i[o-1]]=n}for(let a=n?3:1;a<=o;a++){let n=r-a<0?1:e[r-a],l=s-a<0?1:t[s-a];if(n!==l&&n>1&&l>1)return;let d=Math.max(n,l);if(n&&l)i[o-a]=Math.max(n,l);else{if(d>1)return;i[o-a]=0}}return i}static isValidBroadcast(e,t){let n=e.length,r=t.length;if(n>r)return!1;for(let s=1;s<=n;s++)if(1!==e[n-s]&&e[n-s]!==t[r-s])return!1;return!0}},Tt=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(e,t=4){let n=e.length;if(0===n)return[];let r=new Array(n),s=n-1;for(;s>=0;){if(e[s]%t==0){r[s]=e[s]/t;break}if(t%e[s]!=0)throw new Error("cannot convert shape");r[s]=1,t/=e[s],s--}for(s--;s>=0;s--)r[s]=e[s];return r}static sizeFromDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,n,t.length)}static sizeToDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,n)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let s=t;s<n;s++){if(e[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");r*=e[s]}return r}static computeStrides(e){let t=e.length;if(0===t)return[];if(1===t)return[1];let n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((n=>this.normalizeAxis(n,t??e.length)))}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){let n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}},kt=class e{static adjustPoolAttributes(e,t,n,r,s,o){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error("strides should be greater than or equal to 1")}else r.push(1);for(let e=0;e<n.length;e++)if(e<s.length){if(s[e]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let e=0;e<2*n.length;e++)if(e<o.length){if(o[e]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[e]>=n[e]||o[e+n.length]>=n[e])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,n,r,s,o,i,a){if(a){if(o.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(s.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<t.length-2;l++)e.adjustPadAndReturnShape(t[l+(i?1:2)],n[l],r[l],s[l],o,l,l+t.length-2,a)}}static computePoolOutputShape(t,n,r,s,o,i,a){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let l=[n[0],n[1]];return e.computeShapeHelper(t,n,l,r,s,o,i,a),l}static computeConvOutputShape(t,n,r,s,o,i,a){if(t.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[t[0],n[0]];return e.computeShapeHelper(!1,t,l,r,s,o,i,a),l}static computeShapeHelper(t,n,r,s,o,i,a,l){if(t)for(let e=0;e<n.length-2;e++)r.push(1);else for(let t=0;t<n.length-2;t++)r.push(e.adjustPadAndReturnShape(n[t+2],s[t],o[t],i[t],a,t,t+n.length-2,l))}static adjustPadAndReturnShape(e,t,n,r,s,o,i,a){let l=n*(r-1)+1;if(!a||"NOTSET"===a)return Math.floor((e+s[o]+s[i]-l)/t+1);switch(a){case"VALID":return s[o]=0,s[i]=0,Math.floor((e-l)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let n=((e+t-1)/t-1)*t+r-e;return s[o]=Math.floor("SAME_LOWER"===a?(n+1)/2:n/2),s[i]=n-s[o],Math.floor((e+n-r)/t+1)}default:throw new Error("Unsupported AutoPad type")}}},$t=class{static getShapeOfGemmResult(e,t,n,r,s){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let o,i,a;t?(o=e[1],i=e[0]):(o=e[0],i=e[1]);let l=-1;if(r?(a=n[0],l=1):(a=n[1],l=0),n[l]!==i)throw new Error("dimension mismatch");if(o<=0||a<=0||i<=0)throw new Error("invalid shape specified");if(s&&!Mt.isValidBroadcast(s,[o,a]))throw new Error("gemm: invalid bias shape for broadcast");return[o,a,i]}},Ct=-34028234663852886e22,Pt=34028234663852886e22})),Gl=V((()=>{Ll(),Vl(),St=64,Et=(e,t)=>{if(3===t)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==t)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},Ft=(e,t=1)=>{let n=Et(e,t);return"string"==typeof n?n:n[0]},At=(e,t=1)=>{let n=Et(e,t);return"string"==typeof n?n:n[1]},It=(...e)=>{let t=[];return e.forEach((e=>{0!==e.length&&t.push({type:12,data:e},{type:12,data:Tt.computeStrides(e)})})),t},zt=e=>e%4==0?4:e%2==0?2:1,Lt=(e="f32",t,n="0")=>t&&1!==t?`vec${t}<${e}>(${n})`:`${e}(${n})`,Ot=(e,t,n)=>"f32"===e?n:1===t?`f32(${n})`:`vec${t}<f32>(${n})`,Bt=(e,t)=>4===t?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:2===t?`(${e}.x + ${e}.y)`:3===t?`(${e}.x + ${e}.y + ${e}.z)`:e,Dt=(e,t,n,r)=>e.startsWith("uniforms.")&&n>4?"string"==typeof t?"f16"===r?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:"f16"===r?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:n>1?`${e}[${t}]`:e,Nt=(e,t,n,r,s)=>{let o="number"==typeof n,i=o?n:n.length,a=[...new Array(i).keys()],l=i<2?"u32":i<=4?`vec${i}<u32>`:`array<u32, ${i}>`,d=Et(t,s),u="string"==typeof d?d:d[1],c="string"==typeof d?d:d[0],p={indices:l,value:u,storage:c,tensor:t},h=e=>"string"==typeof e?e:`${e}u`,m={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},f=o?"uniforms.":"",g=`${f}${e}_shape`,_=`${f}${e}_strides`,w="";for(let e=0;e<i-1;e++)w+=`\n    let dim${e} = current / ${Dt(_,e,i)};\n    let rest${e} = current % ${Dt(_,e,i)};\n    indices[${e}] = dim${e};\n    current = rest${e};\n    `;w+=`indices[${i-1}] = current;`;let y=i<2?"":`\n  fn o2i_${e}(offset: u32) -> ${p.indices} {\n    var indices: ${p.indices};\n    var current = offset;\n    ${w}\n    return indices;\n  }`,b=[];if(i>=2)for(let e=i-1;e>=0;e--)b.push(`${Dt(_,e,i)} * (indices[${e}])`);let v=i<2?"":`\n  fn i2o_${e}(indices: ${p.indices}) -> u32 {\n    return ${b.join("+")};\n  }`,x=(...e)=>0===i?"0u":`${p.indices}(${e.map(h).join(",")})`,M=(e,t)=>i<2?`${e}`:`${Dt(e,t,i)}`,T={},k=(t,n)=>(()=>{if(p.storage===p.value)return`${e}[${t}]=${n};`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), select(0u, 0xFFFFFFFFu, ${n} < 0));`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), 0u);`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`${e}[${t}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${n}));`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),$=t=>(()=>{if(p.storage===p.value)return`${e}[${t}]`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`i32(${e}[${t}].x)`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`u32(${e}[${t}].x)`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`vec4<bool>(bool(${e}[${t}] & 0xFFu), bool(${e}[${t}] & 0xFF00u), bool(${e}[${t}] & 0xFF0000u), bool(${e}[${t}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),C=i<2?"":`\n  fn get_${e}ByIndices(indices: ${p.indices}) -> ${u} {\n    return ${$(`i2o_${e}(indices)`)};\n  }`,P=i<2?"":(()=>{let t=a.map((e=>`d${e}: u32`)).join(", "),n=a.map((e=>`d${e}`)).join(", ");return`\n  fn get_${e}(${t}) -> ${u} {\n    return get_${e}ByIndices(${x(n)});\n  }`})(),S=i<2?"":`\n  fn set_${e}ByIndices(indices: ${p.indices}, value: ${u}) {\n    ${k(`i2o_${e}(indices)`,"value")}\n  }`,E=i<2?"":(()=>{let t=a.map((e=>`d${e}: u32`)).join(", "),n=a.map((e=>`d${e}`)).join(", ");return`\n  fn set_${e}(${t}, value: ${u}) {\n    set_${e}ByIndices(${x(n)}, value);\n  }`})();return{impl:()=>{let e=[],t=!1;return m.offsetToIndices&&(e.push(y),t=!0),m.indicesToOffset&&(e.push(v),t=!0),m.broadcastedIndicesToOffset&&(Object.values(T).forEach((t=>e.push(t))),t=!0),m.set&&(e.push(E),t=!0),m.setByIndices&&(e.push(S),t=!0),m.get&&(e.push(P),t=!0),m.getByIndices&&(e.push(C),t=!0),!o&&t&&e.unshift(`const ${g} = ${p.indices}(${n.join(",")});`,`const ${_} = ${p.indices}(${Tt.computeStrides(n).join(",")});`),e.join("\n")},type:p,offsetToIndices:t=>(m.offsetToIndices=!0,i<2?t:`o2i_${e}(${t})`),indicesToOffset:t=>(m.indicesToOffset=!0,i<2?t:`i2o_${e}(${t})`),broadcastedIndicesToOffset:(t,n)=>{m.broadcastedIndicesToOffset=!0;let r=`${n.name}broadcastedIndicesTo${e}Offset`;if(r in T)return`${r}(${t})`;let s=[];for(let e=i-1;e>=0;e--){let t=n.indicesGet("outputIndices",e+n.rank-i);s.push(`${M(_,e)} * (${t} % ${M(g,e)})`)}return T[r]=`fn ${r}(outputIndices: ${n.type.indices}) -> u32 {\n             return ${s.length>0?s.join("+"):"0u"};\n           }`,`${r}(${t})`},indices:x,indicesGet:M,indicesSet:(e,t,n)=>i<2?`${e}=${n};`:`${Dt(e,t,i)}=${n};`,set:(...t)=>{if(t.length!==i+1)throw new Error(`indices length must be ${i}`);let n=t[i];if("string"!=typeof n)throw new Error("value must be string");let r=t.slice(0,i).map(h).join(",");return 0===i?k("0u",n):1===i?k(r[0],n):(m.set=!0,m.setByIndices=!0,m.indicesToOffset=!0,`set_${e}(${r}, ${n})`)},setByOffset:k,setByIndices:(t,n)=>i<2?k(t,n):(m.setByIndices=!0,m.indicesToOffset=!0,`set_${e}ByIndices(${t}, ${n});`),get:(...t)=>{if(t.length!==i)throw new Error(`indices length must be ${i}`);let n=t.map(h).join(",");return 0===i?$("0u"):1===i?$(n[0]):(m.get=!0,m.getByIndices=!0,m.indicesToOffset=!0,`get_${e}(${n})`)},getByOffset:$,getByIndices:t=>i<2?$(t):(m.getByIndices=!0,m.indicesToOffset=!0,`get_${e}ByIndices(${t})`),usage:r,name:e,strides:_,shape:g,rank:i}},Rt=(e,t,n,r=1)=>Nt(e,t,n,"input",r),jt=(e,t,n,r=1)=>Nt(e,t,n,"output",r),Vt=(e,t,n,r=1)=>Nt(e,t,n,"internal",r),Gt=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${"number"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=St){let t="number"==typeof e?e:e[0],n="number"==typeof e?1:e[1],r="number"==typeof e?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||n>this.limits.maxComputeWorkgroupSizeY||r>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${n}, ${r}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*n*r>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${n}, ${r}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let s=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${t}, ${n}, ${r})\n  fn main(${s?"@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(local_invocation_id) local_id : vec3<u32>":"@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>"}) {\n    ${s?"let global_idx = global_id.x;\n         let workgroup_index = workgroup_id.x;":`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n             workgroup_id.y * num_workgroups[0] + workgroup_id.x;\n         let global_idx = workgroup_index * ${t*n*r}u + local_idx;`}\n  `}appendVariableUniforms(e){0!==e.rank&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if("internal"===e.usage)throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let n="input"===e.usage?"read":"read_write",r=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${n}> ${e.name}: array<${r}>;`}declareVariables(...e){return e.map((e=>this.declareVariable(e,this.variableIndex++))).join("\n")}registerInternalVariable(e){if("internal"!==e.usage)throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach((e=>this.registerInternalVariable(e))),this}registerUniform(e,t,n=1){return this.uniforms.push({name:e,type:t,length:n}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(0===this.uniforms.length)return"";let e=[];for(let{name:t,type:n,length:r}of this.uniforms)if(r&&r>4)"f16"===n?e.push(`@align(16) ${t}:array<mat2x4<${n}>, ${Math.ceil(r/8)}>`):e.push(`${t}:array<vec4<${n}>, ${Math.ceil(r/4)}>`);else{let s=null==r||1===r?n:`vec${r}<${n}>`;e.push(`${t}:${s}`)}return`\n      struct Uniforms { ${e.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map((e=>e.impl())).join("\n")+this.internalVariables.map((e=>e.impl())).join("\n")}get variablesInfo(){if(0===this.uniforms.length)return;let e=e=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(e)];return this.uniforms.map((t=>[e(t.type),t.length??1]))}},Ut=(e,t)=>new Gt(e,t),qt=(e,t)=>{let n=e.length,r=[];for(let s=0;s<n;s++){let o=n-1-s,i=e[o]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(o)}return r}})),Ul=V((()=>{Ll(),Vl(),jl(),Gl(),Wt=e=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.")},Ht=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Xt=(e,t)=>Tt.sortBasedOnPerm(e,Ht(e.length,t)),Qt=(e,t,n,r)=>{let s=`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`;for(let r=0;r<t;++r)s+=n.indicesSet("a",e[r],`i[${r}]`);return s+"return a;}"},Kt=(e,t)=>{let n=[],r=[];for(let s=0;s<e.length;++s)1!==e[s]&&n.push(e[s]),1!==e[t[s]]&&r.push(t[s]);return{newShape:n,newPerm:r}},Yt=(e,t)=>{let n=e.dataType,r=e.dims.length,s=Ht(r,t),o=Xt(e.dims,s),{newShape:i,newPerm:a}=Kt(e.dims,s),l=Tt.areEqual(a,[2,3,1]),d=Tt.areEqual(a,[3,1,2]),u=2===i.length&&a[0]>a[1]||l||d,c=u?i:e.dims,p=o;u&&(c=l?[i[0],i[1]*i[2]]:d?[i[0]*i[1],i[2]]:i,p=[c[1],c[0]]);let h,m=Rt("a",n,c.length),f=jt("output",n,p.length),g=16;return h=u?e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(m,f)}\n  var<workgroup> tile : array<array<${f.type.value}, 17>, 16>;\n  ${e.mainStart([g,g,1])}\n    let stride = (uniforms.output_shape[1] - 1) / 16 + 1;\n    let workgroup_id_x = workgroup_index % stride;\n    let workgroup_id_y = workgroup_index / stride;\n    let input_col = workgroup_id_y * 16u + local_id.x;\n    let input_row = workgroup_id_x * 16u + local_id.y;\n    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {\n      tile[local_id.y][local_id.x] = ${m.getByIndices(`${m.type.indices}(input_row, input_col)`)};\n    }\n    workgroupBarrier();\n\n    let output_col = workgroup_id_x * 16u + local_id.x;\n    let output_row = workgroup_id_y * 16u + local_id.y;\n    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {\n      ${f.setByIndices(`${f.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}\n    }\n  }`:e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(m,f)}\n\n  ${Qt(s,r,m,f)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${f.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${f.setByOffset("global_idx",m.getByIndices("aIndices"))}\n  }`,{name:u?"TransposeShared":"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let t=Tt.size(o);return{outputs:[{dims:o,dataType:e.dataType}],dispatchGroup:u?{x:Math.ceil(p[1]/g),y:Math.ceil(p[0]/g)}:{x:Math.ceil(t/64)},programUniforms:[{type:12,data:t},...It(c,p)]}},getShaderSource:h}},Jt=(e,t)=>{Wt(e.inputs),e.compute(Yt(e.inputs[0],t.perm))},Zt=e=>vt({perm:e.perm})})),ql=V((()=>{Ll(),Vl(),Gl(),Wl(),Ul(),en={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},tn={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},nn={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},rn={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},sn=(e,t)=>{let n=[];for(let r=t-e;r<t;++r)n.push(r);return n},on=(e,t)=>{let n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]},an=(e,t)=>{let n=e.length+t.length,r=[],s=0;for(let o=0;o<n;o++)-1===t.indexOf(o)?r.push(e[s++]):r.push(1);return r},ln=(e,t)=>{for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0},dn=(e,t)=>{let n=[];if(!ln(e,t)){for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);e.forEach((e=>n.push(e)))}return n},un=(e,t,n,r,s,o,i)=>{let a=n[0].dims,l=Tt.size(o),d=Tt.size(i),u=Rt("_A",n[0].dataType,a),c=jt("output",s,o);return{name:e,shaderCache:t,getShaderSource:e=>`\n        ${e.registerUniform("reduceSize","u32").declareVariables(u,c)}\n        \n          var<workgroup> aBestValues : array<f32, 32>;\n       \n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${e.mainStart(32)}\n\n          let outputIndex = global_idx / 32;\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${nn[r]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + 32) {\n           let candidate = f32(${u.getByOffset("offset + k")});\n           bestValue = ${en[r]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, 32u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${tn[r]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${c.setByOffset("outputIndex",""+("mean"===r?`${c.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${c.type.storage}(${rn[r]})`))};\n         }\n        }`,getRunData:()=>({outputs:[{dims:o,dataType:s}],dispatchGroup:{x:l},programUniforms:[{type:12,data:d}]})}},cn=(e,t,n,r)=>{let s=1===e.inputs.length?n:kn(e.inputs,n),o=s.axes;0===o.length&&!s.noopWithEmptyAxes&&(o=e.inputs[0].dims.map(((e,t)=>t)));let i=Tt.normalizeAxes(o,e.inputs[0].dims.length),a=i,l=e.inputs[0],d=dn(a,e.inputs[0].dims.length);d.length>0&&(l=e.compute(Yt(e.inputs[0],d),{inputs:[0],outputs:[-1]})[0],a=sn(a.length,l.dims.length));let[u,c]=on(l.dims,a),p=u;s.keepDims&&(p=an(u,i)),e.compute(un(t,{hint:s.cacheKey,inputDependencies:["type"]},[l],r,e.inputs[0].dataType,p,c),{inputs:[l]})},pn=(e,t)=>{cn(e,"ReduceMeanShared",t,"mean")},hn=(e,t)=>{cn(e,"ReduceL1Shared",t,"l1")},mn=(e,t)=>{cn(e,"ReduceL2Shared",t,"l2")},fn=(e,t)=>{cn(e,"ReduceLogSumExpShared",t,"logSumExp")},gn=(e,t)=>{cn(e,"ReduceMaxShared",t,"max")},_n=(e,t)=>{cn(e,"ReduceMinShared",t,"min")},wn=(e,t)=>{cn(e,"ReduceProdShared",t,"prod")},yn=(e,t)=>{cn(e,"ReduceSumShared",t,"sum")},bn=(e,t)=>{cn(e,"ReduceSumSquareShared",t,"sumSquare")},vn=(e,t)=>{cn(e,"ReduceLogSumShared",t,"logSum")}})),Wl=V((()=>{Ll(),Vl(),jl(),Gl(),ql(),xn=e=>{if(!e||0===e.length||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(2===e.length&&1!==e[1].dims.length)throw new Error("Invalid axes input dims.")},Mn=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Tn=(e,t,n,r,s,o,i=!1,a=!1)=>{let l=[],d=n[0].dims,u=d.length,c=Tt.normalizeAxes(s,u),p=!a&&0===c.length;d.forEach(((e,t)=>{p||c.indexOf(t)>=0?i&&l.push(1):l.push(e)}));let h=l.length,m=Tt.size(l);return{name:e,shaderCache:t,getShaderSource:e=>{let t=[],s=Rt("_A",n[0].dataType,u),a=jt("output",o,h),l=r(s,a,c),m=l[2];for(let e=0,n=0;e<u;e++)p||c.indexOf(e)>=0?(i&&n++,m=`for(var j${e}: u32 = 0; j${e} < ${d[e]}; j${e}++) {\n                  ${l[2].includes("last_index")?`let last_index = j${e};`:""}\n                  ${s.indicesSet("input_indices",e,`j${e}`)}\n                  ${m}\n                }`):(t.push(`${s.indicesSet("input_indices",e,a.indicesGet("output_indices",n))};`),n++);return`\n\n        ${e.registerUniform("output_size","u32").declareVariables(s,a)}\n\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${s.type.indices};\n          let output_indices = ${a.offsetToIndices("global_idx")};\n\n          ${t.join("\n")}\n          ${l[0]}       // init ops for reduce max/min\n          ${l[1]}\n          ${m}\n          ${l[3]}\n          ${4===l.length?a.setByOffset("global_idx","value"):l.slice(4).join("\n")}\n        }`},getRunData:()=>({outputs:[{dims:l,dataType:o}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},...It(d,l)]})}},kn=(e,t)=>{let n=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),vt({axes:n,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},$n=(e,t,n,r)=>{let s=e.inputs,o=1===s.length?n:kn(s,n);e.compute(Tn(t,{hint:o.cacheKey,inputDependencies:["rank"]},[s[0]],o.noopWithEmptyAxes&&0===o.axes.length?Mn:r,o.axes,s[0].dataType,o.keepDims,o.noopWithEmptyAxes),{inputs:[0]})},Cn=(e,t)=>{xn(e.inputs),$n(e,"ReduceLogSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,"value = log(value);"]))},Pn=(e,t)=>{xn(e.inputs),$n(e,"ReduceL1",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += abs(${e.getByIndices("input_indices")});`,""]))},Sn=(e,t)=>{xn(e.inputs),$n(e,"ReduceL2",t,((e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"]))},En=(e,t)=>{xn(e.inputs),$n(e,"ReduceLogSumExp",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += exp(${e.getByIndices("input_indices")});`,"value = log(value);"]))},Fn=(e,t)=>{xn(e.inputs),$n(e,"ReduceMax",t,((e,t,n)=>{let r=[];for(let t=0;t<e.rank;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(e.indicesSet("input_indices",t,0));return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = max(value, ${e.getByIndices("input_indices")});`,""]}))},An=(e,t)=>{xn(e.inputs),$n(e,"ReduceMean",t,((t,n,r)=>{let s=1;for(let n=0;n<t.rank;n++)(r.indexOf(n)>=0||0===r.length)&&(s*=e.inputs[0].dims[n]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${s});`]}))},In=(e,t)=>{xn(e.inputs),$n(e,"ReduceMin",t,((e,t,n)=>{let r=[];for(let t=0;t<e.rank;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(`input_indices[${t}] = 0;`);return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = min(value, ${e.getByIndices("input_indices")});`,""]}))},zn=(e,t)=>{xn(e.inputs),$n(e,"ReduceProd",t,((e,t)=>[`var value = ${t.type.storage}(1);`,"",`value *= ${e.getByIndices("input_indices")};`,""]))},Ln=(e,t)=>{xn(e.inputs),$n(e,"ReduceSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,""]))},On=(e,t)=>{xn(e.inputs),$n(e,"ReduceSumSquare",t,((e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += t * t;`,""]))},Bn=(e,t,n)=>{if(0===t.length)return n;let r=1,s=1;for(let n=0;n<t.length;n++)-1===t.indexOf(n)?r*=e[n]:s*=e[n];return s<32&&r>1024},Dn=(e,t)=>{Bn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?An(e,t):pn(e,t)},Nn=(e,t)=>{Bn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Pn(e,t):hn(e,t)},Rn=(e,t)=>{Bn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sn(e,t):mn(e,t)},jn=(e,t)=>{Bn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?En(e,t):fn(e,t)},Vn=(e,t)=>{Bn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Fn(e,t):gn(e,t)},Gn=(e,t)=>{Bn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?In(e,t):_n(e,t)},Un=(e,t)=>{Bn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?zn(e,t):wn(e,t)},qn=(e,t)=>{Bn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ln(e,t):yn(e,t)},Wn=(e,t)=>{Bn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?On(e,t):bn(e,t)},Hn=(e,t)=>{Bn(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cn(e,t):vn(e,t)}})),Hl=V((()=>{Ll(),jl(),Wl(),Xn=e=>{if(!e||0===e.length||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},Qn=(e,t)=>{Xn(e.inputs);e.compute(Tn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],((e,n,r)=>{let s=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&s.push(`input_indices[${t}] = 0;`);return[`${s.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]}),[t.axis],7,t.keepDims),{inputs:[0]})},Kn=(e,t)=>{Xn(e.inputs);e.compute(Tn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],((e,n,r)=>{let s=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&s.push(`input_indices[${t}] = 0;`);return[`${s.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]}),[t.axis],7,t.keepDims),{inputs:[0]})},Yn=e=>vt(e)})),Xl=V((()=>{Ll(),Vl(),Nl(),Gl(),Jn=(e,t)=>{let n=e[0],r=e[1],s=e[2],o=e[3],i=e[4],a=e[5];if(i&&a)throw new Error("Attention cannot have both past and attention_bias");if(3!==n.dims.length)throw new Error('Input "input" must have 3 dimensions');let l=n.dims[0],d=n.dims[1],u=n.dims[2];if(1!==s.dims.length)throw new Error('Input "bias" is expected to have 1 dimensions');if(2!==r.dims.length)throw new Error('Input "weights" is expected to have 2 dimensions');if(r.dims[0]!==u)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(s.dims[0]!==r.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let c=s.dims[0]/3,p=c,h=p;if(t.qkvHiddenSizes.length>0){if(3!==t.qkvHiddenSizes.length)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let e of t.qkvHiddenSizes)if(e%t.numHeads!=0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");c=t.qkvHiddenSizes[0],p=t.qkvHiddenSizes[1],h=t.qkvHiddenSizes[2]}let m=d;if(c!==p)throw new Error("qkv_hidden_sizes first element should be same as the second");if(s.dims[0]!==c+p+h)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let f=0;if(i){if(p!==h)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(5!==i.dims.length)throw new Error('Input "past" must have 5 dimensions');if(2!==i.dims[0])throw new Error('Input "past" first dimension must be 2');if(i.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(i.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(i.dims[4]!==p/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(f=i.dims[3])}let g=m+f;if(o)throw new Error("Mask not supported");if(i)throw new Error("past is not supported");if(a){if(4!==a.dims.length)throw new Error('Input "attention_bias" must have 4 dimensions');if(a.dims[0]!==l||a.dims[1]!==t.numHeads||a.dims[2]!==d||a.dims[3]!==g)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:d,pastSequenceLength:f,kvSequenceLength:m,totalSequenceLength:g,maxSequenceLength:-1,inputHiddenSize:u,hiddenSize:c,vHiddenSize:h,headSize:Math.floor(c/t.numHeads),vHeadSize:Math.floor(h/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Zn=(e,t,n)=>{let r=zt(n),s=64,o=n/r;o<s&&(s=32);let i=[{type:1,data:1/n},{type:12,data:o},{type:12,data:Math.ceil(n/r/s)}],a=Ft(e.dataType,r),l=At(1,r);return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${s};${a};${r}`,inputDependencies:["type"]},getShaderSource:t=>{let n=jt("x",e.dataType,e.dims,r),o=At(e.dataType);return`\n  var<workgroup> thread_max: array<f32, ${s}>;\n  var<workgroup> thread_sum: array<f32, ${s}>;\n  ${t.registerUniforms([{name:"d_inv",type:"f32"},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}]).declareVariables(n)}\n  ${t.mainStart([s,1,1])}\n    let local_offset = local_idx * uniforms.elements_per_thread;\n    let offset = (global_idx / ${s}) * uniforms.d_comp + local_offset;\n\n    var thread_max_vector = ${l}(-3.402823e+38f);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${l}(x[offset + i]), thread_max_vector);\n    }\n    thread_max[local_idx] = ${(()=>{switch(r){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${r}`)}})()};\n    workgroupBarrier();\n\n    var max_value =  f32(-3.402823e+38f);\n    for (var i = 0u; i < ${s}; i++) {\n      max_value = max(thread_max[i], max_value);\n    }\n\n    var sum_vector = ${l}(0);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      sum_vector += exp(${l}(x[offset + i]) - max_value);\n    }\n    thread_sum[local_idx] = ${(()=>{switch(r){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${r}`)}})()};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${s}; i++) {\n      sum += thread_sum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        x[offset + i] = ${n.type.value}(${o}(uniforms.d_inv));\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        var f32input = ${l}(x[offset + i]);\n        x[offset + i] = ${n.type.value}(exp(f32input - max_value) / sum);\n      }\n    }\n  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:t},programUniforms:i})}},er=(e,t,n,r,s,o,i,a)=>{let l=a+o.kvSequenceLength,d=[o.batchSize,o.numHeads,o.sequenceLength,l],u=void 0===o.kvNumHeads&&e>1&&r,c=u?[o.batchSize,o.numHeads,l,o.headSize]:void 0,p=0===i.scale?1/Math.sqrt(o.headSize):i.scale,h=zt(o.headSize),m=o.headSize/h,f=12,g={x:Math.ceil(l/f),y:Math.ceil(o.sequenceLength/f),z:o.batchSize*o.numHeads},_=[{type:12,data:o.sequenceLength},{type:12,data:m},{type:12,data:l},{type:12,data:o.numHeads},{type:1,data:p},{type:12,data:a},{type:12,data:o.kvSequenceLength}],w=u&&r&&Tt.size(r.dims)>0,y=["type","type"];w&&y.push("type"),s&&y.push("type");let b=[{dims:d,dataType:t.dataType,gpuDataType:0}];u&&b.push({dims:c,dataType:t.dataType,gpuDataType:0});return{name:"AttentionProbs",shaderCache:{hint:`${h};${void 0!==s};${void 0!==r};${e}`,inputDependencies:y},getRunData:()=>({outputs:b,dispatchGroup:g,programUniforms:_}),getShaderSource:e=>{let o=Rt("q",t.dataType,t.dims,h),i=[o,Rt("key",n.dataType,n.dims,h)];if(w){let e=Rt("past_key",r.dataType,r.dims,h);i.push(e)}s&&i.push(Rt("attention_bias",s.dataType,s.dims));let a=jt("output",t.dataType,d),l=[a];u&&l.push(jt("present_key",t.dataType,c,h));let p=At(1,h);return`\n  const TILE_SIZE = 12u;\n\n  var<workgroup> tileQ: array<${o.type.storage}, 144>;\n  var<workgroup> tileK: array<${o.type.storage}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"}]).declareVariables(...i,...l)}\n  ${e.mainStart([f,f,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    ${w&&u?"\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx;\n    let pastKeyOffset = uniforms.past_sequence_length * uniforms.K * headIdx;":"\n    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;"}\n    ${u?"let presentKeyOffset = headIdx * uniforms.N * uniforms.K;":""}\n    var value = ${p}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        var idx = TILE_SIZE * local_id.y + local_id.x;\n      ${w&&u?"\n              if (n + local_id.y < uniforms.past_sequence_length) {\n                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];\n              } else {\n                tileK[idx] =\n                         key[kOffset + (n + local_id.y - uniforms.past_sequence_length) * uniforms.K + w + local_id.x];\n              }":"tileK[idx] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];"}\n      ${u?"present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];":""}\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n        value += ${p}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      var sum: f32 = ${(()=>{switch(h){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${h}`)}})()};\n        output[outputIdx] = ${a.type.value} (sum * uniforms.alpha) + ${s?"attention_bias[outputIdx]":"0.0"};\n    }\n  }`}}},tr=(e,t,n,r,s,o)=>{let i=o+s.kvSequenceLength,a=s.nReps?s.nReps:1,l=s.vHiddenSize*a,d=null==s.kvNumHeads&&e>1&&r,u=d?[s.batchSize,s.numHeads,i,s.headSize]:void 0,c=[s.batchSize,s.sequenceLength,l],p=12,h={x:Math.ceil(s.vHeadSize/p),y:Math.ceil(s.sequenceLength/p),z:s.batchSize*s.numHeads},m=[{type:12,data:s.sequenceLength},{type:12,data:i},{type:12,data:s.vHeadSize},{type:12,data:s.numHeads},{type:12,data:l},{type:12,data:o},{type:12,data:s.kvSequenceLength}],f=d&&r&&Tt.size(r.dims)>0,g=["type","type"];f&&g.push("type");let _=[{dims:c,dataType:t.dataType,gpuDataType:0}];d&&_.push({dims:u,dataType:t.dataType,gpuDataType:0});return{name:"AttentionScore",shaderCache:{hint:`${void 0!==r};${e}`,inputDependencies:g},getRunData:()=>({outputs:_,dispatchGroup:h,programUniforms:m}),getShaderSource:e=>{let s=Rt("probs",t.dataType,t.dims),o=[s,Rt("v",n.dataType,n.dims)];f&&o.push(Rt("past_value",r.dataType,r.dims));let i=[jt("output",t.dataType,c)];d&&i.push(jt("present_value",t.dataType,u));return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileQ: array<${s.type.value}, 144>;\n  var<workgroup> tileK: array<${s.type.value}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"}]).declareVariables(...o,...i)}\n  ${e.mainStart([p,p,1])}\n   let headIdx = workgroup_id.z;\n   let m = global_id.y;\n   let n = global_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   ${f&&d?"\n    let pastValueOffset = headIdx * uniforms.N * uniforms.past_sequence_length + n;\n    let vOffset = headIdx * uniforms.N * uniforms.kv_sequence_length + n;\n      ":"\n   let offsetB = headIdx * uniforms.N * uniforms.K + n;\n            "}\n    ${d?"let presentValueOffset = headIdx * uniforms.N * uniforms.K + n;":""}\n   var value = ${s.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        var idx = TILE_SIZE * local_id.y + local_id.x;\n        ${f&&d?"\n        if (w + local_id.y < uniforms.past_sequence_length) {\n          tileK[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];\n        } else {\n          tileK[idx] = v[vOffset + (w + local_id.y - uniforms.past_sequence_length) * uniforms.N];\n        }\n      ":"\n        tileK[idx] = v[offsetB + (w + local_id.y) * uniforms.N];\n      "}\n        ${d?"present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileK[idx];":""}\n      }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`}}},nr=(e,t,n,r,s,o,i,a,l,d,u)=>{let c=Math.min(e.outputCount,1+(i?1:0)+(a?1:0)),p=void 0!==d.kvNumHeads||c>1?d.pastSequenceLength:0,h=p+d.kvSequenceLength,m=l&&Tt.size(l.dims)>0?l:void 0,f=[t,n];void 0===d.kvNumHeads&&c>1&&i&&Tt.size(i.dims)>0&&f.push(i),m&&f.push(m);let g=e.compute(er(c,t,n,i,m,d,u,p),{inputs:f,outputs:void 0===d.kvNumHeads&&c>1?[-1,1]:[-1]})[0];e.compute(Zn(g,d.batchSize*d.numHeads*d.sequenceLength,h),{inputs:[g],outputs:[]});let _=[g,r];void 0===d.kvNumHeads&&c>1&&a&&Tt.size(a.dims)>0&&_.push(a),e.compute(tr(c,g,r,a,d,p),{inputs:_,outputs:void 0===d.kvNumHeads&&c>1?[0,2]:[0]})},rr=(e,t)=>{let n=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],r=t.sequenceLength,s=t.inputHiddenSize,o=t.headSize,i=12,a={x:Math.ceil(t.headSize/i),y:Math.ceil(t.sequenceLength/i),z:t.batchSize*t.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],d=[{type:12,data:r},{type:12,data:s},{type:12,data:o},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}];return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:d}),getShaderSource:e=>{let t=jt("output_q",l[0].dataType,n),r=jt("output_k",l[0].dataType,n),s=jt("output_v",l[0].dataType,n),o=Rt("input",l[0].dataType,l[0].dims),a=Rt("weight",l[1].dataType,l[1].dims),d=Rt("bias",l[2].dataType,l[2].dims),u=o.type.storage;return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileInput: array<${u}, 144>;\n  var<workgroup> tileWeightQ: array<${u}, 144>;\n  var<workgroup> tileWeightK: array<${u}, 144>;\n  var<workgroup> tileWeightV: array<${u}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(o,a,d,t,r,s)}\n  ${e.mainStart([i,i,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${u}(0);\n    var valueK = ${u}(0);\n    var valueV = ${u}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`}},{inputs:l,outputs:[-1,-1,-1]})},sr=(e,t)=>{let n=Jn(e.inputs,t),[r,s,o]=rr(e,n);return nr(e,r,s,o,e.inputs[4],void 0,void 0,void 0,e.inputs[5],n,t)}})),Ql=V((()=>{pe(),Ll(),Vl(),jl(),Gl(),or=(e,t)=>{if(!e||5!==e.length)throw new Error("BatchNormalization requires 5 inputs");let n=(e,t,n)=>{let r=t.length;if(r!==e.length)throw new Error(`${n}: num dimensions != ${r}`);t.forEach(((t,r)=>{if(t!==e[r])throw new Error(`${n}: dim[${r}] do not match`)}))};if(e[0].dims.length>1){let r="NHWC"===t.format?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);n(e[1].dims,r,"Invalid input scale"),n(e[2].dims,r,"Invalid input B"),n(e[3].dims,r,"Invalid input mean"),n(e[4].dims,r,"Invalid input var")}else n(e[1].dims,[1],"Invalid input scale"),n(e[2].dims,[1],"Invalid input B"),n(e[3].dims,[1],"Invalid input mean"),n(e[4].dims,[1],"Invalid input var")},ir=(e,t)=>{let{epsilon:n,spatial:r,format:s}=t,o=e[0].dims,i=r?zt(o[o.length-1]):1,a="NHWC"===s&&o.length>1?i:1,l=Tt.size(o)/i,d=r,u=d?o.length:o,c=Rt("x",e[0].dataType,e[0].dims,i),p=Rt("scale",e[1].dataType,e[1].dims,a),h=Rt("bias",e[2].dataType,e[2].dims,a),m=Rt("inputMean",e[3].dataType,e[3].dims,a),f=Rt("inputVar",e[4].dataType,e[4].dims,a),g=jt("y",e[0].dataType,u,i);return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${r}_${i}`,inputDependencies:d?["rank","type","type","type","type"]:void 0},getShaderSource:e=>`\n  const epsilon = ${n};\n  ${e.registerUniform("outputSize","u32").declareVariables(c,p,h,m,f,g)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${g.offsetToIndices(`global_idx * ${i}`)};\n    ${(()=>{let e="";if(r)e=`let cOffset = ${1===o.length?"0u":"NHWC"===s?`outputIndices[${o.length-1}] / ${i}`:"outputIndices[1]"};`;else if("NCHW"===s)e=`\n            ${g.indicesSet("outputIndices","0","0")}\n            let cOffset = ${g.indicesToOffset("outputIndices")};`;else{e=`var cIndices = ${p.type.indices}(0);\n                       cIndices[0] = outputIndices[${o.length-1}];`;for(let t=1;t<p.rank;t++)e+=`cIndices[${t}] = outputIndices[${t}];`;e+=`let cOffset = ${p.indicesToOffset("cIndices")};`}return e})()}\n    let scale = ${p.getByOffset("cOffset")};\n    let bias = ${h.getByOffset("cOffset")};\n    let inputMean = ${m.getByOffset("cOffset")};\n    let inputVar = ${f.getByOffset("cOffset")};\n    let x = ${c.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${g.setByOffset("global_idx","value")}\n  }`,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d?[{type:12,data:l},...It(o)]:[{type:12,data:l}]})}},ar=e=>vt(e),lr=(e,t)=>{let{inputs:n,outputCount:r}=e,s=ar({...t,outputCount:r});if(p.webgpu.validateInputContent&&or(n,s),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(ir(n,s))}})),Kl=V((()=>{Vl(),Gl(),dr=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},ur=e=>{let t=e[0].dims,n=e[0].dims[2],r=Tt.size(t)/4,s=e[0].dataType,o=Rt("input",s,t,4),i=Rt("bias",s,[n],4),a=Rt("residual",s,t,4),l=jt("output",s,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)}}),getShaderSource:e=>`\n  const channels = ${n}u / 4;\n  ${e.declareVariables(o,i,a,l)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(r)}\n    let value = ${o.getByOffset("global_idx")}\n      + ${i.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};\n    ${l.setByOffset("global_idx","value")}\n  }`}},cr=e=>{dr(e.inputs),e.compute(ur(e.inputs))}})),Yl=V((()=>{Ll(),Vl(),jl(),Gl(),pr=(e,t,n,r,s,o,i)=>{let a=Math.ceil(t/4),l="";l="string"==typeof s?`${s}(a)`:s("a");let d=Rt("inputData",n,[a],4),u=jt("outputData",r,[a],4),c=[{name:"vec_size",type:"u32"}];return i&&c.push(...i),`\n      ${e.registerUniforms(c).declareVariables(d,u)}\n\n  ${o??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${d.getByOffset("global_idx")};\n    ${u.setByOffset("global_idx",l)}\n  }`},hr=(e,t,n,r,s,o=e.dataType,i,a)=>{let l=[{type:12,data:Math.ceil(Tt.size(e.dims)/4)}];return i&&l.push(...i),{name:t,shaderCache:{hint:s,inputDependencies:["type"]},getShaderSource:t=>pr(t,Tt.size(e.dims),e.dataType,o,n,r,a),getRunData:t=>({outputs:[{dims:e.dims,dataType:o}],dispatchGroup:{x:Math.ceil(Tt.size(t[0].dims)/64/4)},programUniforms:l})}},mr=e=>{e.compute(hr(e.inputs[0],"Abs","abs"))},fr=e=>{e.compute(hr(e.inputs[0],"Acos","acos"))},gr=e=>{e.compute(hr(e.inputs[0],"Acosh","acosh"))},_r=e=>{e.compute(hr(e.inputs[0],"Asin","asin"))},wr=e=>{e.compute(hr(e.inputs[0],"Asinh","asinh"))},yr=e=>{e.compute(hr(e.inputs[0],"Atan","atan"))},br=e=>{e.compute(hr(e.inputs[0],"Atanh","atanh"))},vr=e=>vt(e),xr=(e,t)=>{let n;switch(t.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(hr(e.inputs[0],"Cast",n,void 0,t.cacheKey,t.to))},Mr=e=>{let t,n,r=e.length>=2&&0!==e[1].data,s=e.length>=3&&0!==e[2].data;switch(e[0].dataType){case 1:t=r?e[1].getFloat32Array()[0]:-34028234663852886e22,n=s?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=r?e[1].getUint16Array()[0]:64511,n=s?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return vt({min:t,max:n})},Tr=(e,t)=>{let n=t||Mr(e.inputs),r=At(e.inputs[0].dataType);e.compute(hr(e.inputs[0],"Clip",(e=>`clamp(${e}, vec4<${r}>(uniforms.min), vec4<${r}>(uniforms.max))`),void 0,n.cacheKey,void 0,[{type:e.inputs[0].dataType,data:n.min},{type:e.inputs[0].dataType,data:n.max}],[{name:"min",type:r},{name:"max",type:r}]),{inputs:[0]})},kr=e=>{e.compute(hr(e.inputs[0],"Ceil","ceil"))},$r=e=>{e.compute(hr(e.inputs[0],"Cos","cos"))},Cr=e=>{e.compute(hr(e.inputs[0],"Cosh","cosh"))},Pr=e=>vt(e),Sr=(e,t)=>{let n=At(e.inputs[0].dataType);e.compute(hr(e.inputs[0],"Elu",(e=>`elu_vf32(${e})`),`\n  const elu_alpha_ = ${n}(${t.alpha});\n\n  fn elu_f32(a: ${n}) -> ${n} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},Er=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,Fr=e=>{let t=At(e.inputs[0].dataType);e.compute(hr(e.inputs[0],"Erf",(e=>`erf_vf32(${e})`),Er(t)))},Ar=e=>{e.compute(hr(e.inputs[0],"Exp","exp"))},Ir=e=>{e.compute(hr(e.inputs[0],"Floor","floor"))},zr=e=>{let t=At(e.inputs[0].dataType);e.compute(hr(e.inputs[0],"Gelu",(e=>`0.5 * ${e} * (1.0 + erf_vf32(${e} * 0.7071067811865475))`),Er(t)))},Lr=(e,t)=>{let n=At(e.inputs[0].dataType);e.compute(hr(e.inputs[0],"LeakyRelu",(e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<${n}>(0.0))`),`const leaky_relu_alpha_ = ${n}(${t.alpha});`,t.cacheKey))},Or=e=>{e.compute(hr(e.inputs[0],"Not",(e=>`!${e}`)))},Br=e=>{e.compute(hr(e.inputs[0],"Neg",(e=>`-${e}`)))},Dr=e=>{e.compute(hr(e.inputs[0],"Reciprocal",(e=>`1.0/${e}`)))},Nr=e=>{let t=At(e.inputs[0].dataType);e.compute(hr(e.inputs[0],"Relu",(e=>`select(vec4<${t}>(0.0), ${e}, ${e} > vec4<${t}>(0.0))`)))},Rr=e=>{e.compute(hr(e.inputs[0],"Sigmoid",(e=>`(1.0 / (1.0 + exp(-${e})))`)))},jr=e=>vt(e),Vr=(e,t)=>{let n=At(e.inputs[0].dataType);e.compute(hr(e.inputs[0],"HardSigmoid",(e=>`max(vec4<${n}>(0.0), min(vec4<${n}>(1.0), ${t.alpha} * ${e} + vec4<${n}>(${t.beta})))`),void 0,t.cacheKey))},Gr=e=>{e.compute(hr(e.inputs[0],"Sin","sin"))},Ur=e=>{e.compute(hr(e.inputs[0],"Sinh","sinh"))},qr=e=>{e.compute(hr(e.inputs[0],"Sqrt","sqrt"))},Wr=e=>{e.compute(hr(e.inputs[0],"Tan","tan"))},Hr=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Xr=e=>{e.compute(hr(e.inputs[0],"Tanh",Hr))},Qr=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Hr("v")};\n}\n`,Kr=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Yr=e=>{let t=At(e.inputs[0].dataType);e.compute(hr(e.inputs[0],"FastGelu",Kr,Qr(t),void 0,e.inputs[0].dataType))},Jr=(e,t)=>{let n=At(e.inputs[0].dataType);return e.compute(hr(e.inputs[0],"ThresholdedRelu",(e=>`select(vec4<${n}>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`),`const thresholded_relu_alpha_ = vec4<${n}>(${t.alpha});`,t.cacheKey)),0},Zr=e=>{e.compute(hr(e.inputs[0],"Log","log"))},es=(e,t)=>`\nconst alpha = vec4<${e}>(${t});\nconst one = ${e}(1.0);\nconst zero = ${e}(0.0);\n\nfn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {\n  let v = x *alpha;\n  var x1 : vec4<${e}>;\n  for (var i = 0; i < 4; i = i + 1) {\n    if (v[i] >= zero) {\n      x1[i] = one / (one + exp(-v[i]));\n    } else {\n      x1[i] = one - one / (one + exp(v[i]));\n    }\n  }\n  return x * x1;\n}\n`,ts=e=>`quick_gelu_impl(${e})`,ns=(e,t)=>{let n=At(e.inputs[0].dataType);e.compute(hr(e.inputs[0],"QuickGelu",ts,es(n,t.alpha),t.cacheKey,e.inputs[0].dataType))}})),Jl=V((()=>{Vl(),Gl(),Yl(),rs=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},ss=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let n=Rt("input",e[0].dataType,e[0].dims,4),r=Rt("bias",e[0].dataType,[e[0].dims[2]],4),s=jt("output",e[0].dataType,t,4),o=Tt.size(t)/4,i=Ft(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:t=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${t.declareVariables(n,r,s)}\n\n  ${Er(i)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${s.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},os=e=>{rs(e.inputs),e.compute(ss(e.inputs))}})),Zl=V((()=>{Ll(),Vl(),Gl(),is=(e,t,n,r,s,o,i,a,l,d,u,c)=>{let p,h;"string"==typeof a?p=h=(e,t)=>`${a}((${e}),(${t}))`:"function"==typeof a?p=h=a:(p=a.scalar,h=a.vector);let m,f=jt("outputData",u,r.length,4),g=Rt("aData",l,t.length,4),_=Rt("bData",d,n.length,4);if(s)if(o){let e=1===Tt.size(t),r=1===Tt.size(n),s=t.length>0&&t[t.length-1]%4==0,o=n.length>0&&n[n.length-1]%4==0;m=e||r?f.setByOffset("global_idx",h(e?`${g.type.value}(${g.getByOffset("0")}.x)`:g.getByOffset("global_idx"),r?`${_.type.value}(${_.getByOffset("0")}.x)`:_.getByOffset("global_idx"))):`\n            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${g.broadcastedIndicesToOffset("outputIndices",f)};\n            let offsetB = ${_.broadcastedIndicesToOffset("outputIndices",f)};\n            ${f.setByOffset("global_idx",h(i||s?g.getByOffset("offsetA / 4u"):`${g.type.value}(${g.getByOffset("offsetA / 4u")}[offsetA % 4u])`,i||o?_.getByOffset("offsetB / 4u"):`${_.type.value}(${_.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else m=f.setByOffset("global_idx",h(g.getByOffset("global_idx"),_.getByOffset("global_idx")));else{if(!o)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let e=(e,t,n="")=>{let r=`aData[indexA${t}][componentA${t}]`,s=`bData[indexB${t}][componentB${t}]`;return`\n            let outputIndices${t} = ${f.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offsetA${t} = ${g.broadcastedIndicesToOffset(`outputIndices${t}`,f)};\n            let offsetB${t} = ${_.broadcastedIndicesToOffset(`outputIndices${t}`,f)};\n            let indexA${t} = offsetA${t} / 4u;\n            let indexB${t} = offsetB${t} / 4u;\n            let componentA${t} = offsetA${t} % 4u;\n            let componentB${t} = offsetB${t} % 4u;\n            ${e}[${t}] = ${n}(${p(r,s)});\n          `};m=9===u?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("outputData[global_idx]",0)}\n            ${e("outputData[global_idx]",1)}\n            ${e("outputData[global_idx]",2)}\n            ${e("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(g,_,f)}\n\n        ${c??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${m}\n      }`},as=(e,t,n,r,s,o,i=n.dataType)=>{let a=!Tt.areEqual(n.dims,r.dims),l=n.dims,d=Tt.size(n.dims),u=!1,c=!1,p=[a];if(a){let e=Mt.calcShape(n.dims,r.dims,!1);if(!e)throw new Error("Can't perform binary op on the given tensors");l=e,d=Tt.size(l);let t=1===Tt.size(n.dims),s=1===Tt.size(r.dims),o=n.dims.length>0&&n.dims[n.dims.length-1]%4==0,i=r.dims.length>0&&r.dims[r.dims.length-1]%4==0;p.push(t),p.push(s),p.push(o),p.push(i);let a=1;for(let e=1;e<l.length;e++){let t=n.dims[n.dims.length-e]??1;if(t!==(r.dims[r.dims.length-e]??1))break;a*=t}a%4==0?(c=!0,u=!0):(t||s||o||i)&&(u=!0)}else u=!0;return p.push(u),{name:e,shaderCache:{hint:t+p.map((e=>e.toString())).join("_"),inputDependencies:["rank","rank"]},getShaderSource:e=>is(e,n.dims,r.dims,l,u,a,c,s,n.dataType,r.dataType,i,o),getRunData:()=>({outputs:[{dims:l,dataType:i}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:12,data:Math.ceil(Tt.size(l)/4)},...It(n.dims,r.dims,l)]})}},ls=(e,t,n,r,s,o)=>{e.compute(as(t,s??"",e.inputs[0],e.inputs[1],n,r,o))},ds=e=>{ls(e,"Add",((e,t)=>`${e}+${t}`))},us=e=>{ls(e,"Div",((e,t)=>`${e}/${t}`))},cs=e=>{ls(e,"Equal",{scalar:(e,t)=>`u32(${e}==${t})`,vector:(e,t)=>`vec4<u32>(${e}==${t})`},void 0,void 0,9)},ps=e=>{ls(e,"Mul",((e,t)=>`${e}*${t}`))},hs=e=>{let t=Rt("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;ls(e,"Pow",{scalar:(e,t)=>`pow_custom(${e},${t})`,vector:(e,t)=>`pow_vector_custom(${e},${t})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${"i32"===t?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},ms=e=>{ls(e,"Sub",((e,t)=>`${e}-${t}`))},fs=e=>{ls(e,"Greater",{scalar:(e,t)=>`u32(${e}>${t})`,vector:(e,t)=>`vec4<u32>(${e}>${t})`},void 0,void 0,9)},gs=e=>{ls(e,"Less",{scalar:(e,t)=>`u32(${e}<${t})`,vector:(e,t)=>`vec4<u32>(${e}<${t})`},void 0,void 0,9)},_s=e=>{ls(e,"GreaterOrEqual",{scalar:(e,t)=>`u32(${e}>=${t})`,vector:(e,t)=>`vec4<u32>(${e}>=${t})`},void 0,void 0,9)},ws=e=>{ls(e,"LessOrEqual",{scalar:(e,t)=>`u32(${e}<=${t})`,vector:(e,t)=>`vec4<u32>(${e}<=${t})`},void 0,void 0,9)}})),ed=V((()=>{Ll(),Vl(),jl(),Gl(),ys=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let n=e[0],r=n.dataType,s=n.dims.length;e.forEach(((e,o)=>{if(0!==o){if(e.dataType!==r)throw new Error("input tensors should be one type");if(e.dims.length!==s)throw new Error("input tensors should have the same shape");e.dims.forEach(((e,r)=>{if(r!==t&&e!==n.dims[r])throw new Error("non concat dimensions must match")}))}}))},bs=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,vs=(e,t)=>{let n=e.length,r=[];for(let s=0;s<n;++s){let o=t.setByOffset("global_idx",e[s].getByIndices("indices"));1===n?r.push(o):0===s?r.push(`if (inputIndex == ${s}u) { ${o} }`):s===n-1?r.push(`else { ${o} }`):r.push(`else if (inputIndex == ${s}) { ${o} }`)}return r.join("\n")},xs=(e,t,n,r)=>{let s=Tt.size(n),o=new Array(e.length),i=new Array(e.length),a=0,l=[],d=[],u=[{type:12,data:s}];for(let n=0;n<e.length;++n)a+=e[n].dims[t],o[n]=a,d.push(e[n].dims.length),i[n]=Rt(`input${n}`,r,d[n]),l.push("rank"),u.push({type:12,data:o[n]});for(let t=0;t<e.length;++t)u.push(...It(e[t].dims));u.push(...It(n));let c=jt("output",r,n.length),p=c.indicesGet("indices",t),h=Array.from(Array(o.length).keys()).map((e=>`uniforms.sizeInConcatAxis${e}`)).join(",");return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:n,dataType:r}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u}),getShaderSource:t=>`\n\n  ${(()=>{t.registerUniform("outputSize","u32");for(let n=0;n<e.length;n++)t.registerUniform(`sizeInConcatAxis${n}`,"u32");return t.declareVariables(...i,c)})()}\n\n  ${bs(o.length,h)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${p});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${o.length}u>(${h});\n      ${p} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${vs(i,c)}\n  }`}},Ms=(e,t)=>{let n=e.inputs,r=n[0].dims,s=Tt.normalizeAxis(t.axis,r.length);ys(n,s);let o=r.slice();o[s]=n.reduce(((e,t)=>e+(t.dims.length>s?t.dims[s]:0)),0);let i=n.filter((e=>Tt.size(e.dims)>0));e.compute(xs(i,s,o,n[0].dataType),{inputs:i})},Ts=e=>vt({axis:e.axis})})),td=V((()=>{Ll(),Vl(),ks=(e,t,n="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${n}(uniforms.clip_min)), ${t}(${n}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${n}(uniforms.alpha) * value + ${n}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${n}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return"let e2x = exp(-2.0 * abs(value));\n              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);\n        ";case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},$s=(e,t)=>{"Clip"===e.activation?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):"HardSigmoid"===e.activation?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):"LeakyRelu"===e.activation&&t.push({type:1,data:e.alpha})},Cs=(e,t)=>{"Clip"===e.activation?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):"HardSigmoid"===e.activation?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):"LeakyRelu"===e.activation&&t.push({name:"alpha",type:"f32"})},Ps=e=>{let t=e?.activation||"";if("HardSigmoid"===t){let[n,r]=e?.activation_params||[.2,.5];return{activation:t,alpha:n,beta:r}}if("Clip"===t){let[n,r]=e?.activation_params||[Ct,Pt];return{activation:t,clipMax:r,clipMin:n}}if("LeakyRelu"===t){let[n]=e?.activation_params||[.01];return{activation:t,alpha:n}}return{activation:t}}})),nd=V((()=>{Ss=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Es=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `})),rd=V((()=>{Fs=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`})),sd=V((()=>{Ll(),Vl(),Gl(),td(),nd(),As=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,Is=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${3===t?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,zs=(e,t,n="f32",r,s=!1,o=32,i=!1,a=32)=>{let l=t[1]*e[1],d=t[0]*e[0],u=s?l:o,c=s?o:l,p=u/t[0],h=o/t[1];if((!s||4!==p||4!==e[1])&&(s||3!==p&&4!==p)||u%t[0]!=0||o%t[1]!=0||4!==e[0])throw new Error(`If transposeA ${s} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${p} must be 3 or 4.\n  tileAWidth ${u} must be divisible by workgroupSize[0]${t[0]}. tileInner ${o} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${p}<${n}>, ${u/p}>, ${c}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${n}>, ${d/e[0]}>, ${o}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${p};\nconst tileInner = ${o};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${i?"0":"i32(globalId.z)"};\n  ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${l};\n\n  let num_tiles = ${i?`${Math.ceil(a/o)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${i?`i32(globalId.z) * ${a}`:"0"};\n\n  var acc: array<vec4<${n}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${h};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${As(s,r)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${r?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${3===p?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Is(s,p)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Ls=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,Os=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Bs=(e,t,n="f32",r,s=!1,o=32,i=!1,a=32,l=!1)=>{let d=e[1]*t[1],u=e[0]*t[0],c=s?d:o,p=s?o:d;if(p%t[1]!=0||c%t[0]!=0||o%t[1]!=0)throw new Error(`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${o} must be divisible by workgroupSize[1]${t[1]}`);let h=p/t[1],m=c/t[0],f=o/t[1],g=l?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${d};\n    let globalColStart = i32(workgroupId.x) * ${u};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\n          ${Ls(s,r)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${r?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${n}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${s?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${d};\n\nlet tileRowA = i32(localId.y) * ${h};\nlet tileColA = i32(localId.x) * ${m};\nlet tileRowB = i32(localId.y) * ${f};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${m}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Ls(s,r)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${f}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${r?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${n}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${Os(s)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${n}, ${c}>, ${p}>;\n  var<workgroup> mm_Bsub : array<array<${n}, ${u}>, ${o}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${o};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${i?"0":"i32(globalId.z)"};\n    ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${i?`${Math.ceil(a/o)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${i?`i32(globalId.z) * ${a}`:"0"};\n\n    var acc : array<array<${n}, colPerThread>, rowPerThread>;\n    ${g}\n  }\n`},Ds=(e,t,n,r,s,o=!1)=>{let[i,a,l]=s,[d,u,c,p]=r,h=qt(i,l),m=qt(a,l),f=Ft(r[0].type.tensor);return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${d.type.indices}) -> ${Ss(e,f)} {\n      var value = ${Ss(e,f)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${(()=>{let e=u.rank,t=d.rank,n=`var aIndices: ${u.type.indices};`;for(let r=e-2-1,s=t-1;r>=0;r--,s--)n+=`\naIndices[${r}] = ${t>1?`batchIndices[${s}]`:"batchIndices"};`;return h.forEach((e=>{n+=`\naIndices[${e}] = 0;`})),n+=`\naIndices[${e-2}] = u32(row);\n                   aIndices[${e-1}] = u32(colIn);`,n})()}\n        value = ${u.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${d.type.indices}) -> ${Ss(e,f)} {\n      var value = ${Ss(e,f)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${(()=>{let e=c.rank,t=d.rank,n=`var bIndices: ${c.type.indices};`;for(let r=e-2-1,s=t-1;r>=0;r--,s--)n+=`\nbIndices[${r}] = ${t>1?`batchIndices[${s}]`:"batchIndices"};`;return m.forEach((e=>{n+=`\nbIndices[${e}] = 0;`})),n+=`\nbIndices[${e-2}] = u32(row);\n                   bIndices[${e-1}] = u32(colIn);`,n})()}\n        value = ${c.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ss(e,f)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${o?"bias[colIn]":`${Ss(e,f)}(bias[row])`};`:""}\n        ${n}\n        ${p.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Ns=(e,t,n,r,s=!1,o)=>{let i=e[0].dims,a=e[1].dims,l=i.slice(0,-2),d=a.slice(0,-2),u=r?r.slice(0,-2):n.slice(0,-2),c=Tt.size(u),p=i[i.length-2],h=i[i.length-1],m=a[a.length-1],f=h%4==0&&m%4==0,g=p<=8?[4,1,1]:[4,4,1],_=[8,8,1],w=[Math.ceil(m/_[0]/g[0]),Math.ceil(p/_[1]/g[1]),Math.ceil(c/_[2]/g[2])],y=f?4:1,b=[...l,p,h/y],v=b.length,x=[...d,h,m/y],M=x.length,T=[c,p,m/y],k=[{type:6,data:p},{type:6,data:m},{type:6,data:h}];$s(t,k),k.push(...It(u,b,x));let $=["rank","rank"],C=e.length>2;C&&(k.push(...It(e[2].dims)),$.push("rank")),k.push(...It(T));return{name:"MatMul",shaderCache:{hint:`${g};${t.activation};${f};${s}`,inputDependencies:$},getRunData:()=>({outputs:[{dims:o?o(n):n,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:k}),getShaderSource:n=>{let r=u.length,o=Vt("batchDims",e[0].dataType,r,1),i=Ft(e[0].dataType),a=Rt("a",e[0].dataType,v,y),c=Rt("b",e[1].dataType,M,y),p=jt("result",e[0].dataType,T.length,y),h=[a,c];if(C){let t=s?y:1;h.push(Rt("bias",e[2].dataType,e[2].dims.length,t))}let m=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Cs(t,m);let w=Ft(p.type.tensor),b=ks(t,p.type.value,w),x=Ds(y,C,b,[o,a,c,p],[l,d,u],s);return`\n  ${n.registerUniforms(m).registerInternalVariables(o).declareVariables(...h,p)}\n  ${x}\n  ${f?zs(g,_,i,o):Bs(g,_,i,o)}\n                   `}}}})),od=V((()=>{Ll(),Bl(),Gl(),td(),nd(),rd(),sd(),Rs=(e,t,n,r,s=!1,o,i=4,a=4,l=4,d="f32")=>{let u=e?"\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ":"\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    ",c=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",m=e?"row":"col",f=e?"col":"row",g=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${m} / outWidth;\n    let outCol = ${m} % outWidth;\n\n    let WRow = ${f} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${f} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${f} % inChannels;\n    var resData = ${Ss(i,d)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${p} && xCol >= 0 && xCol < ${h}) {\n      ${u}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${d}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(i)}\n    }\n    return resData;`,_=e?t&&r?`\n    let col = colIn * ${i};\n    ${g}`:`\n    let col = colIn * ${i};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${g}\n    }\n    return ${Ss(i,d)}(0.0);`:r&&n?`\n    let col = colIn * ${i};\n    ${g}`:`\n    let col = colIn * ${i};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${g}\n    }\n    return ${Ss(i,d)}(0.0);`,w=`${(e=>{switch(e){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(a)}`,y=Ss(l,d),b=Ss(e?i:a,d),v=Ss(e?a:i,d),x=ks(o,y,d);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${b} {\n      ${e?_:w}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${v} {\n      ${e?w:_}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${y}) {\n      let col = colIn * ${l};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${Es(s)}\n      ${x}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},js=(e,t,n,r,s,o,i,a,l)=>{let d="NHWC"===t.format,u=d?e[0].dims[3]:e[0].dims[1],c=n[0],p=d?n[2]:n[3],h=d?n[1]:n[2],m=d?n[3]:n[1],f=d&&(u%4==0||u%3==0)&&m%4==0,g=d?m:p*h,_=d?p*h:m,w=[8,8,1],y=r<=8?[4,1,1]:[4,4,1],b=[Math.ceil(g/w[0]/y[0]),Math.ceil(_/w[1]/y[1]),Math.ceil(c/w[2]/y[2])];dt("verbose",(()=>`[conv2d_mm_webgpu] dispatch = ${b}`));let v=f?d&&u%4!=0?3:4:1,x=w[1]*y[1],M=w[0]*y[0],T=Math.max(w[0]*v,w[1]),k=r%x==0,$=s%M==0,C=o%T==0,P=f?[v,4,4]:[1,1,1],S=[{type:6,data:r},{type:6,data:s},{type:6,data:o},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];$s(t,S),S.push(...It(e[0].dims,e[1].dims));let E=["rank","rank"];i&&(S.push(...It(e[2].dims)),E.push("rank")),S.push(...It(n));return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${v};${f};${k};${$};${C};${x};${M};${T}`,inputDependencies:E},getRunData:()=>({outputs:[{dims:l?l(n):n,dataType:e[0].dataType}],dispatchGroup:{x:b[0],y:b[1],z:b[2]},programUniforms:S}),getShaderSource:r=>{let s=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Cs(t,s);let o=f?4:1,l=Ft(e[0].dataType),u=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${f?`vec4<${l}>`:l}) {\n        result[flatIndex] = ${f?`vec4<${l}>`:l}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${f?`vec4<${l}>`:l}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${f?"/ 4":""}, value);\n      }`,c=[Rt("x",e[0].dataType,e[0].dims.length,3===v?1:v),Rt("w",e[1].dataType,e[1].dims.length,o)],p=jt("result",e[0].dataType,n.length,o);if(i){let t=Rt("bias",e[2].dataType,e[2].dims.length,o);c.push(t),u+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${f?`vec4<${l}>`:l} {\n          return bias[coords.${d?"w":"y"}${f?"/ 4":""}];\n        }`}return`\n        ${Fs("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${r.registerUniforms(s).declareVariables(...c,p)}\n        ${u}\n        ${Rs(d,k,$,C,i,t,P[0],P[1],P[2],l)}\n        ${f?zs(y,w,l,void 0,!d,T):Bs(y,w,l,void 0,!d,T,!1,void 0,a)}`}}}})),id=V((()=>{Ll(),Bl(),Vl(),Gl(),td(),nd(),Vs=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t},Gs=e=>"number"==typeof e?[e,e,e]:e,Us=(e,t)=>t<=1?e:e+(e-1)*(t-1),qs=(e,t,n,r=1)=>{let s=Us(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)},Ws=(e,t,n,r,s)=>{null==s&&(s=qs(e,t[0],r[0]));let o=[0,0,0,n];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(o[n]=Math.trunc((e[n]-t[n]+2*s)/r[n]+1));return o},Hs=(e,t,n,r,s,o,i,a,l,d)=>{let u,c,p,h;if("VALID"===e&&(e=0),"number"==typeof e){u={top:e,bottom:e,left:e,right:e,front:e,back:e};let m=Ws([t,n,r,1],[a,l,d],1,[s,o,i],e);c=m[0],p=m[1],h=m[2]}else if(Array.isArray(e)){if(!e.every(((e,t,n)=>e===n[0])))throw Error(`Unsupported padding parameter: ${e}`);u={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let m=Ws([t,n,r,1],[a,l,d],1,[s,o,i],e[0]);c=m[0],p=m[1],h=m[2]}else{if("SAME_UPPER"!==e)throw Error(`Unknown padding parameter: ${e}`);{c=Math.ceil(t/s),p=Math.ceil(n/o),h=Math.ceil(r/i);let e=(c-1)*s+a-t,m=(p-1)*o+l-n,f=(h-1)*i+d-r,g=Math.floor(e/2),_=e-g,w=Math.floor(m/2),y=m-w,b=Math.floor(f/2);u={top:w,bottom:y,left:b,right:f-b,front:g,back:_}}}return{padInfo:u,outDepth:c,outHeight:p,outWidth:h}},Xs=(e,t,n,r,s,o=!1,i="channelsLast")=>{let a,l,d,u,c;if("channelsLast"===i)[a,l,d,u,c]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[a,c,l,d,u]=e}let[p,,h,m,f]=t,[g,_,w]=Gs(n),[y,b,v]=Gs(r),x=Us(h,y),M=Us(m,b),T=Us(f,v),{padInfo:k,outDepth:$,outHeight:C,outWidth:P}=Hs(s,l,d,u,g,_,w,x,M,T),S=o?p*c:p,E=[0,0,0,0,0];return"channelsFirst"===i?E=[a,S,$,C,P]:"channelsLast"===i&&(E=[a,$,C,P,S]),{batchSize:a,dataFormat:i,inDepth:l,inHeight:d,inWidth:u,inChannels:c,outDepth:$,outHeight:C,outWidth:P,outChannels:S,padInfo:k,strideDepth:g,strideHeight:_,strideWidth:w,filterDepth:h,filterHeight:m,filterWidth:f,effectiveFilterDepth:x,effectiveFilterHeight:M,effectiveFilterWidth:T,dilationDepth:y,dilationHeight:b,dilationWidth:v,inShape:e,outShape:E,filterShape:t}},Qs=(e,t,n,r,s,o)=>{let i="channelsLast"===o,a=(i?e[0].dims[3]:e[0].dims[1],{x:n.map(((e,t)=>t))}),l=[Math.ceil(Vs(a.x.map((e=>n[e])))/64),1,1];dt("verbose",(()=>`[conv3d_naive_webgpu] dispatch = ${l}`));let d=[{type:12,data:Tt.size(n)},{type:12,data:r},{type:12,data:s},{type:12,data:t.strides},{type:12,data:t.dilations}];$s(t,d),d.push(...It(e[0].dims,e[1].dims));let u=["rank","rank"],c=3===e.length;c&&(d.push(...It(e[2].dims)),u.push("rank")),d.push(...It(n));return{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${i};1;${c}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:l[0],y:l[1],z:l[2]},programUniforms:d}),getShaderSource:o=>{let a=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:r.length},{name:"pads",type:"u32",length:s.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];Cs(t,a);let l=Ft(e[0].dataType),d=Rt("x",e[0].dataType,e[0].dims.length,1),u=Rt("W",e[1].dataType,e[1].dims.length,1),p=[d,u],h=jt("result",e[0].dataType,n.length,1),m="";if(c){let t=Rt("bias",e[2].dataType,e[2].dims.length,1);p.push(t),m+=`\n        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${l} {\n          return bias[${Dt("coords",i?4:1,5)}];\n        }`}let f=Ss(1,l),g=ks(t,f,l);return`\n            ${m}\n            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {\n              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);\n              return ${d.getByIndices("aIndices")};\n            }\n            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {\n              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);\n              return ${u.getByIndices("aIndices")};\n            }\n          ${o.registerUniforms(a).declareVariables(...p,h)}\n          ${o.mainStart()}\n          ${o.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n              let coords = ${h.offsetToIndices("global_idx")};\n              let batch = ${Dt("coords",0,d.rank)};\n              let d2 = ${Dt("coords",i?d.rank-1:1,d.rank)};\n              let xFRCCorner = vec3<u32>(${Dt("coords",i?1:2,d.rank)},\n              ${Dt("coords",i?2:3,d.rank)},\n              ${Dt("coords",i?3:4,d.rank)}) * uniforms.strides - uniforms.pads;\n              let xFCorner = xFRCCorner.x;\n              let xRCorner = xFRCCorner.y;\n              let xCCorner = xFRCCorner.z;\n              let xShapeY = ${Dt("uniforms.x_shape",i?1:2,d.rank)};\n              let xShapeZ = ${Dt("uniforms.x_shape",i?2:3,d.rank)};\n              let xShapeW = ${Dt("uniforms.x_shape",i?3:4,d.rank)};\n              let xShapeU = ${Dt("uniforms.x_shape",i?4:1,d.rank)};\n              let inputDepthNearestVec4 = (xShapeU / 4) * 4;\n              let inputDepthVec4Remainder = xShapeU % 4;\n\n              var value = 0.0;\n              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {\n                let xF = xFCorner + wF * uniforms.dilations[0];\n                if (xF < 0 || xF >= xShapeY) {\n                  continue;\n                }\n\n                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {\n                  let xR = xRCorner + wR * uniforms.dilations[1];\n                  if (xR < 0 || xR >= xShapeZ) {\n                    continue;\n                  }\n\n                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {\n                    let xC = xCCorner + wC * uniforms.dilations[2];\n                    if (xC < 0 || xC >= xShapeW) {\n                      continue;\n                    }\n\n                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {\n                      ${i?"let xValues = vec4<f32>(\n                               getX(batch, xF, xR, xC, d1),\n                               getX(batch, xF, xR, xC, d1 + 1),\n                               getX(batch, xF, xR, xC, d1 + 2),\n                               getX(batch, xF, xR, xC, d1 + 3));\n                            ":"let xValues = vec4<f32>(\n                               getX(batch, d1, xF, xR, xC),\n                               getX(batch, d1 + 1, xF, xR, xC),\n                               getX(batch, d1 + 2, xF, xR, xC),\n                               getX(batch, d1 + 3, xF, xR, xC));\n                            "}\n                            let wValues = vec4<f32>(\n                              getW(d2, d1, wF, wR, wC),\n                              getW(d2, d1 + 1, wF, wR, wC),\n                              getW(d2, d1 + 2, wF, wR, wC),\n                              getW(d2, d1 + 3, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    }\n                    if (inputDepthVec4Remainder == 1) {\n                        ${i?"value += getX(batch, xF, xR, xC, inputDepthNearestVec4)\n                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);":"value += getX(batch, inputDepthNearestVec4, xF, xR, xC)\n                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);"}\n                    } else if (inputDepthVec4Remainder == 2) {\n                      ${i?"let xValues = vec2<f32>(\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));\n                      ":"let xValues = vec2<f32>(\n                        getX(batch, inputDepthNearestVec4, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));\n                    "}\n                    let wValues = vec2<f32>(\n                      getW(d2, inputDepthNearestVec4, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    } else if (inputDepthVec4Remainder == 3) {\n                      ${i?"let xValues = vec3<f32>(\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));\n                      ":"let xValues = vec3<f32>(\n                        getX(batch, inputDepthNearestVec4, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));\n                    "}\n                    let wValues = vec3<f32>(\n                      getW(d2, inputDepthNearestVec4, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    }\n                  }\n                }\n              }\n              ${c?"value = value + getBiasByOutputCoords(coords)":""};\n              ${g}\n              result[global_idx] = f32(value);\n          }`}}}})),ad=V((()=>{Ll(),Vl(),Gl(),td(),Ks=(e,t,n,r)=>{let s=e.length>2,o=s?"value += b[output_channel];":"",i=e[0].dims,a=e[1].dims,l="NHWC"===t.format,d=l?n[3]:n[1],u=d/t.group,c=l&&u>=4?zt(d):1,p=Tt.size(n)/c,h=[{type:12,data:p},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:u}];$s(t,h),h.push(...It(i,[a[0],a[1],a[2],a[3]/c]));let m=s?["rank","rank","rank"]:["rank","rank"];h.push(...It([n[0],n[1],n[2],n[3]/c]));return{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${c}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:r=>{let d=jt("output",e[0].dataType,n.length,c),u=Ft(d.type.tensor),p=ks(t,d.type.value,u),h=Rt("x",e[0].dataType,i.length),m=Rt("w",e[1].dataType,a.length,c),f=[h,m];s&&f.push(Rt("b",e[2].dataType,e[2].dims,c));let g=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Cs(t,g);let _=l?`\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {\n            continue;\n          }\n\n          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {\n            let input_channel = in_channel_offset + wInChannel;\n            let xVal = ${h.get("batch","xHeight","xWidth","input_channel")};\n            let wVal = ${m.get("wHeight","wWidth","wInChannel","output_channel")};\n            value += xVal * wVal;\n          }\n        }\n      }\n      `:`\n      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n        let input_channel = in_channel_offset + wInChannel;\n        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {\n            continue;\n          }\n\n          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {\n              continue;\n            }\n\n            let xVal = ${h.get("batch","input_channel","xHeight","xWidth")};\n            let wVal = ${m.get("output_channel","wInChannel","wHeight","wWidth")};\n            value += xVal * wVal;\n          }\n        }\n      }\n      `;return`\n  ${r.registerUniforms(g).declareVariables(...f,d)}\n\n  ${r.mainStart()}\n    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${d.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${l?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel * ${c} / uniforms.output_channels_per_group;\n    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];\n\n    var value: ${d.type.value} = ${d.type.value}(0);\n    ${_}\n    ${o}\n    ${p}\n    ${d.setByOffset("global_idx","value")}\n  }`}}},Ys=(e,t,n,r)=>{let s=e.length>2,o=zt(n[3]),i=zt(n[2]),a=Tt.size(n)/o/i,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/o],d=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/o],u=[n[0],n[1],n[2],n[3]/o],c=[{type:12,data:a},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];$s(t,c),c.push(...It(l,d,u));let p=(i-1)*t.strides[1]+d[1];return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${o};${i};${p};${d[0]};${d[1]}`,inputDependencies:s?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:c}),getShaderSource:n=>{let r=jt("output",e[0].dataType,u.length,o),a=Ft(r.type.tensor),c=ks(t,r.type.value,a),h=Rt("x",e[0].dataType,l.length,o),m=Rt("w",e[1].dataType,d.length,o),f=[h,m];s&&f.push(Rt("b",e[2].dataType,e[2].dims,o));let g=s?"value += b[output_channel];":"",_=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Cs(t,_),`\n  ${n.registerUniforms(_).declareVariables(...f,r)}\n  ${n.mainStart()}\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${i}u;\n    let col = (index1 % width1) * ${i}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${h.type.value}, ${p}>;\n    var values: array<${r.type.value}, ${i}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w's height/width.\n    for (var w_height: u32 = 0u; w_height < ${d[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${p}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${h.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${h.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${d[1]}; w_width++) {\n          let w_val = ${m.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${i}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${i}u; i++) {\n      var value = values[i];\n      ${g}\n      ${c}\n      ${r.set("batch","row","col + i","output_channel","value")};\n    }\n  }`}}}})),ld=V((()=>{Ll(),Vl(),sd(),Gl(),td(),Js=(e,t,n,r,s=!1,o)=>{let i=e[0].dims,a=e[1].dims,l=i[i.length-2],d=a[a.length-1],u=i[i.length-1],c=zt(d),p=zt(u),h=zt(l),m=Tt.size(n)/c/h,f=e.length>2,g=r?r.slice(0,-2):n.slice(0,-2),_=[Tt.size(g),l,d],w=[{type:12,data:m},{type:12,data:l},{type:12,data:d},{type:12,data:u}];$s(t,w),w.push(...It(g,i,a)),f&&w.push(...It(e[2].dims)),w.push(...It(_));return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${c};${p};${h};${s}`,inputDependencies:f?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:o?o(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:w}),getShaderSource:r=>{let o=Vt("batch_dims",e[0].dataType,g.length),l=Rt("a",e[0].dataType,i.length,p),d=Rt("b",e[1].dataType,a.length,c),u=jt("output",e[0].dataType,_.length,c),m=Ft(u.type.tensor),w=ks(t,u.type.value,m),y=[l,d],b="";if(f){let t=s?c:1;y.push(Rt("bias",e[2].dataType,e[2].dims.length,t)),b=""+(s?`value += bias[col / ${t}];`:`value += ${u.type.value}(bias[row + i]);`)}let v=i.slice(0,-2),x=a.slice(0,-2),M=qt(v,g),T=qt(x,g),k=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Cs(t,k);let $=(e,t)=>{let n=e.rank,r=e.name;if(2===n)return`var ${r}_indices = ${e.type.indices}(0u, 0u);`;let s=o.rank,i=`var ${r}_indices: ${e.type.indices};`;for(let e=n-2-1,t=s-1;e>=0;e--,t--)i+=`\n${r}_indices[${e}] = ${s>1?`batch_indices[${t}]`:"batch_indices"};`;return t.forEach((e=>{i+=`\n${r}_indices[${e}] = 0;`})),i+=`${r}_indices[${n-2}] = 0u;\n                     ${r}_indices[${n-1}] = 0u;`,i};return`\n  ${r.registerUniforms(k).registerInternalVariables(o).declareVariables(...y,u)}\n  ${r.mainStart()}\n    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${c})) * ${c};\n    var index1 = global_idx / (uniforms.N / ${c});\n    let stride1 = uniforms.M / ${h};\n    let row = (index1 % stride1) * ${h};\n    let batch = index1 / stride1;\n\n    ${2===n.length?"":`let batch_indices = ${o.offsetToIndices("batch")};`}\n    ${$(l,M)}\n    let a_offset = ${l.indicesToOffset("a_indices")};\n    ${$(d,T)}\n    let b_offset = ${d.indicesToOffset("b_indices")};\n    var values: array<${u.type.value}, ${h}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${p}) {\n      ${(()=>{let e=`var a_data: ${l.type.value};`;for(let t=0;t<p;t++)e+=`\n              let b_data${t} = b[(b_offset + (k + ${t}) * uniforms.N + col) / ${c}];`;for(let t=0;t<h;t++){e+=`a_data = a[(a_offset + (row + ${t}) * uniforms.K + k) / ${p}];`;for(let n=0;n<p;n++)e+=`\n            values[${t}] = fma(${d.type.value}(a_data${1===p?"":`[${n}]`}), b_data${n}, values[${t}]);\n`}return e})()}\n    }\n    for (var i = 0u; i < ${h}u; i++) {\n      var value = values[i];\n      ${b}\n      ${w}\n      let cur_indices = ${u.type.indices}(batch, row + i, col);\n      let offset = ${u.indicesToOffset("cur_indices")};\n      ${u.setByOffset(`offset / ${c}`,"value")};\n    }\n  }\n  `}}},Zs=e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},eo=e=>{Zs(e.inputs);let t=Mt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let n=t[t.length-1],r=e.inputs[0].dims[e.inputs[0].dims.length-1];n<8&&r<8?e.compute(Js(e.inputs,{activation:""},t)):e.compute(Ns(e.inputs,{activation:""},t))}})),dd=V((()=>{Vl(),od(),id(),sd(),ad(),td(),ld(),Ul(),to=(e,t,n,r,s,o)=>{let i=e[0],a=e.slice(o?1:2,o?3:4),l=a.length,d=t[0],u=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),c=a.map(((e,t)=>e+r[t]+r[t+l])).map(((e,t)=>Math.floor((e-u[t]+s[t])/s[t])));return c.splice(0,0,i),c.splice(o?3:1,0,d),c},no=[2,3,1,0],ro=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},so=(e,t)=>{let n=e.kernelShape.slice();n.length<t[1].dims.length-2&&n.push(...Array(t[1].dims.length-2-n.length).fill(0));for(let e=2;e<t[1].dims.length;++e)0===n[e-2]&&(n[e-2]=t[1].dims[e]);let r=e.pads.slice();kt.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,r,"NHWC"===e.format,e.autoPad);let s=Object.assign({},e);return Object.assign(s,{kernelShape:n,pads:r}),s},oo=e=>{let t=Ps(e),n=e.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],format:n,dilations:e.dilations,group:e.group,kernelShape:e.kernel_shape,pads:e.pads,strides:e.strides,wIsConst:e.w_is_const(),...t,cacheKey:`${e.format};${t.activation};`}},io=(e,t,n,r)=>{let s="NHWC"===n.format,o=to(t[0].dims,t[1].dims,n.dilations,n.pads,n.strides,s);if(1!==n.group){let i=[t[0]];if(s){let r=e.kernelCustomData.wT??e.compute(Yt(t[1],no),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=r),i.push(r)}else i.push(t[1]);return 3===t.length&&i.push(t[2]),void(!e.adapterInfo.isArchitecture("ampere")&&s&&t[1].dims[0]===n.group&&1===t[1].dims[1]&&1===n.dilations[0]&&1===n.dilations[1]?e.compute(Ys(i,n,o,r),{inputs:i}):e.compute(Ks(i,n,o,r),{inputs:i}))}let i=3===t.length,a=t[0].dims[s?1:2],l=t[0].dims[s?2:3],d=t[0].dims[s?3:1],u=t[1].dims[2],c=t[1].dims[3],p=o[s?1:2],h=o[s?2:3],m=o[s?3:1],f=s&&u===a&&c===l&&0===n.pads[0]&&0===n.pads[1];if(f||1===u&&1===c&&1===n.dilations[0]&&1===n.dilations[1]&&1===n.strides[0]&&1===n.strides[1]&&0===n.pads[0]&&0===n.pads[1]){let u,c,g,_=o[0],w=[];if(s){let r=e.kernelCustomData.wT??e.compute(Yt(t[1],no),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=r),f){let e=a*l*d;u=t[0].reshape([1,_,e]),c=r.reshape([1,e,m]),g=[1,_,m]}else u=t[0].reshape([_,a*l,d]),c=r.reshape([1,d,m]),g=[_,p*h,m];w.push(u),w.push(c)}else u=t[0].reshape([_,d,a*l]),c=t[1].reshape([1,m,d]),g=[_,m,p*h],w.push(c),w.push(u);i&&w.push(t[2]);let y=g[2],b=w[0].dims[w[0].dims.length-1];return void(y<8&&b<8?e.compute(Js(w,n,o,g,s,r),{inputs:w}):e.compute(Ns(w,n,o,g,s,r),{inputs:w}))}let g=e.kernelCustomData.wT??e.compute(Yt(t[1],no),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=g);let _=[t[0],g];i&&_.push(t[2]);let w=s?p*h:m,y=s?m:p*h,b=u*c*d;e.compute(js(_,n,o,w,y,b,i,!0,r),{inputs:_})},ao=(e,t)=>{let n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);let s=[0,t.pads[0],0,t.pads[1]],o=[1].concat(t.strides),i=[1].concat(t.dilations),a=[1].concat(t.kernelShape),l=so({...t,pads:s,strides:o,dilations:i,kernelShape:a},r);io(e,r,l,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]]))},lo=(e,t,n)=>{let r="NHWC"===n.format?"channelsLast":"channelsFirst",s=so(n,t),o="NOTSET"===n.autoPad?n.pads:n.autoPad,i=Xs(t[0].dims,t[1].dims,n.strides,n.dilations,o,!1,r);e.compute(Qs(t,s,i.outShape,[i.filterDepth,i.filterHeight,i.filterWidth],[i.padInfo.front,i.padInfo.top,i.padInfo.left],r))},uo=(e,t)=>{if(ro(e.inputs,t),3===e.inputs[0].dims.length)ao(e,t);else if(5===e.inputs[0].dims.length)lo(e,e.inputs,t);else{let n=so(t,e.inputs);io(e,e.inputs,n)}}})),ud=V((()=>{Ll(),Bl(),Gl(),td(),nd(),rd(),sd(),co=(e,t=!1,n,r,s=4)=>{let o=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",i=e?"row":"col",a=e?"col":"row",l=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${i} / outWidth;\n      let outCol = ${i} % outWidth;\n\n      let WRow = ${a} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${a} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])"}) || fract(xR) > 0.0) {\n        return ${r}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])"}) || fract(xC) > 0.0) {\n        return ${r}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${a} % inChannels;\n      ${e?"\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      "}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${s}];`,d=e?`\n      let col = colIn * ${s};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${l}\n      }\n      return ${r}(0.0);`:`\n      let col = colIn * ${s};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${l}\n      }\n      return ${r}(0.0);`,u=`\n      let col = colIn * ${s};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${(e=>{switch(e){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${r}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${e} is not supported.`)}})(s)}\n      }\n      return ${r}(0.0);\n      `,c=ks(n,r);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${r} {\n    ${e?d:u}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${r} {\n    ${e?u:d}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${r}) {\n    let col = colIn * ${s};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${o}\n      ${Es(t)}\n      ${c}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${s}] = value;\n    }\n  }`},po=(e,t,n,r,s,o,i,a)=>{let l="NHWC"===t.format,d=l?e[0].dims[3]:e[0].dims[1],u=n[0],c=l?n[2]:n[3],p=l?n[1]:n[2],h=l?n[3]:n[1],m=l&&d%4==0&&d%3&&h%4==0,f=l?h:c*p,g=l?c*p:h,_=[8,8,1],w=r<=8?[4,1,1]:[4,4,1],y=[Math.ceil(f/_[0]/w[0]),Math.ceil(g/_[1]/w[1]),Math.ceil(u/_[2]/w[2])];dt("verbose",(()=>`[conv_backprop_mm_webgpu] dispatch = ${y}`));let b=m?4:1,v=Math.max(_[0]*b,_[1]),x=m?4:1,M=[t.kernelShape[l?1:2],t.kernelShape[l?2:3]],T=[M[0]+(t.dilations[0]<=1?0:(M[0]-1)*(t.dilations[0]-1)),M[1]+(t.dilations[1]<=1?0:(M[1]-1)*(t.dilations[1]-1))],k=[T[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),T[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],$=[{type:6,data:r},{type:6,data:s},{type:6,data:o},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:M},{type:6,data:k}];$s(t,$),$.push(...It(e[0].dims,e[1].dims));let C=["rank","rank"];i&&($.push(...It(e[2].dims)),C.push("rank")),$.push(...It(n));return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${w};${_};${m}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:y[0],y:y[1],z:y[2]},programUniforms:$}),getShaderSource:r=>{let s=Rt("x",e[0].dataType,e[0].dims.length,x),o=Rt("w",e[1].dataType,e[1].dims.length,1),d=jt("result",e[0].dataType,n.length,x),u=[s,o],c="";if(i){let t=Rt("bias",e[2].dataType,e[2].dims.length,x);u.push(t),c+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${t.type.value} {\n            return bias[coords.${l?"w":"y"}${m?"/ 4":""}];\n          }`}let p=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:M.length},{name:"pads",type:"i32",length:k.length}];Cs(t,p);let h=Ft(e[0].dataType,1);if("f16"!==h&&"f32"!==h)throw new Error(`elemType ${h} is not supported.`);return`\n        ${Fs("uniforms.result_strides")}\n        ${r.registerUniforms(p).declareVariables(...u,d)};\n        ${c}\n        ${co(l,i,t,s.type.value,b)}\n        ${m?zs(w,_,h,void 0,!l,v):Bs(w,_,h,void 0,!l,v,!1,void 0,a)}`}}}})),cd=V((()=>{Ll(),Bl(),Vl(),Gl(),ho=(e,t,n,r,s,o=!1,i,a,l=!1)=>{let d=l?1:2,u=l?2:3,c=l?3:1,p=o?2:1,h=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${o?`vec4<${i}>`:i}) {\n    result[flatIndex] = ${o?`vec4<${i}>`:i}(value);\n  }`;r&&(h+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${o?`vec4<${i}>`:i} {\n      return bias[coords.${l?"w":"y"}${o?"/ 4":""}];\n    }`);let m=o?4:1,f=Rt("W",t[1].dataType,t[1].dims.length,m),g=Rt("Dy",t[0].dataType,t[0].dims.length,m),_=[g,f];r&&_.push(Rt("bias",t[2].dataType,[n[c]].length,m));let w=jt("result",t[0].dataType,n.length,m),y=`{\n        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${s?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${s?"global_id.y":"workgroup_id.y"} * ${p};\n        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${i}>, ${p}>;\n        for (var i = 0; i < ${p}; i++) {\n          dotProd[i] = vec4<${i}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${i}(dyCorner.x) + ${i}(wR)) / ${i}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${i}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${i}(dyCorner.y) + ${i}(wC)) / ${i}(uniforms.strides.y);\n            let dyC2 = (${i}(dyCorner.y) + 1.0 + ${i}(wC)) / ${i}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${i}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${i}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${f.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${f.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${f.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${f.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${i}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${g.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${i}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${c}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${f.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${f.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${f.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${f.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${i}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${f.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${f.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${f.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${f.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${i}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${p}; i = i + 1) {\n          let value = dotProd[i] + ${r?"bias[c+i]":`vec4<${i}>(0.0)`};\n          ${w.set("batch","r","c + i","d1","value")};\n        }\n      }`,b=`\n          let outputIndices = ${w.offsetToIndices("global_idx")};\n          let batch = ${w.indicesGet("outputIndices",0)};\n          let d1 = ${w.indicesGet("outputIndices",c)};\n          let r = ${w.indicesGet("outputIndices",d)};\n          let c = ${w.indicesGet("outputIndices",u)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${i}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${i}(dyRCorner) + ${i}(wR)) / ${i}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${i}(uniforms.Dy_shape[${d}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${i}(dyCCorner) + ${i}(wC)) / ${i}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${i}(uniforms.Dy_shape[${u}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${l?g.get("batch","idyR","idyC","inputChannel"):g.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${f.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${r?"bias[d1]":`${i}(0.0)`};\n          ${w.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(a).declareVariables(..._,w)}\n  ${h}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${o?y:b}}`},mo=(e,t,n)=>{let r=e.length>2,s=t.outputShape,o=Tt.size(s),i=[Math.ceil(o/64),1,1];dt("verbose",(()=>`[conv2d_backprop_webgpu] dispatch = ${i}`));let a="NHWC"===t.format,l=["rank","rank"],d=[t.strides[0],t.strides[1]],u=[t.kernelShape[a?1:2],t.kernelShape[a?2:3]],c=[t.dilations[0],t.dilations[1]],p=[u[0]+(t.dilations[0]<=1?0:(t.kernelShape[a?1:2]-1)*(t.dilations[0]-1)),u[1]+(t.dilations[1]<=1?0:(t.kernelShape[a?2:3]-1)*(t.dilations[1]-1))],h=[p[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),p[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],m=t.group,f=e[1].dims,g=f[0]/m,_=f[1],w=[{type:12,data:o},{type:12,data:d},{type:12,data:u},{type:12,data:c},{type:12,data:p},{type:6,data:h},{type:12,data:g},{type:12,data:_},...It(e[0].dims,e[1].dims)];r&&(w.push(...It(e[2].dims)),l.push("rank")),w.push(...It(s));let y=1===i[1]&&1===i[2];return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:l},getRunData:()=>({dispatchGroup:{x:i[0],y:i[1],z:i[2]},outputs:[{dims:n?n(s):s,dataType:e[0].dataType}],programUniforms:w}),getShaderSource:t=>{let n=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:d.length},{name:"filter_dims",type:"u32",length:u.length},{name:"dilations",type:"u32",length:u.length},{name:"effective_filter_dims",type:"u32",length:p.length},{name:"pads",type:"i32",length:h.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],o=Ft(e[0].dataType);return`${ho(t,e,s,r,y,false,o,n,a)}`}}}})),pd=V((()=>{ud(),cd(),td(),Ul(),fo=(e,t,n,r,s,o)=>(e-1)*t+n+(r-1)*s+1-o,go=(e,t,n,r,s)=>{let o=Math.floor(e/2);"SAME_UPPER"===t?(n[r]=o,n[s]=e-o):"SAME_LOWER"===t&&(n[r]=e-o,n[s]=o)},_o=(e,t,n,r,s,o,i,a,l,d)=>{let u=e.length-2,c=0===d.length;l.length<u&&l.push(...Array(u-l.length).fill(0));let p=e[0],h=t[a?3:1]*s;for(let s=0,p=e.length-u-(a?1:0);s<u;++s,++p){let a=e[p],h=c?a*i[s]:d[s],m=fo(a,i[s],o[s],t[p],n[s],h);go(m,r,o,s,s+u),c&&d.push(i[s]*(a-1)+l[s]+(t[p]-1)*n[s]+1-o[s]-o[s+u])}d.splice(0,0,p),d.splice(a?3:1,0,h)},wo=(e,t)=>{let n=e.kernelShape.slice();if(0===e.kernelShape.length||0===e.kernelShape.reduce(((e,t)=>e*t),1)){n.length=0;for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e])}let r="NHWC"===e.format;n.splice(0,0,t[1].dims[0]),n.splice(r?3:1,0,t[1].dims[1]);let s=e.pads.slice(),o=e.outputShape.slice(),i=e.outputPadding.slice(),a=t[0].dims,l=e.dilations.slice();if(0===l.reduce(((e,t)=>e+t),0)){let e=t[0].dims.length-2;l=new Array(e).fill(1)}let d=e.strides.slice();if(0===d.reduce(((e,t)=>e+t),0)){let e=t[0].dims.length-2;d=new Array(e).fill(1)}_o(a,n,l,e.autoPad,e.group,s,d,r,i,o);let u=Object.assign({},e);return Object.assign(u,{kernelShape:n,pads:s,outputPadding:i,outputShape:o,dilations:l,strides:d}),u},yo=e=>{let t=Ps(e),n=e.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],s=e.dilations,o=e.group,i=e.kernelShape,a=e.pads,l=e.strides,d=e.wIsConst();return{autoPad:r,format:n,dilations:s,group:o,kernelShape:i,outputPadding:e.outputPadding,outputShape:e.outputShape,pads:a,strides:l,wIsConst:d,...t,cacheKey:`${e.format};${t.activation};`}},bo=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");let r=e[0].dims.length-2;if(t.dilations.reduce(((e,t)=>e+t),0)>0&&t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.reduce(((e,t)=>e+t),0)>0&&t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.reduce(((e,t)=>e+t),0)>0&&t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.outputPadding.length!==r&&0!==t.outputPadding.length)throw new Error(`output_padding should be ${r}D`);if(t.kernelShape.reduce(((e,t)=>e+t),0)>0&&0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},vo=[2,3,1,0],xo=(e,t,n)=>{let r=wo(n,t),s="NHWC"===n.format,o=r.outputShape,i=o[s?3:1],a=t[0].dims[s?3:1];if(1!==r.group||1===i&&1===a)return void e.compute(mo(t,r));let l=o[s?1:2],d=o[s?2:3],u=s?l*d:i,c=s?i:l*d,p=t[1].dims[2]*t[1].dims[3]*a,h=e.kernelCustomData.wT??e.compute(Yt(t[1],vo),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=h);let m=[t[0],h],f=3===t.length;f&&(s||1!==t[2].dims.length?m.push(t[2]):m.push(t[2].reshape([t[2].dims[0],1,1]))),e.compute(po(m,r,o,u,c,p,f,!0),{inputs:m})},Mo=(e,t)=>{let n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);let s=t.kernelShape;(0===s.length||0===s[0])&&(s=[e.inputs[1].dims[2]]);let o=t.dilations;(0===o.length||0===o[0])&&(o=[1]);let i=t.strides;(0===i.length||0===i[0])&&(i=[1]);let a=t.pads;0===a.length&&(a=[0,0]),a=[0,a[0],0,a[1]],i=[1].concat(i),o=[1].concat(o),s=[1].concat(s);let l=wo({...t,pads:a,strides:i,dilations:o,kernelShape:s},r);e.compute(mo(r,l,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]])))},To=(e,t)=>{bo(e.inputs,t),3===e.inputs[0].dims.length?Mo(e,t):xo(e,e.inputs,t)}})),hd=V((()=>{Ll(),Vl(),jl(),Gl(),ko=(e,t,n,r)=>{let s=Tt.size(t),o=t.length,i=Rt("input",e,o),a=jt("output",e,o),l=6===n.dataType?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),d=Tt.normalizeAxis(l,o);return{name:"CumSum",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},{type:12,data:d},...It(t,t)]}),getShaderSource:e=>{let t=` i32(${i.indicesGet("inputIndices","uniforms.axis")}) `,n=Dt("uniforms.input_shape","uniforms.axis",o),s=r.reverse?t+(r.exclusive?" + 1":""):"0",l=r.reverse?n:t+(r.exclusive?"":" + 1");return`\n                ${e.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(i,a)}\n                ${e.mainStart()}\n                  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${a.offsetToIndices("global_idx")};\n                  var sum = ${a.type.value}(0);\n                  let first : i32 = ${s};\n                  let last : i32 = ${l};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${i.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${i.getByIndices("inputIndices")};\n                  }\n                  ${a.setByOffset("global_idx","sum")};\n                }`}}},$o=(e,t)=>{let n=e.inputs[0].dims,r=e.inputs[0].dataType,s=e.inputs[1];e.compute(ko(r,n,s,t),{inputs:[0]})},Co=e=>{let t=1===e.exclusive,n=1===e.reverse;return vt({exclusive:t,reverse:n})}})),md=V((()=>{Ll(),Vl(),jl(),Gl(),Po=e=>{if(!e||1!==e.length)throw new Error("DepthToSpace requires 1 input.");if(4!==e[0].dims.length)throw new Error("DepthToSpace requires 4D input.")},So=(e,t,n,r)=>{let s=[];s.push(`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`);for(let r=0;r<t;++r)s.push(n.indicesSet("a",e[r],`i[${r}]`));return s.push("return a;}"),s.join("\n")},Eo=(e,t)=>{let n,r,s,o,i,a,l="NHWC"===t.format,d=t.blocksize,u="DCR"===t.mode;l?([n,r,s,o]=e.dims,i=u?[n,r,s,d,d,o/d**2]:[n,r,s,o/d**2,d,d],a=u?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([n,r,s,o]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],i=u?[n,d,d,o/d**2,r,s]:[n,o/d**2,d,d,r,s],a=u?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let c=e.reshape(i),p=c.dims.length,h=e.dataType,m=Rt("a",h,p),f=jt("output",h,p);return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:e=>{let t=l?[n,r*d,s*d,o/d**2]:[n,o/d**2,r*d,s*d],i=Tt.size(t),u=c.dims,p=Tt.sortBasedOnPerm(u,a);return{outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...It(u,p)]}},getShaderSource:e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(m,f)}\n\n  ${So(a,p,m,f)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${f.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${f.setByOffset("global_idx",m.getByIndices("aIndices"))}\n  }`}},Fo=(e,t)=>{Po(e.inputs),e.compute(Eo(e.inputs[0],t))},Ao=e=>vt({blocksize:e.blocksize,mode:e.mode,format:e.format})})),fd=V((()=>{Ll(),Vl(),jl(),Gl(),Lo="^"+(zo="("+(Io="[a-zA-Z]|\\.\\.\\.")+")+")+"$",Oo="^"+("("+zo+",)*"+zo)+"$",Bo=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let n=this.symbolToIndices.get(e);void 0===n?n=[t]:n.push(t),this.symbolToIndices.set(e,n)}},Do=class{constructor(e,t){this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[n,r]=t.includes("->")?t.split("->",2):[t,""];if(!n.match(RegExp(Oo)))throw new Error("Invalid LHS term");if(n.split(",").forEach(((t,n)=>{let r=e[n].dims.slice();if(!t.match(RegExp(Lo)))throw new Error("Invalid LHS term");let s=this.processTerm(t,!0,r,n);this.lhs.push(s)})),""===r)r+=[...this.symbolToInfo.entries()].filter((([e,t])=>1===t.count||"..."===e)).map((([e])=>e)).join("");else if(!r.match(RegExp(zo)))throw new Error("Invalid RHS");r.match(RegExp(Io,"g"))?.forEach((e=>{if("..."===e)this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let t=this.symbolToInfo.get(e);if(void 0===t)throw new Error("Invalid RHS symbol");this.outputDims.push(t.dimValue)}})),this.rhs=this.processTerm(r,!1,this.outputDims)}addSymbol(e,t,n){let r=this.symbolToInfo.get(e);if(void 0!==r){if(r.dimValue!==t&&1!==r.count)throw new Error("Dimension mismatch");r.count++,r.inputIndices.push(n)}else r={count:1,dimValue:t,inputIndices:[n]};this.symbolToInfo.set(e,r)}processTerm(e,t,n,r=-1){let s=n.length,o=!1,i=[],a=0;if(!e.match(RegExp(Lo))&&!t&&""!==e)throw new Error("Invalid LHS term");let l=e.match(RegExp(Io,"g")),d=new Bo(r);return l?.forEach(((e,u)=>{if("..."===e){if(o)throw new Error("Only one ellipsis is allowed per input term");o=!0;let e=s-l.length+1;if(e<0)throw new Error("Ellipsis out of bounds");if(i=n.slice(a,a+e),this.hasEllipsis){if(this.ellipsisDims.length!==i.length||this.ellipsisDims.toString()!==i.toString())throw new Error("Ellipsis dimensions mismatch")}else{if(!t)throw new Error("Ellipsis must be specified in the LHS");this.hasEllipsis=!0,this.ellipsisDims=i}for(let e=0;e<i.length;e++){let t=String.fromCharCode("0".charCodeAt(0)+e);d.addSymbol(t,u+e),this.addSymbol(t,n[a++],r)}}else d.addSymbol(e,u+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(e,n[a++],r)})),d}},No=e=>e+"_max",Ro=(e,t,n,r)=>{let s=e.map((e=>e.length)).map(((e,n)=>Rt(`input${n}`,t,e))),o=Tt.size(r),i=jt("output",t,r.length),a=[...n.symbolToInfo.keys()].filter((e=>!n.rhs.symbolToIndices.has(e)));return{name:"Einsum",shaderCache:{hint:n.equation,inputDependencies:e.map((()=>"rank"))},getRunData:()=>{let s=a.filter((e=>n.symbolToInfo.has(e))).map((e=>({type:12,data:n.symbolToInfo.get(e)?.dimValue||0})));s.push({type:12,data:o});let i=e.map(((e,t)=>[...It(e)])).reduce(((e,t)=>e.concat(t)),s);return i.push(...It(r)),{outputs:[{dims:r,dataType:t}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:i}},getShaderSource:e=>{let t=[],r=[],o=[],l=[],d=[],u=n.symbolToInfo.size===n.rhs.symbolToIndices.size;n.symbolToInfo.forEach(((e,a)=>{if(n.rhs.symbolToIndices.has(a)){let r=n.rhs.symbolToIndices.get(a)?.[0];void 0!==r&&n.lhs.forEach(((n,o)=>{if(e.inputIndices.includes(o)){let e=n.symbolToIndices.get(a);if(void 0===e)throw new Error("Invalid symbol error");e.forEach((e=>{t.push(`${s[o].indicesSet(`input${o}Indices`,e,i.indicesGet("outputIndices",r))}`)}))}}))}else n.lhs.forEach(((t,n)=>{if(e.inputIndices.includes(n)){let e=t.symbolToIndices.get(a);if(void 0===e)throw new Error("Invalid symbol error");e.forEach((e=>{r.push(`${s[n].indicesSet(`input${n}Indices`,e,`${a}`)}`)})),d.push(`prod *= ${s[n].getByIndices(`input${n}Indices`)};`)}})),o.push(`for(var ${a}: u32 = 0; ${a} < uniforms.${No(a)}; ${a}++) {`),l.push("}")}));let c=u?[...t,`let sum = ${s.map(((e,t)=>e.getByIndices(`input${t}Indices`))).join(" * ")};`]:[...t,"var sum = 0.0;",...o,...r,"var prod = 1.0;",...d,"sum += prod;",...l];return`\n            ${e.registerUniforms(a.map((e=>({name:`${No(e)}`,type:"u32"})))).registerUniform("outputSize","u32").declareVariables(...s,i)}\n\n            ${e.mainStart()}\n            ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${i.offsetToIndices("global_idx")};\n            ${s.map(((e,t)=>`var input${t}Indices: ${s[t].type.indices};`)).join("\n")}\n            ${c.join("\n")};\n            ${i.setByOffset("global_idx","sum")};\n          }`}}},jo=(e,t)=>{let n=new Do(e.inputs,t.equation),r=n.outputDims,s=e.inputs.map(((e,t)=>e.dims));e.compute(Ro(s,e.inputs[0].dataType,n,r))},Vo=e=>{let t=e.equation.replace(/\s+/g,"");return vt({equation:t})}})),gd=V((()=>{Ll(),Vl(),Gl(),Go=e=>{if(!e||2!==e.length)throw new Error("Expand requires 2 input.");let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=n.length<t.length?0:n.length-t.length,s=t.length<n.length?0:t.length-n.length;for(;r<n.length&&s<t.length;++r,++s)if(n[r]!==t[s]&&1!==n[r]&&1!==t[s])throw new Error("Expand requires shape to be broadcastable to input")},Uo=(e,t)=>{let n=e.length-t.length,r=[];for(let t=0;t<n;++t)r.push(e[t]);for(let s=0;s<t.length;++s)r.push(1===t[s]?e[s+n]:t[s]);return r},qo=(e,t)=>e.length>t.length?Uo(e,t):Uo(t,e),Wo=e=>{let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=qo(t,n),s=e[0].dataType,o=9===s?4:1,i=Math.ceil(Tt.size(r)/o),a=[{type:12,data:i},...It(t,r)];return{name:"Expand",shaderCache:{hint:`${r.length}`,inputDependencies:["rank"]},getShaderSource:e=>{let n,i=Rt("input",s,t.length,o),a=jt("output",s,r.length,o);if(9===s){let e=(e,t,n="")=>`\n          let outputIndices${t} = ${a.offsetToIndices(`outputOffset + ${t}u`)};\n          let offset${t} = ${i.broadcastedIndicesToOffset(`outputIndices${t}`,a)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${i.getByOffset(`index${t}`)}[component${t}]);\n        `;n=`\n        let outputOffset = global_idx * ${o};\n        var data = vec4<u32>(0);\n        ${e("data",0,"u32")}\n        ${e("data",1,"u32")}\n        ${e("data",2,"u32")}\n        ${e("data",3,"u32")}\n        ${a.setByOffset("global_idx","data")}\n      }`}else n=`\n        let outputIndices = ${a.offsetToIndices("global_idx")};\n        let inputOffset = ${i.broadcastedIndicesToOffset("outputIndices",a)};\n        ${a.setByOffset("global_idx",i.getByOffset("inputOffset"))}\n      }`;return`\n    ${e.registerUniform("vec_size","u32").declareVariables(i,a)}\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${n}`},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:a})}},Ho=e=>{Go(e.inputs),e.compute(Wo(e.inputs),{inputs:[0]})}})),_d=V((()=>{Ll(),Vl(),Gl(),Yl(),Xo=e=>{let t=e[0].dataType,n=Tt.size(e[0].dims),r=Tt.size(e[1].dims),s=r%4==0;return{name:"FastGeluWithBias",shaderCache:{hint:`${s}`,inputDependencies:["type","type"]},getShaderSource:e=>{let n=Rt("x",t,[1],4),r=Rt("bias",t,[1],4),o=jt("y",t,[1],4),i=e=>`\n      let bias${e}_offset: u32 = (global_idx * 4 + ${e}) % uniforms.bias_size;\n      let bias${e} = ${r.getByOffset(`bias${e}_offset / 4`)}[bias${e}_offset % 4];`,a=s?`\n      let bias = ${r.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${i(0)}${i(1)}${i(2)}${i(3)}\n      let bias = ${n.type.value}(bias0, bias1, bias2, bias3);`;return`${e.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(n,r,o)}\n\n    ${Qr(At(t))}\n\n    ${e.mainStart(St)}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${n.getByOffset("global_idx")};\n      ${a}\n      let x_in = x + bias;\n      ${o.setByOffset("global_idx",Kr("x_in"))}\n    }`},getRunData:e=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],programUniforms:[{type:12,data:Math.ceil(n/4)},{type:12,data:r}],dispatchGroup:{x:Math.ceil(n/St/4)}})}},Qo=e=>{e.inputs.length<2||0===Tt.size(e.inputs[1].dims)?Yr(e):e.compute(Xo(e.inputs))}})),wd=V((()=>{Ll(),Vl(),jl(),Gl(),Ko=e=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.")},Yo=(e,t)=>{let n=e[0].dims,r=e[1].dims,s=n.length,o=Tt.normalizeAxis(t.axis,s),i=n.slice(0);i.splice(o,1,...r);let a=n[o],l=9===e[0].dataType?4:1,d=Math.ceil(Tt.size(i)/l),u=[{type:12,data:d},{type:6,data:a},{type:12,data:o},...It(e[0].dims,e[1].dims,i)];return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:u}),getShaderSource:t=>{let n,a=Rt("data",e[0].dataType,e[0].dims.length,l),d=Rt("inputIndices",e[1].dataType,e[1].dims.length),u=jt("output",e[0].dataType,i.length,l),c=e=>{let t=r.length,n=`var indicesIndices${e}  = ${d.type.indices}(0);`;for(let r=0;r<t;r++)n+=`${t>1?`indicesIndices${e}[${r}]`:`indicesIndices${e}`} = ${i.length>1?`outputIndices${e}[uniforms.axis + ${r}]`:`outputIndices${e}`};`;n+=`\n          var idx${e} = ${d.getByIndices(`indicesIndices${e}`)};\n          if (idx${e} < 0) {\n            idx${e} = idx${e} + uniforms.axisDimLimit;\n          }\n          var dataIndices${e} : ${a.type.indices};\n        `;for(let r=0,a=0;r<s;r++)r===o?(n+=`${s>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = u32(idx${e});`,a+=t):(n+=`${s>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = ${i.length>1?`outputIndices${e}[${a}]`:`outputIndices${e}`};`,a++);return n};if(9===e[0].dataType){let e=(e,t,n="")=>`\n          let outputIndices${t} = ${u.offsetToIndices(`outputOffset + ${t}u`)};\n          ${c(t)};\n          let offset${t} = ${a.indicesToOffset(`dataIndices${t}`)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${a.getByOffset(`index${t}`)}[component${t}]);\n        `;n=`\n        let outputOffset = global_idx * ${l};\n        var value = vec4<u32>(0);\n        ${e("value",0,"u32")}\n        ${e("value",1,"u32")}\n        ${e("value",2,"u32")}\n        ${e("value",3,"u32")}\n        ${u.setByOffset("global_idx","value")}\n      `}else n=`\n      let outputIndices = ${u.offsetToIndices("global_idx")};\n      ${c("")};\n      let value = ${a.getByIndices("dataIndices")};\n      ${u.setByOffset("global_idx","value")};\n      `;return`\n      ${t.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(a,d,u)}\n      ${t.mainStart()}\n        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${n}\n      }`}}},Jo=e=>vt({axis:e.axis}),Zo=(e,t)=>{let n=e.inputs;Ko(n),e.compute(Yo(e.inputs,t))}})),yd=V((()=>{Ll(),Vl(),jl(),Gl(),ei=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let n=Tt.normalizeAxis(t.quantizeAxis,e[0].dims.length),r=t.blockSize,s=e[0],o=e[2],i=4===e.length?e[3]:void 0;if(o.dims.length!==s.dims.length||!s.dims.map(((e,t)=>t===n?Math.ceil(e/r)===o.dims[t]:e===o.dims[t])).reduce(((e,t)=>e&&t),!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(i){if(i.dataType!==s.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(i.dims.length!==o.dims.length||!i.dims.map(((e,t)=>e===o.dims[t])).reduce(((e,t)=>e&&t),!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},ti=(e,t)=>{let n=e[0].dims,r=e[1].dims,s=n.length,o=Tt.normalizeAxis(t.gatherAxis,s),i=Tt.normalizeAxis(t.quantizeAxis,s),a=n.slice(0);a.splice(o,1,...r);let l=Tt.size(a),d=e[2].dataType,u=22===e[0].dataType,c=[{type:12,data:l},{type:12,data:i},{type:12,data:o},{type:12,data:t.blockSize},...It(...e.map(((e,t)=>e.dims)),a)];return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter(((e,t)=>1!==t)).map((e=>e.dims.join("_"))).join(";")}`,inputDependencies:Array.from({length:e.length},((e,t)=>"rank"))},getRunData:()=>({outputs:[{dims:a,dataType:d}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:t=>{let s=Rt("data",e[0].dataType,e[0].dims.length),i=Rt("inputIndices",e[1].dataType,e[1].dims.length),l=Rt("scales",e[2].dataType,e[2].dims.length),c=e.length>3?Rt("zeroPoint",e[3].dataType,e[3].dims.length):void 0,p=jt("output",d,a.length),h=[s,i,l];c&&h.push(c);return`\n        ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...h,p)}\n        ${t.mainStart()}\n        let output_indices = ${p.offsetToIndices("global_idx")};\n        var indices_indices = ${i.type.indices}(0);\n        ${r.length>1?`\n          for (var i: u32 = 0; i < ${r.length}; i++) {\n            let index = ${p.indicesGet("output_indices","uniforms.gather_axis + i")};\n            ${i.indicesSet("indices_indices","i","index")};\n          }`:`indices_indices = ${p.indicesGet("output_indices","uniforms.gather_axis")};`};\n        var data_indices = ${s.type.indices}(0);\n        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {\n          let index = ${p.indicesGet("output_indices","i")};\n          ${s.indicesSet("data_indices","i","index")};\n        }\n        var index_from_indices = ${i.getByIndices("indices_indices")};\n        if (index_from_indices < 0) {\n          index_from_indices += ${n[o]};\n        }\n        ${s.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};\n        for (var i = uniforms.gather_axis + 1; i < ${a.length}; i++) {\n          let index = ${p.indicesGet("output_indices",`i + ${r.length} - 1`)};\n          ${s.indicesSet("data_indices","i","index")};\n        }\n        let data_offset = ${s.indicesToOffset("data_indices")};\n        let data_index = data_offset % 8;\n        // Convert 4-bit packed data to 8-bit packed data.\n        let packed_4bit_quantized_data = ${s.getByOffset("data_offset / 8")};\n        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;\n        let quantized_data_vec = ${u?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));\n        let quantized_data = quantized_data_vec[data_index / 2];\n        var scale_indices = data_indices;\n        let quantize_axis_index = ${l.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;\n        ${l.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};\n        var scale = ${l.getByIndices("scale_indices")};\n        ${c?`\n              let zero_point_indices = scale_indices;\n              let zero_point_offset = ${c.indicesToOffset("zero_point_indices")};\n              let zero_point_index = zero_point_offset % 8;\n              let packed_4bit_zero_points = ${c.getByOffset("zero_point_offset / 8")};\n              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;\n              let zero_point_vec = ${u?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));\n              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};\n        let dequantized_data = ${At(d)}(quantized_data - zero_point) * scale;\n        ${p.setByOffset("global_idx","dequantized_data")};\n    }`}}},ni=(e,t)=>{let n=e.inputs;ei(n,t),e.compute(ti(e.inputs,t))},ri=e=>vt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})})),bd=V((()=>{Ll(),Vl(),jl(),Gl(),si=e=>{if(!e||2!==e.length)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error("GatherElements requires that the data input and\n                     indices input tensors be of same rank.")},oi=(e,t)=>{let n=e[0].dims,r=e[0].dataType,s=n.length,o=e[1].dims,i=e[1].dataType,a=Tt.normalizeAxis(t.axis,s),l=n[a],d=o.slice(0),u=Tt.size(d),c=Rt("input",r,s),p=Rt("indicesInput",i,o.length),h=jt("output",r,d.length),m=[{type:12,data:u},{type:6,data:l},{type:12,data:a}];return m.push(...It(n,o,d)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:m}),getShaderSource:e=>`\n      ${e.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(c,p,h)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${h.offsetToIndices("global_idx")};\n\n      var idx = ${p.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${c.type.indices}(outputIndices);\n      ${c.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${c.getByIndices("inputIndices")};\n\n      ${h.setByOffset("global_idx","value")};\n  }`}},ii=e=>vt({axis:e.axis}),ai=(e,t)=>{let n=e.inputs;si(n),e.compute(oi(e.inputs,t))}})),vd=V((()=>{Ll(),Vl(),Gl(),li=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(3===e.length&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},di=(e,t)=>{let n=e[0].dims.slice(),r=e[1].dims.slice(),[s,o,i]=$t.getShapeOfGemmResult(n,t.transA,r,t.transB,3===e.length?e[2].dims:void 0),a=[s,o];if(!a)throw new Error("Can't use gemm on the given tensors");let l=Tt.size(a),d=[{type:12,data:l},{type:12,data:s},{type:12,data:o},{type:12,data:i},{type:1,data:t.alpha},{type:1,data:t.beta}],u=["type","type"];3===e.length&&(d.push(...It(e[2].dims)),u.push("rank")),d.push(...It(a));return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:n=>{let r="";t.transA&&t.transB?r="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?r="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?r="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(r="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let s=1===t.alpha?"":"value *= uniforms.alpha;",o=Rt("a",e[0].dataType,e[0].dims),i=Rt("b",e[1].dataType,e[1].dims),l=o.type.value,d=null,u=[o,i];3===e.length&&(d=Rt("c",e[2].dataType,e[2].dims.length),u.push(d));let c=jt("output",e[0].dataType,a.length);u.push(c);return`\n  ${n.registerUniforms([{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...u)}\n\n  ${n.mainStart()}\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${l}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${r}\n    }\n\n    ${s}\n    ${null!=d?`let cOffset = ${d.broadcastedIndicesToOffset("vec2(m, n)",c)}; value += ${l}(uniforms.beta) * ${d.getByOffset("cOffset")};`:""}\n    output[global_idx] = value;\n  }`}}},ui=e=>({transA:e.transA,transB:e.transB,alpha:e.alpha,beta:e.beta,cacheKey:`${e.transA};${e.transB};${1===e.alpha}`}),ci=(e,t)=>{li(e.inputs),e.compute(di(e.inputs,t))}})),xd=V((()=>{Ll(),Vl(),jl(),Nl(),Xl(),Gl(),Ul(),pi=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,hi=(e,t)=>{let n=e[0],r=pi(e,1),s=pi(e,2),o=pi(e,3),i=pi(e,4),a=pi(e,5),l=pi(e,6),d=pi(e,7);if(3!==n.dims.length&&5!==n.dims.length)throw new Error("Input query is expected to have 3 or 5 dimensions");let u,c=n.dims[0],p=n.dims[1],h=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],m=p,f=0,g=0,_=Math.floor(h/t.numHeads);if(l&&d&&Tt.size(l.dims)&&Tt.size(d.dims)){if(4!==l.dims.length)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==c||l.dims[1]!==t.numHeads||l.dims[3]!==_)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(d.dims[0]!==c||d.dims[1]!==t.numHeads||d.dims[3]!==_)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==d.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(4!==d.dims.length)throw new Error('Input "past_value" is expected to have 4 dimensions');f=l.dims[2],g=l.dims[2]}else if(l&&Tt.size(l.dims)||d&&Tt.size(d.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');if(r&&Tt.size(r.dims)>0){if(3!==n.dims.length)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===r.dims.length){if(r.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');u=2,m=r.dims[1]}else if(5===r.dims.length){if(r.dims[2]!==t.numHeads||2!==r.dims[3]||r.dims[4]!==_)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');u=5,m=r.dims[1]}else{if(r.dims[1]!==t.numHeads||r.dims[3]!==_)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');u=0,m=r.dims[2]}}else{if(5!==n.dims.length)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(n.dims[2]!==t.numHeads||3!==n.dims[3])throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');u=3}if(o&&Tt.size(o.dims)>0){if(1!==o.dims.length)throw new Error('Input "bias" is expected to have 1 dimension');if(r&&5===r.dims.length&&2===r.dims[3])throw new Error("bias is not allowed for packed kv.")}let w=f+m,y=0;if(i&&Tt.size(i.dims)>0){y=8;let e=i.dims;throw 1===e.length?e[0]===c?y=1:e[0]===3*c+2&&(y=3):2===e.length&&e[0]===c&&e[1]===w&&(y=5),8===y?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let b=!1,v=h;if(s&&Tt.size(s.dims)>0){if(3!==s.dims.length&&4!==s.dims.length)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===s.dims.length){if(m!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=s.dims[2]}else{if(m!==s.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');v=s.dims[1]*s.dims[3],b=!0}}if(i&&Tt.size(i.dims)>0)throw new Error("Key padding mask is not supported");if(a&&Tt.size(a.dims)>0){if(4!==a.dims.length)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(a.dims[0]!==c||a.dims[1]!==t.numHeads||a.dims[2]!==p||a.dims[3]!==w)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:c,sequenceLength:p,pastSequenceLength:f,kvSequenceLength:m,totalSequenceLength:w,maxSequenceLength:g,inputHiddenSize:0,hiddenSize:h,vHiddenSize:v,headSize:_,vHeadSize:Math.floor(v/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:y,scale:t.scale,broadcastResPosBias:!1,passPastInKv:b,qkvFormat:u}},mi=e=>vt({...e}),fi=vt({perm:[0,2,1,3]}),gi=(e,t,n,r,s,o,i)=>{let a=[r,s,o],l=Tt.size(a),d=[{type:12,data:l},{type:12,data:i},{type:12,data:o}];return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:e=>{let r=jt("qkv_with_bias",t.dataType,a),s=Rt("qkv",t.dataType,a),o=Rt("bias",n.dataType,a);return`\n  ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(s,o,r)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`}},{inputs:[t,n],outputs:[-1]})[0]},_i=(e,t,n,r,s,o,i,a)=>{let l=o;if(i&&Tt.size(i.dims)>0){if(1===r)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=gi(e,o,i,t,r,n*s,a),l=l.reshape([t,r,n,s]),1===n||1===r?l:e.compute(Yt(l,fi.perm),{inputs:[l],outputs:[-1]})[0]}return 3===o.dims.length&&(l=o.reshape([t,r,n,s])),1===n||1===r?l:e.compute(Yt(l,fi.perm),{inputs:[l],outputs:[-1]})[0]},wi=(e,t)=>{let n=hi(e.inputs,t),r=e.inputs[0],s=pi(e.inputs,1),o=pi(e.inputs,2),i=pi(e.inputs,3),a=pi(e.inputs,4),l=pi(e.inputs,5),d=pi(e.inputs,6),u=pi(e.inputs,7);if(5===r.dims.length)throw new Error("Packed QKV is not implemented");if(5===s?.dims.length)throw new Error("Packed KV is not implemented");let c=s&&o&&4===s.dims.length&&4===o.dims.length,p=_i(e,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r,i,0);if(c)return nr(e,p,s,o,a,void 0,d,u,l,n,t);if(!s||!o)throw new Error("key and value must be provided");let h=_i(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,s,i,n.hiddenSize),m=_i(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,o,i,2*n.hiddenSize);nr(e,p,h,m,a,void 0,d,u,l,n,t)}})),Md=V((()=>{Ll(),Vl(),Gl(),yi=e=>Array.from(e.getBigInt64Array(),Number),bi=e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 inputs.");if(1!==e[0].dataType&&10!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(7!==e[1].dataType)throw new Error("Tile `repeats` input should be of int64 data type");if(1!==e[1].dims.length)throw new Error("Tile `repeats` input should be 1-D");if(yi(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},vi=(e,t)=>{let n=[];for(let r=0;r<e.length;++r)n.push(e[r]*t[r]);return n},xi=(e,t)=>{let n=e[0].dims,r=t??yi(e[1]),s=vi(n,r),o=Tt.size(s),i=e[0].dataType,a=Rt("input",i,n.length),l=jt("output",i,s.length);return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},...It(e[0].dims,s)]}),getShaderSource:e=>`\n      const inputShape = ${a.indices(...n)};\n      ${e.registerUniform("output_size","u32").declareVariables(a,l)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${l.offsetToIndices("global_idx")};\n      var input_indices: ${a.type.indices};\n      for (var i = 0; i < ${n.length}; i++) {\n        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${a.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${l.setByOffset("global_idx",a.getByIndices("input_indices"))}\n    }`}},Mi=e=>{bi(e.inputs),e.compute(xi(e.inputs),{inputs:[0]})}})),Td=V((()=>{Ll(),Vl(),jl(),Xl(),Gl(),xd(),Md(),Ul(),Ti=(e,t)=>{let n=e[0],r=e[1],s=e[2],o=e[3],i=e[4];if(3!==n.dims.length&&5!==n.dims.length)throw new Error("Input query is expected to have 3 or 5 dimensions");let a,l=n.dims[0],d=n.dims[1],u=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],c=d,p=0,h=0,m=Math.floor(u/t.numHeads),f=o&&0!==o.dims.length,g=i&&0!==i.dims.length,_=!0;if(f&&g){if(4!==o.dims.length)throw new Error('Input "past_key" is expected to have 4 dimensions');if(4!==i.dims.length)throw new Error('Input "past_value" is expected to have 4 dimensions');p=o.dims[1],h=o.dims[1]}else if(f||g)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');if(r){if(3!==n.dims.length)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===r.dims.length){if(n.dims[2]%r.dims[2]!=0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');a=2,c=r.dims[1]}else if(5===r.dims.length){if(r.dims[2]!==t.numHeads||2!==r.dims[3]||r.dims[4]!==m)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');a=5,c=r.dims[1]}else{if(r.dims[1]!==t.numHeads||r.dims[3]!==m)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');a=0,c=r.dims[2]}}else{if(3!==n.dims.length&&5!==n.dims.length)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(5===n.dims.length&&(n.dims[2]!==t.numHeads||3!==n.dims[3]))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');a=3}let w=!1,y=u;if(s){if(3!==s.dims.length&&4!==s.dims.length)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===s.dims.length){if(c!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');y=s.dims[2]}else{if(c!==s.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');y=s.dims[1]*s.dims[3],w=!0}}return{batchSize:l,sequenceLength:d,pastSequenceLength:p,kvSequenceLength:c,totalSequenceLength:p+c,maxSequenceLength:h,inputHiddenSize:0,hiddenSize:u,vHiddenSize:y,headSize:m,vHeadSize:Math.floor(y/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:w,qkvFormat:a,isPastkvBSNH:_}},ki=(e,t,n,r)=>{let s=[r.batchSize,r.totalSequenceLength,r.kvNumHeads,r.headSize],o=Tt.size(s)/4,i=r.totalSequenceLength,a=jt("present_kv",n,s.length,4),l=Rt("new_kv",e.dataType,e.dims.length,4),d=t?Rt("past_kv",t.dataType,t.dims.length,4):void 0,u=Math.ceil(r.headSize/4),c={x:i,y:e.dims[0],z:1},p=t?["rank","rank"]:["rank"],h=[{type:12,data:o},{type:12,data:r.pastSequenceLength},{type:12,data:r.kvSequenceLength},{type:12,data:r.totalSequenceLength}],m=[l];d?(h.push(...It(e.dims),...It(t.dims),...It(s)),m.push(d)):h.push(...It(e.dims),...It(s));let f=[{name:"output_size",type:"u32"},{name:"past_seqlen",type:"u32"},{name:"new_seqlen",type:"u32"},{name:"present_seqlen",type:"u32"}],g="      let new_batch_stride = uniforms.new_seqlen * num_heads * H;\n        let new_row_stride = num_heads * H;\n        let new_head_stride = H;\n        let in_offset = b * new_batch_stride + (s - past_seqlen) * new_row_stride + n * new_head_stride + h;\n        present_kv[out_offset] = new_kv[in_offset];",_=t?`if (s < past_seqlen) {\n              let past_batch_stride = uniforms.past_seqlen * num_heads * H;\n        var past_head_stride = uniforms.past_seqlen * H;\n        if (is_bsnh) {\n          past_head_stride = H;\n        }\n        let in_offset = b * past_batch_stride + s * row_stride + n * past_head_stride + h;\n        present_kv[out_offset] = past_kv[in_offset];\n        } else if (s < past_seqlen + uniforms.new_seqlen) {\n        ${g}\n        }`:`if (s < past_seqlen + uniforms.new_seqlen) {\n          ${g}\n        }`;return{name:"ConcatPastNew",shaderCache:{hint:`${r.kvNumHeads}${u}${!!t}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:s,dataType:n}],dispatchGroup:c,programUniforms:h}),getShaderSource:e=>`\n\n  ${e.registerUniforms(f).declareVariables(...m,a)}\n  ${e.mainStart([u,r.kvNumHeads,1])}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    var indices = ${a.offsetToIndices("global_idx")};\n    let h = local_id.x;\n    let n = local_id.y;\n    let s = workgroup_id.x;\n    let b = workgroup_id.y;\n    let num_heads = ${r.kvNumHeads}u;\n    let H = ${u}u;\n\n    let present_seqlen = uniforms.present_seqlen;\n    let present_batch_stride = present_seqlen * num_heads * H;\n    var row_stride = H;\n    let is_bsnh = ${r.isPastkvBSNH};\n\n    if (is_bsnh) {\n      row_stride = num_heads * H;\n    }\n    var present_head_stride = present_seqlen * H;\n    if (is_bsnh) {\n      present_head_stride = H;\n    }\n\n    let past_seqlen = uniforms.past_seqlen;\n\n    let out_offset = b * present_batch_stride + s * row_stride + n * present_head_stride + h;\n    ${_}\n  }`}},$i=e=>vt({...e}),Ci=vt({perm:[0,2,1,3]}),Pi=(e,t,n,r,s)=>{let o=t,i=r.kvNumHeads,a=r.nReps;return 3===t.dims.length&&0!==r.kvSequenceLength&&(o=t.reshape([r.batchSize,r.kvSequenceLength,i,r.headSize])),o=n?e.compute(ki(o,n,o.dataType,r),{inputs:[o,n],outputs:[r.isPastkvBSNH?s:-1]})[0]:e.compute(ki(o,void 0,o.dataType,r),{inputs:[o],outputs:[r.isPastkvBSNH?s:-1]})[0],1!==a&&(o=e.compute(xi([o],[1,1,1,a]),{inputs:[o],outputs:[-1]})[0],o=o.reshape([r.batchSize,r.totalSequenceLength,i*a,r.headSize])),e.compute(Yt(o,Ci.perm),{inputs:[o],outputs:[-1]})[0]},Si=(e,t)=>{let n=Ti(e.inputs,t);if(5===e.inputs[0].dims.length)throw new Error("Packed QKV is not implemented");if(5===e.inputs[1]?.dims.length)throw new Error("Packed KV is not implemented");let r=_i(e,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,e.inputs[0],void 0,0),s=e.inputs[3]&&0!==e.inputs[3].dims.length?e.inputs[3]:void 0,o=e.inputs[4]&&0!==e.inputs[4].dims.length?e.inputs[4]:void 0,i=Pi(e,e.inputs[1],s,n,1),a=Pi(e,e.inputs[2],o,n,2);nr(e,r,i,a,void 0,void 0,void 0,void 0,void 0,n,t)}})),kd=V((()=>{Ll(),Vl(),Ul(),Gl(),Ei=(e,t,n,r,s,o,i,a)=>{let l=zt(o),d=1===l?"f32":`vec${l}f`,u=1===l?"vec2f":`mat2x${l}f`,c=s*i,p=[s,i,o/l],h=[s,i,2],m=[];m.push(...It(p,h));return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${a}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:h,dataType:1}],dispatchGroup:{x:c},programUniforms:m}),getShaderSource:e=>{let s=Rt("x",t.dataType,3,l),o=[s,Rt("scale",n.dataType,n.dims),Rt("bias",r.dataType,r.dims),jt("output",1,3,2)];return`\n  var<workgroup> workgroup_shared : array<${u}, 64>;\n  const workgroup_size = 64u;\n  ${e.declareVariables(...o)}\n  ${e.mainStart(64)}\n    let batch = workgroup_index / uniforms.x_shape[1];\n    let channel = workgroup_index % uniforms.x_shape[1];\n    let hight = uniforms.x_shape[2];\n    // initialize workgroup memory\n    var sum = ${d}(0);\n    var squared_sum = ${d}(0);\n    for (var h = local_idx; h < hight; h += workgroup_size) {\n      let value = ${d}(${s.get("batch","channel","h")});\n      sum += value;\n      squared_sum += value * value;\n    }\n    workgroup_shared[local_idx] = ${u}(sum, squared_sum);\n    workgroupBarrier();\n\n    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (local_idx < currSize) {\n        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (local_idx == 0) {\n      let sum_final = ${Bt("workgroup_shared[0][0]",l)} / f32(hight * ${l});\n      let squared_sum_final = ${Bt("workgroup_shared[0][1]",l)} / f32(hight * ${l});\n\n      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${a}));\n      let channel_scale = inv_std_dev * f32(scale[channel]);\n      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;\n      output[workgroup_index] = vec2f(channel_scale, channel_shift);\n    }\n  }`}},{inputs:[t,n,r],outputs:[-1]})[0]},Fi=(e,t,n)=>{let r=t[0].dims,s=r,o=r[0],i=r[1],a=Tt.sizeFromDimension(r,2),l=zt(a),d=Tt.size(s)/l,u=Ei(e,t[0],t[1],t[2],o,a,i,n.epsilon),c=[o,i,a/l],p=[o,i];e.compute({name:"InstanceNormalization",shaderCache:{hint:`${l}`,inputDependencies:["type","none"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...It(c,p,c)]}),getShaderSource:e=>{let n=Rt("x",t[0].dataType,c.length,l),r=Rt("scale_shift",1,p.length,2),s=jt("output",t[0].dataType,c.length,l),o=[n,r,s];return`\n  ${e.registerUniform("output_size","u32").declareVariables(...o)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let outputIndices = ${s.offsetToIndices("global_idx")};\n      let batch = outputIndices[0];\n      let channel = outputIndices[1];\n      let scale_shift = ${r.getByIndices("vec2<u32>(batch, channel)")};\n      let value = ${n.getByOffset("global_idx")} * ${s.type.value}(scale_shift.x) + ${s.type.value}(scale_shift.y);\n      ${s.setByOffset("global_idx","value")};\n  }`}},{inputs:[t[0],u]})},Ai=(e,t,n)=>{let r=t[0].dims,s=r,o=r[0],i=r[r.length-1],a=Tt.sizeFromDimension(r,1)/i,l=zt(i),d=Tt.size(s)/l,u=[{type:12,data:a},{type:12,data:Math.floor(i/l)}],c=[0,r.length-1];for(let e=0;e<r.length-2;e++)c.push(e+1);let p=e.compute(Yt(e.inputs[0],c),{inputs:[e.inputs[0]],outputs:[-1]})[0],h=Ei(e,p,t[1],t[2],o,a,i,n.epsilon);e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:u}),getShaderSource:e=>{let n=Ft(t[0].dataType),r=1===l?"vec2f":`mat${l}x2f`,o=e=>{let t=0===e?"x":"y",r=1===l?"f32":`vec${l}f`;switch(l){case 1:return`${n}(${r}(scale.${t}))`;case 2:return`vec2<${n}>(${r}(scale[0].${t}, scale[1].${t}))`;case 4:return`vec4<${n}>(${r}(scale[0].${t}, scale[1].${t}, scale[2].${t}, scale[3].${t}))`;default:throw new Error(`Not supported compoents ${l}`)}},i=Rt("input",t[0].dataType,t[0].dims,l),a=jt("output",t[0].dataType,s,l);return`\n  @group(0) @binding(0) var<storage, read> input : array<${i.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scale_input : array<${r}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${a.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${e.mainStart()}\n    let current_image_number = global_idx / (uniforms.C * uniforms.H);\n    let current_channel_number = global_idx % uniforms.C;\n\n    let scale_offset = current_image_number * uniforms.C + current_channel_number;\n    let scale = scale_input[scale_offset];\n    output[global_idx] = fma(input[global_idx], ${o(0)}, ${o(1)});\n  }`}},{inputs:[t[0],h]})},Ii=(e,t)=>{"NHWC"===t.format?Ai(e,e.inputs,t):Fi(e,e.inputs,t)}})),$d=V((()=>{Ll(),Vl(),Gl(),zi=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Li=(e,t,n)=>{let r=t.simplified,s=e[0].dims,o=e[1],i=!r&&e[2],a=s,l=Tt.normalizeAxis(t.axis,s.length),d=Tt.sizeToDimension(s,l),u=Tt.sizeFromDimension(s,l),c=Tt.size(o.dims),p=i?Tt.size(i.dims):0;if(c!==u||i&&p!==u)throw new Error(`Size of X.shape()[axis:] == ${u}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${c} and bias size of ${p}`);let h=[];for(let e=0;e<s.length;++e)e<l?h.push(s[e]):h.push(1);let m=zt(u),f=["type","type"],g=[{type:12,data:d},{type:1,data:u},{type:12,data:Math.floor(u/m)},{type:1,data:t.epsilon}];i&&f.push("type");let _=n>1,w=n>2,y=[{dims:a,dataType:e[0].dataType}];return _&&y.push({dims:h,dataType:1}),w&&y.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${m};${n};${r}`,inputDependencies:f},getRunData:()=>({outputs:y,dispatchGroup:{x:Math.ceil(d/64)},programUniforms:g}),getShaderSource:t=>{let n=Ft(e[0].dataType),s=[Rt("x",e[0].dataType,e[0].dims,m),Rt("scale",o.dataType,o.dims,m)];i&&s.push(Rt("bias",i.dataType,i.dims,m)),s.push(jt("output",e[0].dataType,a,m)),_&&s.push(jt("mean_data_output",1,h)),w&&s.push(jt("inv_std_output",1,h));return`\n  ${t.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...s)}\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${Lt("f32",m)};\n    var mean_square_vector = ${Lt("f32",m)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${Ot(n,m,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${Bt("mean_vector",m)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${Bt("mean_square_vector",m)} / uniforms.norm_size ${r?"":"- mean * mean"} + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${Ot(n,m,"x[j + offset]")};\n      let f32scale = ${Ot(n,m,"scale[j]")};\n      output[j + offset] = ${s[0].type.value}((f32input ${r?"":"- mean"}) * inv_std_dev * f32scale\n        ${i?`+ ${Ot(n,m,"bias[j]")}`:""}\n      );\n    }\n\n    ${_?"mean_data_output[global_idx] = mean":""};\n    ${w?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`}}},Oi=(e,t)=>{zi(e.inputs),e.compute(Li(e.inputs,t,e.outputCount))}})),Cd=V((()=>{Ll(),Vl(),jl(),Gl(),Bi=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let n=e[0],r=n.dims.length;if(n.dims[r-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let s=Math.floor((t.k+t.blockSize-1)/t.blockSize),o=t.blockSize/8*t.bits,i=e[1];if(!Tt.areEqual(i.dims,[t.n,s,o]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let a=e[2].dims;if(Tt.size(a)!==t.n*s)throw new Error("scales input size error.");if(4===e.length){let n=e[3].dims,r=t.bits>4?t.n*s:t.n*Math.floor((s+1)/2);if(Tt.size(n)!==r)throw new Error("zeroPoints input size error.")}},Di=(e,t)=>{let n=e[0].dims,r=n.length,s=n[r-2],o=t.k,i=t.n,a=n.slice(0,r-2),l=Tt.size(a),d=e[1].dims[2]/4,u=e[0].dataType,c=zt(t.k),p=zt(d),h=zt(i),m=a.concat([s,i]),f=s>1&&i/h%2==0?2:1,g=Tt.size(m)/h/f,_=64,w=[],y=[l,s,o/c],b=Tt.convertShape(e[1].dims).slice();b.splice(-1,1,d/p),w.push(...It(y)),w.push(...It(b)),w.push(...It(e[2].dims)),4===e.length&&w.push(...It(Tt.convertShape(e[3].dims)));let v=[l,s,i/h];w.push(...It(v));return{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${c};${p};${h};${f};64`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:m,dataType:u}],dispatchGroup:{x:g},programUniforms:w}),getShaderSource:n=>{let r=y.length,s=Rt("a",e[0].dataType,r,c),o=Rt("b",12,b.length,p),i=Rt("scales",e[2].dataType,e[2].dims.length),a=[s,o,i],l=4===e.length?Rt("zero_points",12,e[3].dims.length):void 0;l&&a.push(l);let u=v.length,m=jt("output",e[0].dataType,u,h),g=Ft(e[0].dataType),w=(()=>{switch(c){case 1:return`array<${g}, 8>`;case 2:return`mat4x2<${g}>`;case 4:return`mat2x4<${g}>`;default:throw new Error(`${c}-component is not supported.`)}})();return`\n        var<workgroup> workgroup_shared: array<${m.type.value}, ${f*_}>;\n        ${n.declareVariables(...a,m)}\n        ${n.mainStart([_,1,1])}\n          let output_indices = ${m.offsetToIndices(`(global_idx / 64) * ${f}`)};\n          let col = output_indices[2];\n          let row = output_indices[1];\n          let batch = output_indices[0];\n          let nBlocksPerCol = uniforms.b_shape[1];\n\n          for (var block = local_id.x; block < nBlocksPerCol; block += 64) {\n            //process one block\n            var word_offset: u32 = block * ${t.blockSize/c};\n            ${(()=>{let e=`\n            var col_index = col * ${h};\n            ${l?"\n            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;\n            var zero_point_byte_count: u32;\n            var zero_point_word_index: u32;\n            var zero_point_byte_offset: u32;\n            let zero_point_nibble_offset: u32 = block & 0x1u;\n            var zero_point_bits_offset: u32;\n            var zero_point_word: u32;":`\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${g}(8);`}\n            `;for(let t=0;t<h*f;t++)e+=`\n            let scale${t} = ${i.getByOffset("col_index * nBlocksPerCol + block")};\n            ${l?`\n            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);\n            zero_point_word_index = zero_point_byte_count >> 0x2u;\n            zero_point_byte_offset = zero_point_byte_count & 0x3u;\n            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            zero_point_word = ${l.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;\n            let zero_point${t} = ${g}((zero_point_word) & 0xFu);`:""}\n            col_index += 1;`;return e})()}\n            for (var word: u32 = 0; word < ${d}; word += ${p}) {\n              ${(()=>{let e=`col_index = col * ${h};`;for(let t=0;t<h*f;t++)e+=`\n            let b${t}_data = ${o.getByIndices(`${o.type.indices}(col_index, block, word)`)};\n            col_index += 1;`;return e+=`\n            var b_value: u32;\n            let b_mask: u32 = 0x0F0F0F0Fu;\n            var b_value_lower: vec4<u32>;\n            var b_value_upper: vec4<u32>;\n            var b_quantized_values: ${w};\n            var b_dequantized_values: ${w};`,e})()}\n              for (var i: u32 = 0; i < ${p}; i++) {\n                ${(()=>{let e=`\n          // reuse a data\n            var input_offset = ${s.indicesToOffset(`${s.type.indices}(batch, row, word_offset)`)};\n            var a_data: ${w};\n            for (var j: u32 = 0; j < ${8/c}; j++) {\n              a_data[j] = ${s.getByOffset("input_offset")};\n              input_offset++;\n            }\n          `;for(let t=0;t<h*f;t++)e+=`\n            b_value = ${1===p?`b${t}_data`:`b${t}_data[i]`};\n            b_value_lower = unpack4xU8(b_value & b_mask);\n            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);\n            b_quantized_values = ${w}(${Array.from({length:4},((e,t)=>`${g}(b_value_lower[${t}]), ${g}(b_value_upper[${t}])`)).join(", ")});\n            b_dequantized_values = ${1===c?`${w}(${Array.from({length:8},((e,n)=>`(b_quantized_values[${n}] - ${l?`zero_point${t}`:"zero_point"}) * scale${t}`)).join(", ")});`:`(b_quantized_values - ${w}(${Array(8).fill(l?`zero_point${t}`:"zero_point").join(",")})) * scale${t};`};\n            workgroup_shared[local_id.x * ${f} + ${Math.floor(t/h)}]${h>1?`[${t%h}]`:""} += ${Array.from({length:8/c},((e,t)=>""+(1===c?`a_data[${t}] * b_dequantized_values[${t}]`:`dot(a_data[${t}], b_dequantized_values[${t}])`))).join(" + ")};\n          `;return e})()}\n                word_offset += ${8/c};\n              }\n            }\n          }\n          workgroupBarrier();\n\n          if (local_id.x < ${f}) {\n            var output_value: ${m.type.value} = ${m.type.value}(0);\n            var workgroup_shared_offset: u32 = local_id.x;\n            for (var b: u32 = 0u; b < 64u; b++) {\n              output_value += workgroup_shared[workgroup_shared_offset];\n              workgroup_shared_offset += ${f};\n            }\n            ${m.setByIndices(`${m.type.indices}(batch, row, col + local_id.x)`,"output_value")};\n          }\n        }`}}},Ni=(e,t)=>{let n=e[0].dims,r=n.length,s=n[r-2],o=t.k,i=t.n,a=n.slice(0,r-2),l=Tt.size(a),d=e[1].dims[2]/4,u=e[0].dataType,c=zt(t.k),p=zt(d),h=a.concat([s,i]),m=i%8==0?8:i%4==0?4:1,f=128/m,g=f*p*8,_=g/c,w=g/t.blockSize,y=Tt.size(h)/m,b=[],v=[l,s,o/c],x=Tt.convertShape(e[1].dims).slice();x.splice(-1,1,d/p),b.push(...It(v)),b.push(...It(x)),b.push(...It(e[2].dims)),4===e.length&&b.push(...It(Tt.convertShape(e[3].dims)));let M=[l,s,i];b.push(...It(M));return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${c};${p};${f};${m}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:h,dataType:u}],dispatchGroup:{x:y},programUniforms:b}),getShaderSource:n=>{let r=v.length,s=Rt("a",e[0].dataType,r,c),o=Rt("b",12,x.length,p),i=Rt("scales",e[2].dataType,e[2].dims.length),a=[s,o,i],l=4===e.length?Rt("zero_points",12,e[3].dims.length):void 0;l&&a.push(l);let d=M.length,u=jt("output",e[0].dataType,d),h=Ft(e[0].dataType);return`\n        var<workgroup> sub_a: array<${s.type.value}, ${_}>;\n        var<workgroup> inter_results: array<array<${u.type.value}, ${f}>, ${m}>;\n        ${n.declareVariables(...a,u)}\n        ${n.mainStart([f,m,1])}\n          let output_indices = ${u.offsetToIndices(`workgroup_index * ${m}`)};\n          let col = output_indices[2];\n          let row = output_indices[1];\n          let batch = output_indices[0];\n          let n_blocks_per_col = uniforms.b_shape[1];\n          let num_tiles =  (n_blocks_per_col - 1) / ${w} + 1;\n\n          // Loop over shared dimension.\n          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {\n            let a_col_start = tile * ${_};\n            // load one tile A data into shared memory.\n            for (var a_offset = local_idx; a_offset < ${_}; a_offset += 128)\n            {\n              let a_col = a_col_start + a_offset;\n              if (a_col < uniforms.a_shape[2])\n              {\n                sub_a[a_offset] = ${s.getByIndices(`${s.type.indices}(batch, row, a_col)`)};\n              } else {\n                sub_a[a_offset] = ${s.type.value}(0);\n              }\n            }\n            workgroupBarrier();\n\n            // each thread process one block\n            let b_row = col + local_id.y;\n            let block = tile * ${w} + local_id.x;\n            ${l?`\n            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;\n            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);\n            let zero_point_word_index = zero_point_byte_count >> 0x2u;\n            let zero_point_byte_offset = zero_point_byte_count & 0x3u;\n            let zero_point_nibble_offset: u32 = block & 0x1u;\n            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            let zero_point_word = ${l.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;\n            let zero_point = ${h}((zero_point_word) & 0xFu);`:`\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${h}(8);`}\n            let scale = ${i.getByOffset("b_row * n_blocks_per_col + block")};\n            let b_data = ${o.getByIndices(`${o.type.indices}(b_row, block, 0)`)};\n            var word_offset = local_id.x * ${t.blockSize/c};\n            for (var i: u32 = 0; i < ${p}; i++) {\n              ${(()=>{switch(c){case 1:return`\n          let a_data0 = vec4<${h}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);\n          let a_data1 = vec4<${h}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`\n          let a_data0 = vec4<${h}>(sub_a[word_offset], sub_a[word_offset + 1]);\n          let a_data1 = vec4<${h}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return"\n          let a_data0 = sub_a[word_offset];\n          let a_data1 = sub_a[word_offset + 1];";default:throw new Error(`${c}-component is not supported.`)}})()}\n              let b_value = ${1===p?"b_data":"b_data[i]"};\n              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);\n              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);\n              let b_quantized_values = mat2x4<${h}>(${Array.from({length:4},((e,t)=>`${h}(b_value_lower[${t}]), ${h}(b_value_upper[${t}])`)).join(", ")});\n              let b_dequantized_values = (b_quantized_values - mat2x4<${h}>(${Array(8).fill("zero_point").join(",")})) * scale;\n              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},((e,t)=>`dot(a_data${t}, b_dequantized_values[${t}])`)).join(" + ")};\n              word_offset += ${8/c};\n            }\n            workgroupBarrier();\n          }\n\n          if (local_idx < ${m}) {\n            var output_value: ${u.type.value} = ${u.type.value}(0);\n            for (var b = 0u; b < ${f}; b++) {\n              output_value += inter_results[local_idx][b];\n            }\n            if (col + local_idx < uniforms.output_shape[2])\n            {\n              ${u.setByIndices(`${u.type.indices}(batch, row, col + local_idx)`,"output_value")}\n            }\n          }\n        }`}}},Ri=(e,t)=>{Bi(e.inputs,t),32===t.blockSize&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(Ni(e.inputs,t)):e.compute(Di(e.inputs,t))},ji=e=>vt(e)})),Pd=V((()=>{Ll(),Vl(),Gl(),Vi=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(1!==e[0].dataType&&10!==e[0].dataType)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=2*e[0].dims.length===e[1].dims[0];if(4===e.length&&(t=2*e[3].dims[0]===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Gi=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n            k = i32(${e.indicesGet("indices",s)}) - ${Dt("uniforms.pads",s,n)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${Dt("uniforms.x_shape",s,t)})) {\n              break;\n            }\n            offset += k * i32(${Dt("uniforms.x_strides",s,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${r}\n            value = x[offset];\n          }\n      `},Ui=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${Dt("uniforms.pads",s,n)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${Dt("uniforms.x_shape",s,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${Dt("uniforms.x_shape",s,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${Dt("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},qi=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${Dt("uniforms.pads",s,n)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${Dt("uniforms.x_shape",s,t)})) {\n                  k = i32(${Dt("uniforms.x_shape",s,t)}) - 1;\n                }\n                offset += k * i32(${Dt("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Wi=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${Dt("uniforms.pads",s,n)};\n                if (k < 0)  {\n                  k += i32(${Dt("uniforms.x_shape",s,t)}]);\n                }\n                if (k >= i32(${Dt("uniforms.x_shape",s,t)})) {\n                  k -= i32(${Dt("uniforms.x_shape",s,t)});\n                }\n                offset += k * i32(${Dt("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Hi=(e,t,n)=>{switch(n.mode){case 0:return Gi(e,t,n.pads.length);case 1:return Ui(e,t,n.pads.length);case 2:return qi(e,t,n.pads.length);case 3:return Wi(e,t,n.pads.length);default:throw new Error("Invalid mode")}},Xi=(e,t)=>{let n=Tt.padShape(e[0].dims.slice(),t.pads),r=e[0].dims,s=[{type:12,data:Tt.size(n)},{type:6,data:t.pads}],o=e.length>=3&&e[2].data;0===t.mode&&s.push({type:o?e[2].dataType:1,data:t.value}),s.push(...It(e[0].dims,n));return{name:"Pad",shaderCache:{hint:`${t.mode}${o}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Tt.size(n)/64)},programUniforms:s}),getShaderSource:s=>{let i=jt("output",e[0].dataType,n.length),a=Rt("x",e[0].dataType,r.length),l=a.type.value,d=Hi(i,r.length,t),u=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return 0===t.mode&&u.push({name:"constant_value",type:o?l:"f32"}),`\n            ${s.registerUniforms(u).declareVariables(a,i)}\n            ${s.mainStart()}\n            ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${i.offsetToIndices("global_idx")};\n\n            var value = ${l}(0);\n            ${d}\n            output[global_idx] = value;\n        }`}}},Qi=(e,t)=>{if(e.length>1){let n=e[1].getBigInt64Array(),r=e.length>=3&&e[2].data?10===e[2].dataType?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,s=e[0].dims.length,o=new Int32Array(2*s).fill(0);if(e.length>=4){let t=e[3].getBigInt64Array();for(let e=0;e<t.length;e++)o[Number(t[e])]=Number(n[e]),o[Number(t[e])+s]=Number(n[e+t.length])}else n.forEach(((e,t)=>o[Number(t)]=Number(e)));let i=[];return o.forEach((e=>i.push(e))),{mode:t.mode,value:r,pads:i}}return t},Ki=(e,t)=>{Vi(e.inputs);let n=Qi(e.inputs,t);e.compute(Xi(e.inputs,n),{inputs:[0]})}})),Sd=V((()=>{pe(),Ll(),Vl(),Gl(),Yi=e=>{if(p.webgpu.validateInputContent&&(!e||1!==e.length))throw new Error("Pool ops requires 1 input.")},Ji=(e,t,n)=>{let r="NHWC"===t.format,s=e.dims.slice();r&&s.splice(1,0,s.pop());let o=Object.hasOwnProperty.call(t,"dilations"),i=t.kernelShape.slice(),a=t.strides.slice(),l=o?t.dilations.slice():[],d=t.pads.slice();kt.adjustPoolAttributes(n,s,i,a,l,d);let u=kt.computePoolOutputShape(n,s,a,l,i,d,t.autoPad),c=Object.assign({},t);o?Object.assign(c,{kernelShape:i,strides:a,pads:d,dilations:l,cacheKey:t.cacheKey}):Object.assign(c,{kernelShape:i,strides:a,pads:d,cacheKey:t.cacheKey});let p=u.slice();return p.push(p.splice(1,1)[0]),[c,r?p:u]},Zi=(e,t)=>{let n="NHWC"===t.format,r=[{type:12,data:Tt.size(e)},{type:12,data:Tt.size(t.kernelShape)}],s=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let e=t.kernelShape[t.kernelShape.length-1],n=t.strides[t.strides.length-1],o=t.pads[t.pads.length/2-1],i=t.pads[t.pads.length-1],a=!!(o+i);r.push({type:12,data:e},{type:12,data:n},{type:12,data:o},{type:12,data:i}),s.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let l=!1;if(2===t.kernelShape.length){let e=t.kernelShape[t.kernelShape.length-2],n=t.strides[t.strides.length-2],o=t.pads[t.pads.length/2-2],i=t.pads[t.pads.length-2];l=!!(o+i),r.push({type:12,data:e},{type:12,data:n},{type:12,data:o},{type:12,data:i}),s.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[r,s,!0,a,l]}{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let e=Tt.computeStrides(t.kernelShape);return r.push({type:12,data:e},{type:12,data:t.pads},{type:12,data:t.strides}),s.push({name:"kernelStrides",type:"u32",length:e.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length}),[r,s,!!t.pads.reduce(((e,t)=>e+t)),!1,!1]}},ea=(e,t,n,r,s,o,i,a,l,d,u,c)=>{let p="NHWC"===s.format,h=t.type.value,m=jt("output",t.type.tensor,r);if(s.kernelShape.length<=2){let r="",d="",f="",g=n-(p?2:1);if(r=u?`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${g}] < 0 || xIndices[${g}]\n                      >= uniforms.x_shape[${g}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${o}\n                }`:`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${o}\n                }`,2===s.kernelShape.length){let e=n-(p?3:2);d=c?`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${e}] < 0 || xIndices[${e}] >= uniforms.x_shape[${e}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                `,f="\n              }\n            "}return`\n            ${e.registerUniforms(l).declareVariables(t,m)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${m.offsetToIndices("global_idx")};\n              var xIndices = ${m.offsetToIndices("global_idx")};\n\n              var value = ${h}(${a});\n              var pad = 0;\n              ${d}\n              ${r}\n              ${f}\n              ${i}\n\n              output[global_idx] = value;\n            }`}{if(p)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let r=s.kernelShape.length,u=s.pads.length,c="";return c=d?`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${o}\n              }`:`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${o}\n            `,`\n            ${e.registerUniforms(l).declareVariables(t,m)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${m.offsetToIndices("global_idx")};\n              var xIndices = ${m.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${r}>;\n\n              var value = ${h}(${a});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${r-1}u; j++) {\n                  offsets[j] = offset / ${Dt("uniforms.kernelStrides","j",r)};\n                  offset -= offsets[j] * ${Dt("uniforms.kernelStrides","j",r)};\n                }\n                offsets[${r-1}] = offset;\n\n                isPad = false;\n                for (var j = ${n-r}u; j < ${n}u; j++) {\n                  xIndices[j] = indices[j] * ${Dt("uniforms.strides",`j - ${n-r}u`,r)}\n                    + offsets[j - ${n-r}u] - ${Dt("uniforms.pads","j - 2u",u)};\n                  ${c}\n              }\n              ${i}\n\n              output[global_idx] = value;\n            }`}},ta=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,na=e=>`${ta(e)};${e.countIncludePad}`,ra=e=>`${ta(e)};${e.storageOrder};${e.dilations}`,sa=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),oa=(e,t,n,r)=>{let[s,o]=Ji(t,r,n),i=Rt("x",t.dataType,t.dims.length),a=i.type.value,l="";s.countIncludePad?l+=`value /= ${a}(uniforms.kernelSize);`:l+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[d,u,c,p,h]=Zi(o,s);d.push(...It(t.dims,o));return{name:e,shaderCache:{hint:`${r.cacheKey};${c};${p};${h}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Tt.size(o)/64)},programUniforms:d}),getShaderSource:e=>ea(e,i,t.dims.length,o.length,s,"value += x_val;",l,0,u,c,p,h)}},ia=e=>{let t=0!==e.count_include_pad,n=sa(e);if(0!==n.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let r={countIncludePad:t,...n,cacheKey:""};return{...r,cacheKey:na(r)}},aa=(e,t)=>{Yi(e.inputs),e.compute(oa("AveragePool",e.inputs[0],!1,t))},la={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},da=e=>{let t=e.format;return{format:t,...la,cacheKey:t}},ua=(e,t)=>{Yi(e.inputs),e.compute(oa("GlobalAveragePool",e.inputs[0],!0,t))},ca=(e,t,n,r)=>{let[s,o]=Ji(t,r,n),i=Rt("x",t.dataType,t.dims.length),[a,l,d,u,c]=Zi(o,s);return a.push(...It(t.dims,o)),{name:e,shaderCache:{hint:`${r.cacheKey};${d};${u};${c}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Tt.size(o)/64)},programUniforms:a}),getShaderSource:e=>ea(e,i,t.dims.length,o.length,s,"\n      value = max(x_val, value);\n    ","",10===t.dataType?-65504:-1e5,l,d,u,c)}},pa=(e,t)=>{Yi(e.inputs),e.compute(ca("MaxPool",e.inputs[0],!1,t))},ha=e=>{let t=e.storage_order,n=e.dilations,r=sa(e);if(0!==t)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==r.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let s={storageOrder:t,dilations:n,...r,cacheKey:""};return{...s,cacheKey:ra(s)}},ma=e=>{let t=e.format;return{format:t,...la,cacheKey:t}},fa=(e,t)=>{Yi(e.inputs),e.compute(ca("GlobalMaxPool",e.inputs[0],!0,t))}})),Ed=V((()=>{Ll(),Vl(),jl(),Gl(),ga=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(3===e.length&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(6===e[0].dataType&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(0!==e[1].dims.length&&1!==e[1].dims.length&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map(((t,n)=>t===e[2].dims[n])).reduce(((e,t)=>e&&t),!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(0===e[1].dims.length||1===e[1].dims.length&&1===e[1].dims[0])throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map(((n,r)=>r===t.axis||n===e[0].dims[r])).reduce(((e,t)=>e&&t),!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let n=e[0].dims[t.axis],r=e[1].dims[t.axis];if(t.blockSize<Math.ceil(n/r)||t.blockSize>Math.ceil(n/(r-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},_a=(e,t)=>{let n=Tt.normalizeAxis(t.axis,e[0].dims.length),r=e[0].dataType,s=3===r,o=e[0].dims,i=e[1].dataType,a=Tt.size(o),l=3===r||2===r,d=l?[Math.ceil(Tt.size(e[0].dims)/4)]:e[0].dims,u=e[1].dims,c=e.length>2?e[2]:void 0,p=c?l?[Math.ceil(Tt.size(c.dims)/4)]:c.dims:void 0,h=0===u.length||1===u.length&&1===u[0],m=!1===h&&1===u.length,f=zt(a),g=h&&(!l||4===f),_=g?f:1,w=g&&!l?f:1,y=Rt("input",l?12:r,d.length,w),b=Rt("scale",i,u.length),v=c?Rt("zero_point",l?12:r,p.length):void 0,x=jt("output",i,o.length,_),M=[y,b];v&&M.push(v);let T=[d,u];c&&T.push(p);let k=[{type:12,data:a/_},{type:12,data:n},{type:12,data:t.blockSize},...It(...T,o)];return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getShaderSource:e=>`\n      ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...M,x)}\n      ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          let output_indices = ${x.offsetToIndices("global_idx")};\n\n          // Set input x\n          ${l?`\n            let input = ${y.getByOffset("global_idx / 4")};\n            let x_vec = ${s?"unpack4xI8(input)":"unpack4xU8(input)"};\n            let x_value = ${1===_?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${y.getByOffset("global_idx")};`};\n\n          // Set scale input\n          ${h?`let scale_value= ${b.getByOffset("0")}`:m?`\n            let scale_index = ${x.indicesGet("output_indices","uniforms.axis")};\n            let scale_value= ${b.getByOffset("scale_index")};`:`\n            var scale_indices: ${b.type.indices} = output_indices;\n            let index = ${b.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;\n            ${b.indicesSet("scale_indices","uniforms.axis","index")};\n            let scale_value= ${b.getByIndices("scale_indices")};`};\n\n          // Set zero-point input\n          ${v?h?l?`\n                let zero_point_input = ${v.getByOffset("0")};\n                let zero_point_vec =  ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${v.getByOffset("0")}`:m?l?`\n                let zero_point_index = ${x.indicesGet("output_indices","uniforms.axis")};\n                let zero_point_input = ${v.getByOffset("zero_point_index / 4")};\n                let zero_point_vec =  ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`\n                let zero_point_index = ${x.indicesGet("output_indices","uniforms.axis")};\n                let zero_point_value = ${v.getByOffset("zero_point_index")};`:l?`\n                let zero_point_offset = ${b.indicesToOffset("scale_indices")};\n                let zero_point_input = ${v.getByOffset("zero_point_offset / 4")};\n                let zero_point_vec = ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${v.getByIndices("scale_indices")};`:`let zero_point_value = ${l?s?"i32":"u32":y.type.value}(0);`};\n      // Compute and write output\n      ${x.setByOffset("global_idx",`${x.type.value}(x_value - zero_point_value) * scale_value`)};\n      }`,getRunData:()=>({outputs:[{dims:o,dataType:i}],dispatchGroup:{x:Math.ceil(a/_/64),y:1,z:1},programUniforms:k})}},wa=(e,t)=>{ga(e.inputs,t),e.compute(_a(e.inputs,t))},ya=e=>vt({axis:e.axis,blockSize:e.blockSize})})),Fd=V((()=>{pe(),Ll(),Gl(),ba=(e,t,n)=>{if(e===t||e<t&&n<0||e>t&&n>0)throw new Error("Range these inputs' contents are invalid.")},va=(e,t,n,r)=>{let s=Math.abs(Math.ceil((t-e)/n)),o=[s],i=s,a=[{type:12,data:i},{type:r,data:e},{type:r,data:n},...It(o)];return{name:"Range",shaderCache:{hint:`${r}`},getShaderSource:e=>{let t=jt("output",r,o.length),n=t.type.value,s=[{name:"outputSize",type:"u32"},{name:"start",type:n},{name:"delta",type:n}];return`\n        ${e.registerUniforms(s).declareVariables(t)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${n}(global_idx) * uniforms.delta;\n      }`},getRunData:()=>({outputs:[{dims:o,dataType:r}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:a})}},xa=e=>{let t=0,n=0,r=0;6===e.inputs[0].dataType?(t=e.inputs[0].getInt32Array()[0],n=e.inputs[1].getInt32Array()[0],r=e.inputs[2].getInt32Array()[0]):1===e.inputs[0].dataType&&(t=e.inputs[0].getFloat32Array()[0],n=e.inputs[1].getFloat32Array()[0],r=e.inputs[2].getFloat32Array()[0]),p.webgpu.validateInputContent&&ba(t,n,r),e.compute(va(t,n,r,e.inputs[0].dataType),{inputs:[]})}})),Ad=V((()=>{Ll(),Vl(),jl(),Gl(),Ma=(e,t)=>{if(e.every((e=>e>0||(()=>{throw new Error("Resize requires scales input values to be positive")}))),e.length>0)if("linear"===t.mode){if(!(2===e.length||3===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]||5===e.length&&1===e[0]&&1===e[1]))throw new Error("For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1")}else if("cubic"===t.mode&&!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")},Ta=(e,t,n)=>{t.every((e=>e>=0&&e<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")})));let r=new Array(n).fill(1);return t.forEach(((t,n)=>r[t]=e[n])),r},ka=(e,t,n,r,s,o)=>{let[i,a,l]=n>10?[1,2,3]:[-1,e.length>1?1:-1,-1],d=e[0].dims.length;if(i>0&&e.length>i&&e[i].dims.length>0)e[i].getFloat32Array().forEach((e=>o.push(e)));else if("tf_crop_and_resize"===t.coordinateTransformMode)throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&e.length>a&&1===e[a].dims.length&&e[a].dims[0]>0){if(e[a].getFloat32Array().forEach((e=>r.push(e))),0!==r.length&&r.length!==d&&n>=18&&r.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Ma(r,t),t.axes.length>0&&Ta(r,t.axes,d).forEach(((e,t)=>r[t]=e))}if(l>0&&e.length>l&&1===e[l].dims.length&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach((e=>s.push(Number(e)))),0!==s.length&&s.length!==d&&n>=18&&s.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(0!==r.length&&r.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(0!==s.length&&s.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof r<"u"&&typeof s<"u"&&r.length>0&&s.length>d)throw new Error("Resize requires only of scales or sizes to be specified")},$a=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Ca=(e,t,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Pa=(e,t,n)=>{let r=new Array(n).fill(0).concat(new Array(n).fill(1)),s=0===e.length?r:e.slice();return t.length>0?(t.forEach(((e,o)=>{r[e]=s[o],r[o+n]=s[t.length+o]})),r):s},Sa=(e,t,n,r)=>{let s=[];if(n.length>0)if(r.length>0){if(e.forEach((e=>s.push(e))),Math.max(...r)>e.length)throw new Error("axes is out of bound");r.forEach(((e,t)=>s[e]=n[t]))}else n.forEach((e=>s.push(e)));else{if(0===t.length)throw new Error("Resize requires either scales or sizes.");s=e.map(((e,n)=>Math.round(e*t[n])))}return s},Ea=(e,t,n)=>{let r=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map((e=>t[e])),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map((e=>t[e])),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let s=e.slice();return n.axes.length>0?(n.axes.forEach((e=>t[e]=r)),n.axes.forEach((n=>s[n]=Math.round(e[n]*t[n])))):(t.fill(r,0,t.length),s.forEach(((e,n)=>s[n]=Math.round(e*t[n])))),s},Fa=(e,t,n,r,s)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${n.length}> {\n      var original_indices: array<${e.type.value}, ${n.length}>;\n      for (var i:u32 = 0; i < ${n.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${Dt("uniforms.scales","i",r)};\n        var roi_low = ${Dt("uniforms.roi","i",s)};\n        var roi_hi = ${Dt("uniforms.roi",`i + ${t.length}`,s)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${Dt("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${Dt("uniforms.output_shape","i",n.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Aa=(e,t,n,r,s,o,i)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${Dt("uniforms.scales","i",s)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${Dt("uniforms.roi","i",o)};\n          var roi_hi = ${Dt("uniforms.roi",`i + ${n.length}`,o)};\n          var input_shape_i = ${Dt("uniforms.input_shape","i",n.length)};\n          var output_shape_i = ${Dt("uniforms.output_shape","i",r.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${i} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Ia=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${Dt("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,za=(e,t,n,r)=>e.rank>r?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",n,"batch")};\n`:"",La=(e,t,n,r,s)=>{let[o,i,a,l]=2===n.length?[-1,0,1,-1]:[0,2,3,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",i,`max(0, min(row, ${n[i]} - 1))`)};\n      ${e.indicesSet("input_indices",a,`max(0, min(col, ${n[a]} - 1))`)};\n      ${za(e,l,o,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${d} = originalIndices[${i}];\n      var col:${d} = originalIndices[${a}];\n      ${r?`if (row < 0 || row > (${n[i]} - 1) || col < 0 || col > (${n[a]} - 1)) {\n        return ${s};\n      }`:""};\n      row = max(0, min(row, ${n[i]} - 1));\n      col = max(0, min(col, ${n[a]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};\n      var batch: u32 =  ${n.length>2?`u32(originalIndices[${o}])`:"0"};\n      var x11: ${d} = getInputValue(batch, channel, row1, col1);\n      var x12: ${d} = getInputValue(batch, channel, row1, col2);\n      var x21: ${d} = getInputValue(batch, channel, row2, col1);\n      var x22: ${d} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${d} = abs(row - ${d}(row1));\n      var dx2: ${d} = abs(${d}(row2) - row);\n      var dy1: ${d} = abs(col - ${d}(col1));\n      var dy2: ${d} = abs(${d}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Oa=(e,t,n,r,s,o,i,a,l,d)=>{let u=2===n.length,[c,p]=u?[0,1]:[2,3],h=e.type.value,m=i=>{let u=i===c?"row":"col";return`\n      fn ${u}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${h} {\n        var output_index = ${t.indicesGet("output_indices",i)};\n        var originalIdx: ${h} = getOriginalCoordinateFromResizedCoordinate(output_index, ${s[i]},\n        ${r[i]}, ${n[i]}, ${o[i]}, ${o[i]} + ${n.length});\n        var fractOriginalIdx: ${h} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${a} && (originalIdx < 0 || originalIdx > (${n[i]} - 1))) {\n          return ${l};\n        }\n        var data: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${u}: ${h} = originalIdx + ${h}(i);\n          if (${u} < 0 || ${u} >= ${n[i]}) {\n            ${d?"coefs[i + 1] = 0.0;\n                        continue;":a?`return ${l};`:`${u} = max(0, min(${u}, ${n[i]} - 1));`};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",i,`u32(${u})`)};\n          data[i + 1] = ${i===c?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${m(c)};\n    ${m(p)};\n  fn getCubicInterpolationCoefs(s: ${h}) -> array<${h}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${h} = 1.0 - absS;\n    var twoMinusAbsS: ${h} = 2.0 - absS;\n    var onePlusAbsS: ${h} = 1.0 + absS;\n    coeffs[0] = ((${i} * onePlusAbsS - 5 * ${i}) * onePlusAbsS + 8 * ${i}) * onePlusAbsS - 4 * ${i};\n    coeffs[1] = ((${i} + 2) * absS - (${i} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${i} + 2) * oneMinusAbsS - (${i} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${i} * twoMinusAbsS - 5 * ${i}) * twoMinusAbsS + 8 * ${i}) * twoMinusAbsS - 4 * ${i};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${h}, 4>, coefs: array<${h}, 4>) -> ${h} {\n    var coefsSum: ${h} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${h} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Ba=(e,t,n,r,s)=>{let[o,i,a,l,d]=3===n.length?[-1,0,1,2,-1]:[0,2,3,4,1],u=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${u} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",i,`max(0, min(depth, ${n[i]} - 1))`)};\n      ${e.indicesSet("input_indices",a,`max(0, min(height, ${n[a]} - 1))`)};\n      ${e.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};\n      ${za(e,d,o,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${u} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${u} = originalIndices[${i}];\n      var height:${u} = originalIndices[${a}];\n      var width:${u} = originalIndices[${l}];\n      ${r?`if (depth < 0 || depth > (${n[i]} - 1) || height < 0 || height > (${n[a]} - 1) || width < 0 || (width > ${n[l]} - 1)) {\n      return ${s};\n        }`:""};\n\n    depth = max(0, min(depth, ${n[i]} - 1));\n      height = max(0, min(height, ${n[a]} - 1));\n      width = max(0, min(width, ${n[l]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${n.length>3?`u32(originalIndices[${d}])`:"0"};\n      var batch: u32 =  ${n.length>3?`u32(originalIndices[${o}])`:"0"};\n\n      var x111: ${u} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${u} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${u} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${u} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${u} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${u} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${u} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${u} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${u} = abs(depth - ${u}(depth1));\n      var dx2: ${u} = abs(${u}(depth2) - depth);\n      var dy1: ${u} = abs(height - ${u}(height1));\n      var dy2: ${u} = abs(${u}(height2) - height);\n      var dz1: ${u} = abs(width - ${u}(width1));\n      var dz2: ${u} = abs(${u}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Da=(e,t,n,r,s,o)=>{let i=e.dims,a=Pa(o,t.axes,i.length),l=Sa(i,r,s,t.axes),d=r.slice();0===r.length&&(d=i.map(((e,t)=>0===e?1:l[t]/e)),"stretch"!==t.keepAspectRatioPolicy&&(l=Ea(i,d,t)));let u=jt("output",e.dataType,l.length),c=Rt("input",e.dataType,i.length),p=Tt.size(l),h=i.length===l.length&&i.every(((e,t)=>e===l[t])),m="tf_crop_and_resize"===t.coordinateTransformMode,f=t.extrapolationValue,g=c.type.value;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${n}|${d.length>0?d:""}|${s.length>0?s:""}|${a.length>0?a:""}|${h}|${i}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${h?"":`\n      ${$a(t.coordinateTransformMode,g)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Ia(c,i)};\n              ${Ca(t.nearestMode,n,g)};\n              ${Aa(c,u,i,l,d.length,a.length,m)};\n              `;case"linear":return`\n              ${Fa(u,i,l,d.length,a.length)};\n              ${(()=>{if(2===i.length||4===i.length)return`${La(c,u,i,m,f)}`;if(3===i.length||5===i.length)return`${Ba(c,u,i,m,f)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(2===i.length||4===i.length)return`${Oa(c,u,i,l,d,a,t.cubicCoeffA,m,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${e.registerUniform("output_size","u32").registerUniform("scales","f32",d.length).registerUniform("roi","f32",a.length).declareVariables(c,u)}\n      ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${h?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${u.offsetToIndices("global_idx")};\n        var input_indices: ${c.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${c.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${2===i.length||4===i.length?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},{type:1,data:d},{type:1,data:a},...It(i,l)]})}},Na=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Ra=(e,t)=>{let n=[],r=[],s=[],o=Na(e);if(0!==t.antialias)throw Error("Only default value (0) for Antialias attribute is supported");ka(e.inputs,t,o,n,r,s),e.compute(Da(e.inputs[0],t,o,n,r,s),{inputs:[0]})},ja=e=>{let t=e.antialias,n=e.axes,r=e.coordinateTransformMode,s=e.cubicCoeffA,o=0!==e.excludeOutside,i=e.extrapolationValue,a=e.keepAspectRatioPolicy,l=e.mode,d=""===e.nearestMode?"simple":e.nearestMode;return vt({antialias:t,axes:n,coordinateTransformMode:r,cubicCoeffA:s,excludeOutside:o,extrapolationValue:i,keepAspectRatioPolicy:a,mode:l,nearestMode:d})}})),Id=V((()=>{Ll(),Vl(),jl(),Gl(),Va=(e,t)=>{let[n,r,s,o]=e,{numHeads:i,rotaryEmbeddingDim:a}=t;if(3!==n.dims.length&&4!==n.dims.length)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${n.dims.length}`);if(!Tt.areEqual(r.dims,[])&&!Tt.areEqual(r.dims,[1])&&2!==r.dims.length)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${r.dims.length}`);if(2!==s.dims.length)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${s.dims.length}`);if(2!==o.dims.length)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${o.dims.length}`);if(!Tt.areEqual(s.dims,o.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(a>0&&0===i)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=n.dims[0],d=n.dims[n.dims.length-2],u=s.dims[0],c=Tt.sizeFromDimension(n.dims,1)/d,p=0===a?2*s.dims[1]:c/i;if(a>p)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(2===r.dims.length){if(l!==r.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${r.dims[0]}`);if(d!==r.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${r.dims[1]}`)}if(p/2!==s.dims[1]&&a/2!==s.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${s.dims[1]}`);if(d>u)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Ga=(e,t)=>{let{interleaved:n,numHeads:r,rotaryEmbeddingDim:s,scale:o}=t,i=e[0].dims[0],a=Tt.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],d=a/l,u=e[2].dims[1],c=0===s?2*u:d/r,p=new Array(i,l,d/c,c-u),h=Tt.computeStrides(p),m=[{type:1,data:o},{type:12,data:p},{type:12,data:h},...3===e[0].dims.length?new Array({type:12,data:[a,d,c,1]}):[],...4===e[0].dims.length?new Array({type:12,data:[a,c,l*c,1]}):[],...It(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)];return{name:"RotaryEmbedding",shaderCache:{hint:vt({interleaved:n}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:t=>{let r=Rt("input",e[0].dataType,e[0].dims.length),s=Rt("position_ids",e[1].dataType,e[1].dims.length),o=Rt("cos_cache",e[2].dataType,e[2].dims.length),i=Rt("sin_cache",e[3].dataType,e[3].dims.length),a=jt("output",e[0].dataType,e[0].dims.length);return t.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:p.length},{name:"global_strides",type:"u32",length:h.length},{name:"input_output_strides",type:"u32",length:h.length}]),`\n        ${t.declareVariables(r,s,o,i,a)}\n\n        ${t.mainStart(St)}\n          let half_rotary_emb_dim = uniforms.${o.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${t.guardAgainstOutOfBoundsWorkgroupSizes("size")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${s.broadcastedIndicesToOffset("bsnh.xy",jt("",s.type.tensor,2))};\n            let position_id =\n                u32(${s.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${n});\n            let j = i + select(half_rotary_emb_dim, 1, ${n});\n            let re = ${r.getByOffset("i")} * ${o.get("position_id","bsnh[3]")} -\n                ${r.getByOffset("j")} * ${i.get("position_id","bsnh[3]")};\n            ${a.setByOffset("i","re")}\n            let im = ${r.getByOffset("i")} * ${i.get("position_id","bsnh[3]")} +\n                ${r.getByOffset("j")} * ${o.get("position_id","bsnh[3]")};\n            ${a.setByOffset("j","im")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${a.setByOffset("k",r.getByOffset("k"))}\n          }\n        }`},getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Tt.size(p)/St)},programUniforms:m})}},Ua=(e,t)=>{Va(e.inputs,t),e.compute(Ga(e.inputs,t))}})),zd=V((()=>{Ll(),Vl(),Gl(),qa=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],n=e[1],r=e[2];if(t.dataType!==n.dataType||t.dataType!==r.dataType)throw new Error("All inputs must have the same data type");if(3!==t.dims.length&&2!==t.dims.length)throw new Error("Input must be 2D or 3D");if(3!==n.dims.length&&2!==n.dims.length)throw new Error("Skip must be 2D or 3D");let s=t.dims[t.dims.length-1],o=t.dims[t.dims.length-2];if(n.dims[n.dims.length-1]!==s)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==o)throw new Error("Skip must have the same sequence length as input");if(1!==r.dims.length)throw new Error("Gamma must be 1D");if(r.dims[r.dims.length-1]!==s)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let t=e[3];if(1!==t.dims.length)throw new Error("Beta must be 1D");if(t.dims[t.dims.length-1]!==s)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let t=e[4];if(1!==t.dims.length)throw new Error("Bias must be 1D");if(t.dims[t.dims.length-1]!==s)throw new Error("Bias must have the same hidden size as input")}},Wa=(e,t,n,r)=>{let s=t.simplified,o=e[0].dims,i=Tt.size(o),a=o,l=i,d=o.slice(-1)[0],u=r?o.slice(0,-1).concat(1):[],c=!s&&e.length>3,p=e.length>4,h=r&&n>1,m=r&&n>2,f=n>3,g=64,_=zt(d),w=[{type:12,data:l},{type:12,data:_},{type:12,data:d},{type:1,data:t.epsilon}],y=[{dims:a,dataType:e[0].dataType}];return n>1&&y.push({dims:u,dataType:1}),n>2&&y.push({dims:u,dataType:1}),n>3&&y.push({dims:o,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${_};${h};${m};${f}`,inputDependencies:e.map(((e,t)=>"type"))},getShaderSource:t=>{let n=[Rt("x",e[0].dataType,e[0].dims,_),Rt("skip",e[1].dataType,e[1].dims,_),Rt("gamma",e[2].dataType,e[2].dims,_)];c&&n.push(Rt("beta",e[3].dataType,e[3].dims,_)),p&&n.push(Rt("bias",e[4].dataType,e[4].dims,_)),n.push(jt("output",e[0].dataType,a,_)),h&&n.push(jt("mean_output",1,u)),m&&n.push(jt("inv_std_output",1,u)),f&&n.push(jt("input_skip_bias_sum",e[0].dataType,a,_));let r=Ft(e[0].dataType),o=Ft(1,_);return`\n\n      ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...n)}\n      var<workgroup> sum_shared : array<${o}, 64>;\n      var<workgroup> sum_squared_shared : array<${o}, 64>;\n\n      ${t.mainStart([g,1,1])}\n        let ix = local_id.x;\n        let iy = global_id.x / 64;\n\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        var stride = hidden_size_vectorized / 64;\n        let offset = ix * stride + iy * hidden_size_vectorized;\n        let offset1d = stride * ix;\n        if (ix == 63) {\n          stride = hidden_size_vectorized - stride * ix;\n        }\n        for (var i: u32 = 0; i < stride; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${p?"bias[offset1d + i]":r+"(0.0)"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${f?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${Ot(r,_,"value")};\n          sum_shared[ix] += f32_value;\n          sum_squared_shared[ix] += f32_value * f32_value;\n        }\n        workgroupBarrier();\n\n        var reduce_size : u32 = 64;\n        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {\n          reduce_size = curr_size + (reduce_size & 1);\n          if (ix < curr_size) {\n            sum_shared[ix] += sum_shared[ix + reduce_size];\n            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];\n          }\n          workgroupBarrier();\n        }\n\n        let sum = sum_shared[0];\n        let square_sum = sum_squared_shared[0];\n        let mean = ${Bt("sum",_)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${Bt("square_sum",_)} / f32(uniforms.hidden_size) ${s?"":"- mean * mean"} + uniforms.epsilon);\n        ${h?"mean_output[global_idx] = mean;":""}\n        ${m?"inv_std_output[global_idx] = inv_std_dev;":""}\n\n        for (var i: u32 = 0; i < stride; i++) {\n          output[offset + i] = (output[offset + i] ${s?"":`- ${r}(mean)`}) *\n            ${r}(inv_std_dev) * gamma[offset1d + i]\n            ${c?"+ beta[offset1d + i]":""};\n        }\n      }`},getRunData:()=>({outputs:y,dispatchGroup:{x:Math.ceil(l/d)},programUniforms:w})}},Ha=(e,t)=>{qa(e.inputs);let n=[0];e.outputCount>1&&n.push(-3),e.outputCount>2&&n.push(-3),e.outputCount>3&&n.push(3),e.compute(Wa(e.inputs,t,e.outputCount,!1),{outputs:n})}})),Ld=V((()=>{Ll(),Vl(),jl(),Gl(),Xa=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(0!==t.axes.length){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach(((t,n)=>{if(6!==e[n+1].dataType&&7!==e[n+1].dataType)throw new Error(`Input ${n} must be an array of int32 or int64`)}))},Qa=(e,t)=>{let n=[];if(e.length>t)if(7===e[t].dataType)e[t].getBigInt64Array().forEach((e=>n.push(Number(e))));else{if(6!==e[t].dataType)throw new Error(`Input ${t} must be an array of int32 or int64`);e[t].getInt32Array().forEach((e=>n.push(Number(e))))}return n},Ka=(e,t)=>{if(e.length>1){let t=Qa(e,1),n=Qa(e,2),r=Qa(e,3);return 0===r.length&&(r=[...Array(e[0].dims.length).keys()]),vt({starts:t,ends:n,axes:r})}return t},Ya=(e,t,n,r,s)=>{let o=e;return e<0&&(o+=n[r[t]]),s[t]<0?Math.max(0,Math.min(o,n[r[t]]-1)):Math.max(0,Math.min(o,n[r[t]]))},Ja=(e,t,n)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${n.length}; i >= 0; i--) {\n            let input_shape_i = ${Dt("uniforms.input_shape","i",n.length)};\n            let steps_i = ${Dt("uniforms.steps","i",n.length)};\n            let signs_i = ${Dt("uniforms.signs","i",n.length)};\n            let starts_i = ${Dt("uniforms.starts","i",n.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Za=(e,t)=>{let n=e[0].dims,r=Tt.size(n),s=t.axes.length>0?Tt.normalizeAxes(t.axes,n.length):[...Array(n.length).keys()],o=Qa(e,4);o.forEach((e=>0!==e||(()=>{throw new Error("step cannot be 0")}))),0===o.length&&(o=Array(s.length).fill(1));let i=t.starts.map(((e,t)=>Ya(e,t,n,s,o))),a=t.ends.map(((e,t)=>Ya(e,t,n,s,o)));if(s.length!==i.length||s.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(s.length!==n.length)for(let e=0;e<n.length;++e)s.includes(e)||(i.splice(e,0,0),a.splice(e,0,n[e]),o.splice(e,0,1));let l=o.map((e=>Math.sign(e)));o.forEach(((e,t,n)=>{if(e<0){let r=(a[t]-i[t])/e,s=i[t],l=s+r*o[t];i[t]=l,a[t]=s,n[t]=-e}}));let d=n.slice(0);s.forEach(((e,t)=>{d[e]=Math.ceil((a[e]-i[e])/o[e])}));let u={dims:d,dataType:e[0].dataType},c=jt("output",e[0].dataType,d.length),p=Rt("input",e[0].dataType,e[0].dims.length),h=Tt.size(d),m=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:i.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:o.length}],f=[{type:12,data:h},{type:12,data:i},{type:6,data:l},{type:12,data:o},...It(e[0].dims,d)];return{name:"Slice",shaderCache:{hint:`${l.length}_${i.length}_${o.length}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${e.registerUniforms(m).declareVariables(p,c)}\n        ${Ja(p,c,n)}\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${c.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${c.setByOffset("global_idx",p.getByIndices("input_indices"))}\n      }`,getRunData:()=>({outputs:[u],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:f})}},el=(e,t)=>{Xa(e.inputs,t);let n=Ka(e.inputs,t);e.compute(Za(e.inputs,n),{inputs:[0]})},tl=e=>{let t=e.starts,n=e.ends,r=e.axes;return vt({starts:t,ends:n,axes:r})}})),Od=V((()=>{Ll(),Vl(),jl(),Ul(),Gl(),nl=e=>{if(!e||1!==e.length)throw new Error("Softmax op requires 1 input.")},rl=(e,t)=>{let n,r=e.inputs[0],s=r.dims,o=Tt.size(s),i=s.length,a=Tt.normalizeAxis(t.axis,i),l=a<s.length-1,d=[];l?(d=Array.from({length:i},((e,t)=>t)),d[a]=i-1,d[i-1]=a,n=e.compute(Yt(r,d),{inputs:[r],outputs:[-1]})[0]):n=r;let u=n.dims,c=u[i-1],p=o/c,h=zt(c),m=c/h,f=Rt("x",n.dataType,n.dims,h),g=jt("result",n.dataType,n.dims,h),_=f.type.value,w="f32"===Ft(n.dataType)?`var threadMax = ${_}(-3.402823e+38f);`:`var threadMax = ${_}(-65504.0h);`,y=e.compute({name:"Softmax",shaderCache:{hint:`${h}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:u,dataType:n.dataType}],dispatchGroup:{x:p},programUniforms:[{type:6,data:m}]}),getShaderSource:e=>`\n      var<workgroup> rowMaxShared : ${_};\n      var<workgroup> rowSumShared : ${_};\n      var<workgroup> threadShared : array<${_}, 64>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${e.registerUniform("packedCols","i32").declareVariables(f,g)}\n      ${e.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = 64;\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${w}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${_}(${((e,t)=>4===t?`max(max(${e}.x, ${e}.y), max(${e}.z, ${e}.w))`:2===t?`max(${e}.x, ${e}.y)`:3===t?`max(max(${e}.x, ${e}.y), ${e}.z)`:e)("threadShared[0]",h)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${_}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${_}(${Bt("threadShared[0]",h)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`},{inputs:[n],outputs:[l?-1:0]})[0];l&&e.compute(Yt(y,d),{inputs:[y]})},sl=(e,t)=>{nl(e.inputs),rl(e,t)},ol=e=>vt({axis:e.axis})})),Bd=V((()=>{Ll(),Vl(),jl(),Gl(),il=e=>{if(!e||e.length<1)throw new Error("too few inputs")},al=(e,t)=>{let n=[],r=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),r=n.length),vt({numOutputs:r,axis:t.axis,splitSizes:n})},ll=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${Dt("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,dl=e=>{let t=e.length,n=[];for(let r=0;r<t;++r){let s=e[r].setByIndices("indices","input[global_idx]");1===t?n.push(s):0===r?n.push(`if (output_number == ${r}u) { ${s} }`):r===t-1?n.push(`else { ${s} }`):n.push(`else if (output_number == ${r}) { ${s} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${n.join("\n")}\n      }`},ul=(e,t)=>{let n=e[0].dims,r=Tt.size(n),s=e[0].dataType,o=Tt.normalizeAxis(t.axis,n.length),i=new Array(t.numOutputs),a=Rt("input",s,n.length),l=new Array(t.numOutputs),d=[],u=[],c=0,p=[{type:12,data:r}];for(let r=0;r<t.numOutputs;r++){c+=t.splitSizes[r],l[r]=c;let a=n.slice();a[o]=t.splitSizes[r],u.push(a),i[r]=jt(`output${r}`,s,a.length),d.push({dims:u[r],dataType:e[0].dataType})}p.push({type:12,data:l},...It(n,...u));return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:e=>`\n  ${e.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(a,...i)}\n  ${ll(l.length)}\n  ${dl(i)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${a.offsetToIndices("global_idx")};\n    var index = ${a.indicesGet("indices",o)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${Dt("uniforms.size_in_split_axis","output_number - 1u",l.length)};\n      ${a.indicesSet("indices",o,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`,getRunData:()=>({outputs:d,dispatchGroup:{x:Math.ceil(r/64)},programUniforms:p})}},cl=(e,t)=>{il(e.inputs);let n=1===e.inputs.length?t:al(e.inputs,t);e.compute(ul(e.inputs,n),{inputs:[0]})},pl=e=>{let t=e.axis,n=e.splitSizes,r=e.numOutputs<0?n.length:e.numOutputs;if(r!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return vt({axis:t,numOutputs:r,splitSizes:n})}})),Dd=V((()=>{Ll(),Vl(),Gl(),hl=(e,t,n,r,s)=>{let o,i=jt("output_data",s,n.length,4),a=Rt("a_data",t[1].dataType,t[1].dims.length,4),l=Rt("b_data",t[2].dataType,t[2].dims.length,4),d=Rt("c_data",t[0].dataType,t[0].dims.length,4),u=(e,t,n)=>`select(${t}, ${e}, ${n})`;if(r){let e=(e,t,n="")=>{let r=`a_data[index_a${t}][component_a${t}]`,s=`b_data[index_b${t}][component_b${t}]`,o=`bool(c_data[index_c${t}] & (0xffu << (component_c${t} * 8)))`;return`\n            let output_indices${t} = ${i.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offset_a${t} = ${a.broadcastedIndicesToOffset(`output_indices${t}`,i)};\n            let offset_b${t} = ${l.broadcastedIndicesToOffset(`output_indices${t}`,i)};\n            let offset_c${t} = ${d.broadcastedIndicesToOffset(`output_indices${t}`,i)};\n            let index_a${t} = offset_a${t} / 4u;\n            let index_b${t} = offset_b${t} / 4u;\n            let index_c${t} = offset_c${t} / 4u;\n            let component_a${t} = offset_a${t} % 4u;\n            let component_b${t} = offset_b${t} % 4u;\n            let component_c${t} = offset_c${t} % 4u;\n            ${e}[${t}] = ${n}(${u(r,s,o)});\n          `};o=9===s?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("output_data[global_idx]",0)}\n            ${e("output_data[global_idx]",1)}\n            ${e("output_data[global_idx]",2)}\n            ${e("output_data[global_idx]",3)}\n          `}else o=i.setByOffset("global_idx",u(a.getByOffset("global_idx"),l.getByOffset("global_idx"),d.getByOffset("global_idx")));return`\n        ${e.registerUniform("vec_size","u32").declareVariables(d,a,l,i)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${o}\n      }`},ml=e=>{let t=e[1].dims,n=e[2].dims,r=e[0].dims,s=e[1].dataType,o=!(Tt.areEqual(t,n)&&Tt.areEqual(n,r)),i=t,a=Tt.size(t);if(o){let e=Mt.calcShape(Mt.calcShape(t,n,!1),r,!1);if(!e)throw new Error("Can't perform where op on the given tensors");i=e,a=Tt.size(i)}let l=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:t=>hl(t,e,i,o,s),getRunData:()=>({outputs:[{dims:i,dataType:s}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:12,data:l},...It(r,t,n,i)]})}},fl=e=>{e.compute(ml(e.inputs))}})),Nd=V((()=>{Hl(),Xl(),Ql(),Kl(),Jl(),Zl(),ed(),dd(),pd(),hd(),md(),fd(),gd(),_d(),wd(),yd(),bd(),vd(),Td(),kd(),$d(),ld(),Cd(),xd(),Pd(),Sd(),Ed(),Fd(),Wl(),Ad(),Id(),zd(),Ld(),Od(),Bd(),Md(),Ul(),Yl(),Dd(),gl=new Map([["Abs",[mr]],["Acos",[fr]],["Acosh",[gr]],["Add",[ds]],["ArgMax",[Kn,Yn]],["ArgMin",[Qn,Yn]],["Asin",[_r]],["Asinh",[wr]],["Atan",[yr]],["Atanh",[br]],["Attention",[sr]],["AveragePool",[aa,ia]],["BatchNormalization",[lr]],["BiasAdd",[cr]],["BiasSplitGelu",[os]],["Cast",[xr,vr]],["Ceil",[kr]],["Clip",[Tr]],["Concat",[Ms,Ts]],["Conv",[uo,oo]],["ConvTranspose",[To,yo]],["Cos",[$r]],["Cosh",[Cr]],["CumSum",[$o,Co]],["DepthToSpace",[Fo,Ao]],["DequantizeLinear",[wa,ya]],["Div",[us]],["Einsum",[jo,Vo]],["Elu",[Sr,Pr]],["Equal",[cs]],["Erf",[Fr]],["Exp",[Ar]],["Expand",[Ho]],["FastGelu",[Qo]],["Floor",[Ir]],["FusedConv",[uo,oo]],["Gather",[Zo,Jo]],["GatherElements",[ai,ii]],["GatherBlockQuantized",[ni,ri]],["Gelu",[zr]],["Gemm",[ci,ui]],["GlobalAveragePool",[ua,da]],["GlobalMaxPool",[fa,ma]],["Greater",[fs]],["GreaterOrEqual",[_s]],["GroupQueryAttention",[Si,$i]],["HardSigmoid",[Vr,jr]],["InstanceNormalization",[Ii]],["LayerNormalization",[Oi]],["LeakyRelu",[Lr,Pr]],["Less",[gs]],["LessOrEqual",[ws]],["Log",[Zr]],["MatMul",[eo]],["MatMulNBits",[Ri,ji]],["MaxPool",[pa,ha]],["Mul",[ps]],["MultiHeadAttention",[wi,mi]],["Neg",[Br]],["Not",[Or]],["Pad",[Ki]],["Pow",[hs]],["QuickGelu",[ns,Pr]],["Range",[xa]],["Reciprocal",[Dr]],["ReduceMin",[Gn]],["ReduceMean",[Dn]],["ReduceMax",[Vn]],["ReduceSum",[qn]],["ReduceProd",[Un]],["ReduceL1",[Nn]],["ReduceL2",[Rn]],["ReduceLogSum",[Hn]],["ReduceLogSumExp",[jn]],["ReduceSumSquare",[Wn]],["Relu",[Nr]],["Resize",[Ra,ja]],["RotaryEmbedding",[Ua]],["Sigmoid",[Rr]],["Sin",[Gr]],["Sinh",[Ur]],["Slice",[el,tl]],["SkipLayerNormalization",[Ha]],["Split",[cl,pl]],["Sqrt",[qr]],["Softmax",[sl,ol]],["Sub",[ms]],["Tan",[Wr]],["Tanh",[Xr]],["ThresholdedRelu",[Jr,Pr]],["Tile",[Mi]],["Transpose",[Jt,Zt]],["Where",[fl]]])})),Rd=V((()=>{pe(),Bl(),Gl(),_l=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,r,s){F(e.programInfo.name);let o=this.backend.device,i=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let a=[];for(let e of t)a.push({binding:a.length,resource:{buffer:e.buffer}});for(let e of n)a.push({binding:a.length,resource:{buffer:e.buffer}});s&&a.push({binding:a.length,resource:s});let l=o.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:a,label:e.programInfo.name});if("capturing"===this.backend.sessionStatus){let t={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:r};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(t)}i.setPipeline(e.computePipeline),i.setBindGroup(0,l),i.dispatchWorkgroups(...r),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||"at-passes"===this.backend.queryType)&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),A(e.programInfo.name)}dispose(){}build(e,t){F(e.name);let n=this.backend.device,r=[];n.features.has("shader-f16")&&r.push("enable f16;");let s=Ut(t,this.backend.device.limits),o=e.getShaderSource(s),i=`${r.join("\n")}\n${s.additionalImplementations}\n${o}`,a=n.createShaderModule({code:i,label:e.name});dt("verbose",(()=>`[WebGPU] ${e.name} shader code: ${i}`));let l=n.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:e.name});return A(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:s.variablesInfo}}normalizeDispatchGroupSize(e){let t="number"==typeof e?e:e.x,n="number"==typeof e?1:e.y||1,r="number"==typeof e?1:e.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=s&&n<=s&&r<=s)return[t,n,r];let o=t*n*r,i=Math.ceil(Math.sqrt(o));if(i>s){if(i=Math.ceil(Math.cbrt(o)),i>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[i,i,i]}return[i,i,1]}}})),jd=V((()=>{pe(),Ll(),Bl(),Dl(),Rl(),Nd(),Rd(),wl=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let n=[];for(let r=0;r<e.length;++r){let s=e[r].dataType;switch(t[r]){case"none":n.push("");break;case"type":n.push(`${s}`);break;case"rank":{let t=e[r].dims.length;n.push(`${s};${t}`);break}case"dims":{let t=e[r].dims.join(",");n.push(`${s};${t}`);break}default:throw new Error(`unsupported input dependency: ${t[r]}`)}}return n.join("|")},yl=(e,t,n)=>{let r=e.name;return e.shaderCache?.hint&&(r+="["+e.shaderCache.hint+"]"),r+=":"+n+`:${wl(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,r},bl=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},vl=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let n=[],r={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:n};t.features.has("chromium-experimental-timestamp-query-inside-passes")?n.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&n.push("timestamp-query"),t.features.has("shader-f16")&&n.push("shader-f16"),this.device=await t.requestDevice(r),this.adapterInfo=new bl(t.info||await t.requestAdapterInfo()),this.gpuDataManager=yt(this),this.programManager=new _l(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,at(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};"at-passes"===this.queryType&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;let e;F(),this.endComputePass(),"none"!==this.queryType&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),e=this.device.createBuffer({size:2*this.pendingDispatchNumber*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,2*this.pendingDispatchNumber*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,"none"!==this.queryType&&e.mapAsync(GPUMapMode.READ).then((()=>{let t=new BigUint64Array(e.getMappedRange()),n=this.pendingQueries.get(e);for(let e=0;e<t.length/2;e++){let r=n[e],s=r.kernelId,o=this.kernels.get(s),i=o.kernelType,a=o.kernelName,l=r.programName,d=r.inputTensorViews,u=r.outputTensorViews,c=t[2*e],p=t[2*e+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=c);let h=Number(c-this.queryTimeBase),m=Number(p-this.queryTimeBase);if(!Number.isSafeInteger(h)||!Number.isSafeInteger(m))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:d.map((e=>({dims:e.dims,dataType:Qe(e.dataType)}))),outputsMetadata:u.map((e=>({dims:e.dims,dataType:Qe(e.dataType)}))),kernelId:s,kernelType:i,kernelName:a,programName:l,startTime:h,endTime:m});else{let e="";d.forEach(((t,n)=>{e+=`input[${n}]: [${t.dims}] | ${Qe(t.dataType)}, `}));let t="";u.forEach(((e,n)=>{t+=`output[${n}]: [${e.dims}] | ${Qe(e.dataType)}, `})),console.log(`[profiling] kernel "${s}|${i}|${a}|${l}" ${e}${t}execution time: ${m-h} ns`)}S("GPU",`${l}::${c}::${p}`)}e.unmap(),this.pendingQueries.delete(e)})),A()}run(e,t,n,r,s,o){F(e.name);let i=[];for(let e=0;e<t.length;++e){let n=t[e].data;if(0===n)continue;let r=this.gpuDataManager.get(n);if(!r)throw new Error(`no GPU data for input: ${n}`);i.push(r)}let{outputs:a,dispatchGroup:l,programUniforms:d}=e.getRunData(t),u=0===n.length?a.map(((e,t)=>t)):n;if(u.length!==a.length)throw new Error(`Output size ${u.length} must be equal to ${a.length}.`);let c,p=[],h=[];for(let e=0;e<a.length;++e){if(!Number.isInteger(u[e])||u[e]<-3||u[e]>=o)throw new Error(`Invalid output index: ${u[e]}`);if(-3===u[e])continue;let t=-1===u[e],n=-2===u[e],i=t||n?s(a[e].dataType,a[e].dims):r(u[e],a[e].dataType,a[e].dims);if(p.push(i),0===i.data)continue;let l=this.gpuDataManager.get(i.data);if(!l)throw new Error(`no GPU data for output: ${i.data}`);if(t&&this.temporaryData.push(l),n){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(l)}h.push(l)}if(i.length!==t.length||h.length!==p.length){if(0===h.length)return A(e.name),p;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(d){let e=0,t=[];d.forEach((n=>{let r="number"==typeof n.data?[n.data]:n.data;if(0===r.length)return;let s,o,i=10===n.type?2:4;10===n.type?(o=r.length>4?16:r.length>2?8:r.length*i,s=r.length>4?16:i*r.length):(o=r.length<=2?r.length*i:16,s=16),e=Math.ceil(e/o)*o,t.push(e);let a=10===n.type?8:4;e+=r.length>4?Math.ceil(r.length/a)*s:r.length*i}));let n=16;e=Math.ceil(e/n)*n;let r=new ArrayBuffer(e);d.forEach(((e,n)=>{let s=t[n],o="number"==typeof e.data?[e.data]:e.data;if(6===e.type)new Int32Array(r,s,o.length).set(o);else if(12===e.type)new Uint32Array(r,s,o.length).set(o);else if(10===e.type)new Uint16Array(r,s,o.length).set(o);else{if(1!==e.type)throw new Error(`Unsupported uniform type: ${Qe(e.type)}`);new Float32Array(r,s,o.length).set(o)}}));let s=this.gpuDataManager.create(e,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(s.buffer,0,r,0,e),this.gpuDataManager.release(s.id),c={offset:0,size:e,buffer:s.buffer}}let m=this.programManager.normalizeDispatchGroupSize(l),f=1===m[1]&&1===m[2],g=yl(e,t,f),_=this.programManager.getArtifact(g);if(_||(_=this.programManager.build(e,m),this.programManager.setArtifact(g,_),dt("info",(()=>`[artifact] key: ${g}, programName: ${e.name}`))),d&&_.uniformVariablesInfo){if(d.length!==_.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${_.uniformVariablesInfo.length}, got ${d.length} in program "${_.programInfo.name}".`);for(let e=0;e<d.length;e++){let t=d[e],n=t.type,r="number"==typeof t.data?1:t.data.length,[s,o]=_.uniformVariablesInfo[e];if(n!==s||r!==o)throw new Error(`Uniform variable ${e} mismatch: expect type ${s} with size ${o}, got type ${n} with size ${r} in program "${_.programInfo.name}".`)}}if(dt("info",(()=>`[ProgramManager] run "${e.name}" (key=${g}) with ${m[0]}x${m[1]}x${m[2]}`)),"none"!==this.queryType||"capturing"===this.sessionStatus){let e={kernelId:this.currentKernelId,programName:_.programInfo.name,inputTensorViews:t,outputTensorViews:p};this.pendingKernels.push(e),"capturing"===this.sessionStatus&&this.capturedPendingKernels.get(this.currentSessionId).push(e)}return this.programManager.run(_,i,h,m,c),A(e.name),p}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n,r){let s=gl.get(e);if(!s)throw new Error(`kernel not implemented: ${e}`);let o={kernelType:e,kernelName:r,kernelEntry:s[0],attributes:[s[1],n]};this.kernels.set(t,o)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,n){let r=this.kernels.get(e);if(!r)throw new Error(`kernel not created: ${e}`);let s=r.kernelType,o=r.kernelName,i=r.kernelEntry,a=r.attributes;if(null!==this.currentKernelId)throw new Error(`kernel "[${s}] ${o}" is not allowed to be called recursively`);this.currentKernelId=e,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),dt("info",(()=>`[WebGPU] Start to run kernel "[${s}] ${o}"...`));let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),i(t,a[1]),0}catch(e){return n.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${o}" failed. ${e}`)),1}finally{l&&n.push(this.device.popErrorScope().then((e=>e?`GPU validation error for kernel "[${s}] ${o}": ${e.message}`:null)));for(let e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,n,r){let s=this.sessionExternalDataMapping.get(e);s||(s=new Map,this.sessionExternalDataMapping.set(e,s));let o=s.get(t),i=this.gpuDataManager.registerExternalBuffer(n,r,o);return s.set(t,[i,n]),i}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach((e=>this.gpuDataManager.unregisterExternalBuffer(e[0]))),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,n){return async()=>{let r=await _t(this,e,t);return ut(r.buffer,n)}}writeTimestamp(e){"inside-passes"===this.queryType&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",("default"===this.env.webgpu.profiling?.mode||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),"none"!==this.queryType&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:2*this.maxDispatchNumber*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){dt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){dt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){dt("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),n=e.length;this.pendingKernels=[];for(let r=0;r<n;r++){let n=this.getComputePassEncoder(),s=e[r];this.writeTimestamp(2*this.pendingDispatchNumber),n.setPipeline(s.computePipeline),n.setBindGroup(0,s.bindGroup),n.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,"none"!==this.queryType&&this.pendingKernels.push(t[r]),(this.pendingDispatchNumber>=this.maxDispatchNumber||"at-passes"===this.queryType)&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}})),Vd=V((()=>{Bl(),xl=1,Ml=()=>xl++,Tl=class{constructor(e,t){this.mlContext=e,this.tensorEntry=t,this.tensorCache=t?[t]:[]}get tensor(){return this.tensorEntry?.[0]}get context(){if(!this.mlContext)throw new Error("MLContext has not been set.");return this.mlContext}set context(e){if(this.mlContext&&this.mlContext!==e)throw new Error("MLTensor in use in a different MLContext.");this.mlContext=e}destroy(){for(let[e]of this.tensorCache)e.destroy();this.tensorCache=[],this.tensorEntry=void 0}trySelectTensor(e,t){for(let[n,r,s]of this.tensorCache)if(t===n){if(this.context!==e)throw new Error("MLTensor cannot be registered with a different MLContext.");return this.tensorEntry=[n,r,s],!0}return!1}async ensureTensor(e,t,n){if(this.tensorEntry){let[n,r,s]=this.tensorEntry;if(r===e&&s.every(((e,n)=>e===t[n])))return n}for(let[r,s,o]of this.tensorCache)if(s===e&&o.every(((e,n)=>e===t[n]))){if(n&&this.tensorEntry){dt("verbose",(()=>`[WebNN] Slowdown may occur, having to copy existing tensor {dataType: ${e}, shape: ${t}}`));let n=await this.context.readTensor(this.tensorEntry[0]);this.context.writeTensor(r,n)}return this.tensorEntry=[r,s,o],r}dt("verbose",(()=>`[WebNN] MLContext.createTensor {dataType: ${e}, shape: ${t}}`));let r=MLTensorUsage.READ|MLTensorUsage.WRITE,s=await this.context.createTensor({dataType:e,shape:t,dimensions:t,usage:r});return this.tensorEntry=[s,e,t],this.tensorCache.push(this.tensorEntry),this.activeUpload&&(this.mlContext?.writeTensor(s,this.activeUpload),this.activeUpload=void 0),s}upload(e){this.tensorEntry?this.mlContext?.writeTensor(this.tensorEntry[0],e):this.activeUpload=new Uint8Array(e)}async download(e){if(this.activeUpload)return e?void(e instanceof ArrayBuffer?new Uint8Array(e).set(this.activeUpload):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(this.activeUpload)):this.activeUpload.buffer;if(!this.tensorEntry)throw new Error("Tensor has not been created.");return e?this.context.readTensor(this.tensorEntry[0],e):this.context.readTensor(this.tensorEntry[0])}},kl=class{constructor(e){this.backend=e,this.tensorsById=new Map,this.tensorIdsByContext=new Map}reserveTensorId(){let e=Ml();return this.tensorsById.set(e,new Tl),e}releaseTensorId(e){let t=this.tensorsById.get(e);if(t){t.destroy(),this.tensorsById.delete(e);for(let[t,n]of this.tensorIdsByContext)if(n.has(e)){n.delete(e),0===n.size&&this.tensorIdsByContext.delete(t);break}}}async ensureTensor(e,t,n,r){dt("verbose",(()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${e}, dataType: ${t}, shape: ${n}, copyOld: ${r}}`));let s=this.tensorsById.get(e);if(!s)throw new Error("Tensor not found.");return s.context=this.backend.currentContext,this.tensorIdsByContext.has(this.backend.currentContext)||this.tensorIdsByContext.set(this.backend.currentContext,new Set),this.tensorIdsByContext.get(this.backend.currentContext)?.add(e),s.ensureTensor(t,n,r)}upload(e,t){this.tensorsById.get(e).upload(t)}async download(e,t){return dt("verbose",(()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t?.byteLength}}`)),this.tensorsById.get(e).download(t)}releaseTensorsForContext(e){let t=this.tensorIdsByContext.get(e);if(t){for(let e of t)this.tensorsById.get(e).destroy(),this.tensorsById.delete(e);this.tensorIdsByContext.delete(e)}}registerTensor(e,t,n,r){for(let[n,r]of this.tensorsById)if(r.trySelectTensor(e,t))return n;let s=Ml();this.tensorsById.set(s,new Tl(e,[t,n,r]));let o=this.tensorIdsByContext.get(e);return o||(o=new Set,this.tensorIdsByContext.set(e,o)),o.add(s),s}},$l=(...e)=>new kl(...e)})),Gd=V((()=>{Ll(),Fl(),Dl(),Vd(),Bl(),Cl=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),Pl=class{constructor(e){this.tensorManager=$l(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,at(e.logLevel,!!e.debug)}get currentSessionId(){if(void 0===this.activeSessionId)throw new Error("No active session");return this.activeSessionId}onRunStart(e){this.activeSessionId=e}get currentContext(){let e=this.getMLContext(this.currentSessionId);if(!e)throw new Error(`No MLContext found for session ${this.currentSessionId}`);return e}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let n=this.sessionIdsByMLContext.get(t);n||(n=new Set,this.sessionIdsByMLContext.set(t,n)),n.add(e)}onReleaseSession(e){let t=this.mlContextBySessionId.get(e);if(!t)return;this.mlContextBySessionId.delete(e);let n=this.sessionIdsByMLContext.get(t);n.delete(e),0===n.size&&(this.sessionIdsByMLContext.delete(t),this.tensorManager.releaseTensorsForContext(t))}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){dt("verbose",(()=>`[WebNN] releaseTensorId {tensorId: ${e}}`)),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,n,r){let s=Cl.get(t);if(!s)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e,s,n,r)}uploadTensor(e,t){if(!De().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");dt("verbose",(()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`)),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let n=await this.tensorManager.download(e);return ut(n,t)}}registerMLTensor(e,t,n){let r=Cl.get(t);if(!r)throw new Error(`Unsupported ONNX data type: ${t}`);let s=this.tensorManager.registerTensor(this.currentContext,e,r,n);return dt("verbose",(()=>`[WebNN] registerMLTensor {tensor: ${e}, dataType: ${r}, dimensions: ${n}} -> {tensorId: ${s}}`)),s}flush(){}}})),Ud={};G(Ud,{init:()=>Hd});var qd,Wd,Hd,Xd,Qd,Kd,Yd,Jd,Zd,eu,tu,nu,ru,su,ou,iu,au,lu,du,uu,cu,pu,hu,mu,fu,gu,_u,wu,yu,bu,vu,xu,Mu,Tu,ku,$u,Cu=V((()=>{Ll(),jd(),Bl(),Vl(),Gd(),qd=class e{constructor(e,t,n,r){this.module=e,this.dataType=t,this.data=n,this.dims=r}getFloat32Array(){if(1!==this.dataType)throw new Error("Invalid data type");let e=Tt.size(this.dims);return 0===e?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(7!==this.dataType)throw new Error("Invalid data type");let e=Tt.size(this.dims);return 0===e?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(6!==this.dataType)throw new Error("Invalid data type");let e=Tt.size(this.dims);return 0===e?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}getUint16Array(){if(10!==this.dataType&&4!==this.dataType)throw new Error("Invalid data type");let e=Tt.size(this.dims);return 0===e?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,e)}reshape(t){if(Tt.size(t)!==Tt.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Wd=class{constructor(e,t,n){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let r=e.HEAPU32,s=n>>>2;this.opKernelContext=r[s++];let o=r[s++];this.outputCount=r[s++],this.customDataOffset=r[s++],this.customDataSize=r[s++];let i=[];for(let t=0;t<o;t++){let t=r[s++],n=r[s++],o=r[s++],a=[];for(let e=0;e<o;e++)a.push(r[s++]);i.push(new qd(e,t,n,a))}this.inputs=i}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(e,t){let n=t?.inputs?.map((e=>"number"==typeof e?this.inputs[e]:e))??this.inputs,r=t?.outputs??[];return this.backend.run(e,n,r,((e,t,n)=>new qd(this.module,t,this.output(e,n),n)),((e,t)=>{let n=Ke(e,t);if(!n)throw new Error(`Unsupported data type: ${e}`);let r=n>0?this.backend.gpuDataManager.create(n).id:0;return new qd(this.module,e,r,t)}),this.outputCount)}output(e,t){let n=this.module.stackSave();try{let n=this.module.stackAlloc(4*(1+t.length)),r=n>>2;this.module.HEAPU32[r++]=t.length;for(let e=0;e<t.length;e++)this.module.HEAPU32[r++]=t[e];return this.module._JsepOutput(this.opKernelContext,e,n)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(n)}}},Hd=async(e,t,n,r)=>{let s=t.jsepInit;if(!s)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if("webgpu"===e){let e=new vl;await e.initialize(n,r),s("webgpu",[e,t=>e.alloc(t),t=>e.free(t),(n,r,s,o=!1)=>{if(o)dt("verbose",(()=>`[WebGPU] jsepCopyGpuToGpu: src=${n}, dst=${r}, size=${s}`)),e.memcpy(n,r);else{dt("verbose",(()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${n}, gpuDataId=${r}, size=${s}`));let o=t.HEAPU8.subarray(n>>>0,(n>>>0)+s);e.upload(r,o)}},async(n,r,s)=>{dt("verbose",(()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${n}, dataOffset=${r}, size=${s}`)),await e.download(n,(()=>t.HEAPU8.subarray(r>>>0,(r>>>0)+s)))},(n,r,s)=>e.createKernel(n,r,s,t.UTF8ToString(t._JsepGetNodeName(r))),t=>e.releaseKernel(t),(n,r,s,o)=>{dt("verbose",(()=>`[WebGPU] jsepRun: sessionHandle=${s}, kernel=${n}, contextDataOffset=${r}`));let i=new Wd(t,e,r);return e.computeKernel(n,i,o)},()=>e.captureBegin(),()=>e.captureEnd(),()=>e.replay()])}else{let e=new Pl(n);s("webnn",[e,()=>e.reserveTensorId(),t=>e.releaseTensorId(t),async(t,n,r,s)=>e.ensureTensor(t,n,r,s),(t,n)=>{e.uploadTensor(t,n)},async(t,n)=>e.downloadTensor(t,n)])}}})),Pu=V((()=>{Il(),zl(),Ll(),Fl(),Al(),Ol(),Xd=(e,t)=>{0!==De()._OrtInit(e,t)&&je("Can't initialize onnxruntime.")},Qd=async e=>{Xd(e.wasm.numThreads,Je(e.logLevel))},Kd=async(e,t)=>{{let n=(Cu(),U(Ud)).init;if("webgpu"===t){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let t=e.webgpu.adapter;if(t){if("object"!=typeof t.limits||"object"!=typeof t.features||"function"!=typeof t.requestDevice)throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let n=e.webgpu.powerPreference;if(void 0!==n&&"low-power"!==n&&"high-performance"!==n)throw new Error(`Invalid powerPreference setting: "${n}"`);let r=e.webgpu.forceFallbackAdapter;if(void 0!==r&&"boolean"!=typeof r)throw new Error(`Invalid forceFallbackAdapter setting: "${r}"`);if(t=await navigator.gpu.requestAdapter({powerPreference:n,forceFallbackAdapter:r}),!t)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await n("webgpu",De(),e,t)}if("webnn"===t){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await n("webnn",De(),e)}}},Yd=new Map,Jd=e=>{let t=De(),n=t.stackSave();try{let n=t.stackAlloc(8);return 0!==t._OrtGetInputOutputCount(e,n,n+4)&&je("Can't get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(n)}},Zd=e=>{let t=De(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},eu=async(e,t)=>{let n,r,s=De();Array.isArray(e)?[n,r]=e:e.buffer===s.HEAPU8.buffer?[n,r]=[e.byteOffset,e.byteLength]:[n,r]=Zd(e);let o=0,i=0,a=0,l=[],d=[],u=[];try{if([i,l]=He(t),t?.externalData&&s.mountExternalData){let e=[];for(let n of t.externalData){let t="string"==typeof n?n:n.path;e.push(nt("string"==typeof n?n:n.data).then((e=>{s.mountExternalData(t,e)})))}await Promise.all(e)}for(let e of t?.executionProviders??[])if("webnn"===("string"==typeof e?e:e.name)){if(s.shouldTransferToMLTensor=!1,s.currentContext)throw new Error("WebNN execution provider is already set.");if("string"!=typeof e){let t=e,n=t?.context,r=t?.gpuDevice,o=t?.deviceType,i=t?.numThreads,a=t?.powerPreference;s.currentContext=n||(r?await navigator.ml.createContext(r):await navigator.ml.createContext({deviceType:o,numThreads:i,powerPreference:a}))}else s.currentContext=await navigator.ml.createContext();break}o=await s._OrtCreateSession(n,r,i),0===o&&je("Can't create a session."),s.currentContext&&(s.jsepRegisterMLContext(o,s.currentContext),s.currentContext=void 0,s.shouldTransferToMLTensor=!0);let[e,c]=Jd(o),p=!!t?.enableGraphCapture,h=[],m=[],f=[];for(let t=0;t<e;t++){let e=s._OrtGetInputName(o,t);0===e&&je("Can't get an input name."),d.push(e),h.push(s.UTF8ToString(e))}for(let e=0;e<c;e++){let n=s._OrtGetOutputName(o,e);0===n&&je("Can't get an output name."),u.push(n);let r=s.UTF8ToString(n);m.push(r);{if(p&&void 0===t?.preferredOutputLocation){f.push("gpu-buffer");continue}let e="string"==typeof t?.preferredOutputLocation?t.preferredOutputLocation:t?.preferredOutputLocation?.[r]??"cpu";if("cpu"!==e&&"cpu-pinned"!==e&&"gpu-buffer"!==e&&"ml-tensor"!==e)throw new Error(`Not supported preferred output location: ${e}.`);if(p&&"gpu-buffer"!==e)throw new Error(`Not supported preferred output location: ${e}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);f.push(e)}}let g=null;return f.some((e=>"gpu-buffer"===e||"ml-tensor"===e))&&(a=s._OrtCreateBinding(o),0===a&&je("Can't create IO binding."),g={handle:a,outputPreferredLocations:f,outputPreferredLocationsEncoded:f.map((e=>tt(e)))}),Yd.set(o,[o,d,u,g,p,!1]),[o,h,m]}catch(e){throw d.forEach((e=>s._OrtFree(e))),u.forEach((e=>s._OrtFree(e))),0!==a&&s._OrtReleaseBinding(a),0!==o&&s._OrtReleaseSession(o),e}finally{s._free(n),0!==i&&s._OrtReleaseSessionOptions(i),l.forEach((e=>s._free(e))),s.unmountExternalData?.()}},tu=e=>{let t=De(),n=Yd.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);let[r,s,o,i,a]=n;i&&(a&&t._OrtClearBoundOutputs(i.handle),t._OrtReleaseBinding(i.handle)),t.jsepOnReleaseSession?.(e),s.forEach((e=>t._OrtFree(e))),o.forEach((e=>t._OrtFree(e))),t._OrtReleaseSession(r),Yd.delete(e)},nu=(e,t,n,r,s,o=!1)=>{if(!e)return void t.push(0);let i,a,l=De(),d=e[0],u=e[1],c=e[3];if("string"===d&&("gpu-buffer"===c||"ml-tensor"===c))throw new Error("String tensor is not supported on GPU.");if(o&&"gpu-buffer"!==c)throw new Error(`External buffer must be provided for input/output index ${s} when enableGraphCapture is true.`);if("gpu-buffer"===c){let t=e[2].gpuBuffer;a=Ke(Xe(d),u);let n=l.jsepRegisterBuffer;if(!n)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');i=n(r,s,t,a)}else if("ml-tensor"===c){let t=e[2].mlTensor;a=Ke(Xe(d),u);let n=l.jsepRegisterMLTensor;if(!n)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');i=n(t,Xe(d),u)}else{let t=e[2];if(Array.isArray(t)){a=4*t.length,i=l._malloc(a),n.push(i);let e=i/4;for(let r=0;r<t.length;r++){if("string"!=typeof t[r])throw new TypeError(`tensor data at index ${r} is not a string`);l.HEAPU32[e++]=Ne(t[r],n)}}else a=t.byteLength,i=l._malloc(a),n.push(i),l.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,a),i)}let p=l.stackSave(),h=l.stackAlloc(4*u.length);try{let e=h/4;u.forEach((t=>l.HEAP32[e++]=t));let n=l._OrtCreateTensor(Xe(d),i,a,h,u.length,tt(c));0===n&&je(`Can't create tensor for input/output. session=${r}, index=${s}.`),t.push(n)}finally{l.stackRestore(p)}},ru=async(e,t,n,r,s,o)=>{let i=De(),a=Yd.get(e);if(!a)throw new Error(`cannot run inference. invalid session id: ${e}`);let l=a[0],d=a[1],u=a[2],c=a[3],p=a[4],h=a[5],m=t.length,f=r.length,g=0,_=[],w=[],y=[],b=[],v=i.stackSave(),x=i.stackAlloc(4*m),M=i.stackAlloc(4*m),T=i.stackAlloc(4*f),k=i.stackAlloc(4*f);try{i.jsepOnRunStart?.(l),[g,_]=Ve(o);for(let r=0;r<m;r++)nu(n[r],w,b,e,t[r],p);for(let t=0;t<f;t++)nu(s[t],y,b,e,m+r[t],p);let a,v=x/4,$=M/4,C=T/4,P=k/4;for(let e=0;e<m;e++)i.HEAPU32[v++]=w[e],i.HEAPU32[$++]=d[t[e]];for(let e=0;e<f;e++)i.HEAPU32[C++]=y[e],i.HEAPU32[P++]=u[r[e]];if(c&&!h){let{handle:n,outputPreferredLocations:o,outputPreferredLocationsEncoded:a}=c;if(d.length!==m)throw new Error(`input count from feeds (${m}) is expected to be always equal to model's input count (${d.length}).`);for(let r=0;r<m;r++){let s=t[r];0!==await i._OrtBindInput(n,d[s],w[r])&&je(`Can't bind input[${r}] for session=${e}.`)}for(let t=0;t<f;t++){let l=r[t];s[t]?.[3]?0!==i._OrtBindOutput(n,u[l],y[t],0)&&je(`Can't bind pre-allocated output[${t}] for session=${e}.`):0!==i._OrtBindOutput(n,u[l],0,a[l])&&je(`Can't bind output[${t}] to ${o[t]} for session=${e}.`)}Yd.set(e,[l,d,u,c,p,!0])}a=c?await i._OrtRunWithBinding(l,c.handle,f,T,g):await i._OrtRun(l,M,x,m,k,f,T,g),0!==a&&je("failed to call OrtRun().");let S=[];for(let e=0;e<f;e++){let t=i.HEAPU32[T/4+e];if(t===y[e]){S.push(s[e]);continue}let n,o=i.stackSave(),a=i.stackAlloc(16),l=!1,d=0;try{0!==i._OrtGetTensorData(t,a,a+4,a+8,a+12)&&je(`Can't access output tensor data on index ${e}.`);let s=a/4,o=i.HEAPU32[s++];d=i.HEAPU32[s++];let u=i.HEAPU32[s++],p=i.HEAPU32[s++],h=[];for(let e=0;e<p;e++)h.push(i.HEAPU32[u/4+e]);i._OrtFree(u);let m=h.reduce(((e,t)=>e*t),1);n=Qe(o);let f=c?.outputPreferredLocations[r[e]];if("string"===n){if("gpu-buffer"===f||"ml-tensor"===f)throw new Error("String tensor is not supported on GPU.");let e=[],t=d/4;for(let n=0;n<m;n++){let r=i.HEAPU32[t++],s=n===m-1?void 0:i.HEAPU32[t]-r;e.push(i.UTF8ToString(r,s))}S.push([n,h,e,"cpu"])}else if("gpu-buffer"===f&&m>0){let e=i.jsepGetBuffer;if(!e)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let r=e(d),s=Ke(o,m);if(void 0===s||!Ze(n))throw new Error(`Unsupported data type: ${n}`);l=!0,S.push([n,h,{gpuBuffer:r,download:i.jsepCreateDownloader(r,s,n),dispose:()=>{i._OrtReleaseTensor(t)}},"gpu-buffer"])}else if("ml-tensor"===f&&m>0){let e=i.jsepEnsureTensor;if(!e)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(void 0===Ke(o,m)||!et(n))throw new Error(`Unsupported data type: ${n}`);let r=await e(d,o,h,!1);l=!0,S.push([n,h,{mlTensor:r,download:i.jsepCreateMLTensorDownloader(d,n),dispose:()=>{i.jsepReleaseTensorId(d),i._OrtReleaseTensor(t)}},"ml-tensor"])}else{let e=new(Ye(n))(m);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(i.HEAPU8.subarray(d,d+e.byteLength)),S.push([n,h,e,"cpu"])}}finally{i.stackRestore(o),"string"===n&&d&&i._free(d),l||i._OrtReleaseTensor(t)}}return c&&!p&&(i._OrtClearBoundOutputs(c.handle),Yd.set(e,[l,d,u,c,p,!1])),S}finally{i.stackRestore(v),w.forEach((e=>i._OrtReleaseTensor(e))),y.forEach((e=>i._OrtReleaseTensor(e))),b.forEach((e=>i._free(e))),0!==g&&i._OrtReleaseRunOptions(g),_.forEach((e=>i._free(e)))}},su=e=>{let t=De(),n=Yd.get(e);if(!n)throw new Error("invalid session id");let r=n[0],s=t._OrtEndProfiling(r);0===s&&je("Can't get an profile file name."),t._OrtFree(s)},ou=e=>{let t=[];for(let n of e){let e=n[2];!Array.isArray(e)&&"buffer"in e&&t.push(e.buffer)}return t}})),Su=V((()=>{pe(),Pu(),Fl(),El(),iu=()=>!!p.wasm.proxy&&typeof document<"u",lu=!1,du=!1,uu=!1,hu=new Map,mu=(e,t)=>{let n=hu.get(e);n?n.push(t):hu.set(e,[t])},fu=()=>{if(lu||!du||uu||!au)throw new Error("worker not ready")},gu=e=>{switch(e.data.type){case"init-wasm":lu=!1,e.data.err?(uu=!0,pu[1](e.data.err)):(du=!0,pu[0]()),cu&&(URL.revokeObjectURL(cu),cu=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=hu.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},_u=async()=>{if(!du){if(lu)throw new Error("multiple calls to 'initWasm()' detected.");if(uu)throw new Error("previous call to 'initWasm()' failed.");if(lu=!0,iu())return new Promise(((e,t)=>{au?.terminate(),Pe().then((([n,r])=>{try{(au=r).onerror=e=>t(e),au.onmessage=gu,pu=[e,t];let s={type:"init-wasm",in:p};au.postMessage(s),cu=n}catch(e){t(e)}}),t)}));try{await Be(p.wasm),await Qd(p),du=!0}catch(e){throw uu=!0,e}finally{lu=!1}}},wu=async e=>{if(iu())return fu(),new Promise(((t,n)=>{mu("init-ep",[t,n]);let r={type:"init-ep",in:{epName:e,env:p}};au.postMessage(r)}));await Kd(p,e)},yu=async e=>iu()?(fu(),new Promise(((t,n)=>{mu("copy-from",[t,n]);let r={type:"copy-from",in:{buffer:e}};au.postMessage(r,[e.buffer])}))):Zd(e),bu=async(e,t)=>{if(iu()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return fu(),new Promise(((n,r)=>{mu("create",[n,r]);let s={type:"create",in:{model:e,options:{...t}}},o=[];e instanceof Uint8Array&&o.push(e.buffer),au.postMessage(s,o)}))}return eu(e,t)},vu=async e=>{if(iu())return fu(),new Promise(((t,n)=>{mu("release",[t,n]);let r={type:"release",in:e};au.postMessage(r)}));tu(e)},xu=async(e,t,n,r,s,o)=>{if(iu()){if(n.some((e=>"cpu"!==e[3])))throw new Error("input tensor on GPU is not supported for proxy.");if(s.some((e=>e)))throw new Error("pre-allocated output tensor is not supported for proxy.");return fu(),new Promise(((s,i)=>{mu("run",[s,i]);let a=n,l={type:"run",in:{sessionId:e,inputIndices:t,inputs:a,outputIndices:r,options:o}};au.postMessage(l,ou(a))}))}return ru(e,t,n,r,s,o)},Mu=async e=>{if(iu())return fu(),new Promise(((t,n)=>{mu("end-profiling",[t,n]);let r={type:"end-profiling",in:e};au.postMessage(r)}));su(e)}})),Eu=V((()=>{pe(),Su(),Ll(),he(),Ol(),Tu=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},ku=e=>{switch(e[3]){case"cpu":return new P(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!Ze(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:n,download:r,dispose:s}=e[2];return P.fromGpuBuffer(n,{dataType:t,dims:e[1],download:r,dispose:s})}case"ml-tensor":{let t=e[0];if(!et(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:n,download:r,dispose:s}=e[2];return P.fromMLTensor(n,{dataType:t,dims:e[1],download:r,dispose:s})}default:throw new Error(`invalid data location: ${e[3]}`)}},$u=class{async fetchModelAndCopyToWasmMemory(e){return yu(await nt(e))}async loadModel(e,t){let n;F(),n="string"==typeof e?await this.fetchModelAndCopyToWasmMemory(e):e,[this.sessionId,this.inputNames,this.outputNames]=await bu(n,t),A()}async dispose(){return vu(this.sessionId)}async run(e,t,n){F();let r=[],s=[];Object.entries(e).forEach((e=>{let t=e[0],n=e[1],o=this.inputNames.indexOf(t);if(-1===o)throw new Error(`invalid input '${t}'`);r.push(n),s.push(o)}));let o=[],i=[];Object.entries(t).forEach((e=>{let t=e[0],n=e[1],r=this.outputNames.indexOf(t);if(-1===r)throw new Error(`invalid output '${t}'`);o.push(n),i.push(r)}));let a=r.map(((e,t)=>Tu(e,(()=>`input "${this.inputNames[s[t]]}"`)))),l=o.map(((e,t)=>e?Tu(e,(()=>`output "${this.outputNames[i[t]]}"`)):null)),d=await xu(this.sessionId,s,a,i,l,n),u={};for(let e=0;e<d.length;e++)u[this.outputNames[i[e]]]=o[e]??ku(d[e]);return A(),u}startProfiling(){}endProfiling(){Mu(this.sessionId)}}})),Fu={};G(Fu,{OnnxruntimeWebAssemblyBackend:()=>Iu,initializeFlags:()=>Au,wasmBackend:()=>zu});var Au,Iu,zu,Lu=V((()=>{pe(),Su(),Eu(),El(),Au=()=>{if(("number"!=typeof p.wasm.initTimeout||p.wasm.initTimeout<0)&&(p.wasm.initTimeout=0),!1===p.wasm.simd&&console.warn('Deprecated property "env.wasm.simd" is set to false. non-SIMD build is no longer provided, and this setting will be ignored.'),"boolean"!=typeof p.wasm.proxy&&(p.wasm.proxy=!1),"boolean"!=typeof p.wasm.trace&&(p.wasm.trace=!1),"number"!=typeof p.wasm.numThreads||!Number.isInteger(p.wasm.numThreads)||p.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)p.wasm.numThreads=1;else{let e=typeof navigator>"u"?j("node:os").cpus().length:navigator.hardwareConcurrency;p.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},zu=new(Iu=class{async init(e){Au(),await _u(),await wu(e)}async createInferenceSessionHandler(e,t){let n=new $u;return await n.loadModel(e,t),Promise.resolve(n)}})}));pe(),pe(),pe();var Ou=ce;{let e=(Lu(),U(Fu)).wasmBackend;i("webgpu",e,5),i("webnn",e,5),i("cpu",e,10),i("wasm",e,10)}Object.defineProperty(p.versions,"web",{value:"1.20.1",enumerable:!0})}
  /**
   * @license
   * Copyright 2021 Google LLC. All Rights Reserved.
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   * http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   * =============================================================================
   */
  /**
   * @license
   * Copyright 2020 Google LLC. All Rights Reserved.
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   * http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   * =============================================================================
   */
  /**
   * @license
   * Copyright 2019 Google LLC. All Rights Reserved.
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   * http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   * =============================================================================
   */,"./src/backends/onnx.js":
  /*!******************************!*\
    !*** ./src/backends/onnx.js ***!
    \******************************/(e,t,n)=>{var r;n.r(t),n.d(t,{Tensor:()=>a.Tensor,createInferenceSession:()=>g,deviceToExecutionProviders:()=>m,isONNXProxy:()=>y,isONNXTensor:()=>_});var s=n(/*! ../env.js */"./src/env.js"),o=n(/*! onnxruntime-node */"?2ce3"),i=n(/*! #onnxruntime-webgpu */"./node_modules/onnxruntime-web/dist/ort.webgpu.bundle.min.mjs"),a=n(/*! onnxruntime-common */"./node_modules/onnxruntime-common/dist/esm/index.js");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),d=[];let u,c;const p=Symbol.for("onnxruntime");if(p in globalThis)c=globalThis[p];else if(s.apis.IS_NODE_ENV){switch(c=o??(r||(r=n.t(o,2))),process.platform){case"win32":d.push("dml");break;case"linux":"x64"===process.arch&&d.push("cuda")}d.push("cpu"),u=["cpu"]}else c=i,s.apis.IS_WEBNN_AVAILABLE&&d.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),s.apis.IS_WEBGPU_AVAILABLE&&d.push("webgpu"),d.push("wasm"),u=["wasm"];const h=c.InferenceSession;function m(e=null){if(!e)return u;switch(e){case"auto":return d;case"gpu":return d.filter((e=>["webgpu","cuda","dml","webnn-gpu"].includes(e)))}if(d.includes(e))return[l[e]??e];throw new Error(`Unsupported device: "${e}". Should be one of: ${d.join(", ")}.`)}let f=null;async function g(e,t,n){f&&await f;const r=h.create(e,t);f??=r;const s=await r;return s.config=n,s}function _(e){return e instanceof c.Tensor}const w=c?.env;function y(){return w?.wasm?.proxy}w?.wasm&&(w.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${s.env.version}/dist/`,w.wasm.proxy=!1,"undefined"!=typeof crossOriginIsolated&&crossOriginIsolated||(w.wasm.numThreads=1)),w?.webgpu&&(w.webgpu.powerPreference="high-performance"),s.env.backends.onnx=w},"./src/base/feature_extraction_utils.js":
  /*!**********************************************!*\
    !*** ./src/base/feature_extraction_utils.js ***!
    \**********************************************/(e,t,n)=>{n.r(t),n.d(t,{FeatureExtractor:()=>i,validate_audio_inputs:()=>a});var r=n(/*! ../utils/constants.js */"./src/utils/constants.js"),s=n(/*! ../utils/generic.js */"./src/utils/generic.js"),o=n(/*! ../utils/hub.js */"./src/utils/hub.js");class i extends s.Callable{constructor(e){super(),this.config=e}static async from_pretrained(e,t){return new this(await(0,o.getModelJSON)(e,r.FEATURE_EXTRACTOR_NAME,!0,t))}}function a(e,t){if(!(e instanceof Float32Array||e instanceof Float64Array))throw new Error(`${t} expects input to be a Float32Array or a Float64Array, but got ${e?.constructor?.name??typeof e} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":
  /*!********************************************!*\
    !*** ./src/base/image_processors_utils.js ***!
    \********************************************/(e,t,n)=>{n.r(t),n.d(t,{ImageProcessor:()=>y,post_process_instance_segmentation:()=>w,post_process_object_detection:()=>p,post_process_panoptic_segmentation:()=>_,post_process_semantic_segmentation:()=>h});var r=n(/*! ../utils/generic.js */"./src/utils/generic.js"),s=n(/*! ../utils/tensor.js */"./src/utils/tensor.js"),o=n(/*! ../utils/maths.js */"./src/utils/maths.js"),i=(n(/*! ../utils/image.js */"./src/utils/image.js"),n(/*! ../utils/core.js */"./src/utils/core.js")),a=n(/*! ../utils/hub.js */"./src/utils/hub.js"),l=n(/*! ../utils/constants.js */"./src/utils/constants.js");function d(e,t,n=0,r=null){const s=e/t;let i=(0,o.bankers_round)(s)*t;return null!==r&&i>r&&(i=Math.floor(s)*t),i<n&&(i=Math.ceil(s)*t),i}function u([e,t],n){return[Math.max(Math.floor(e/n),1)*n,Math.max(Math.floor(t/n),1)*n]}function c([e,t,n,r]){return[e-n/2,t-r/2,e+n/2,t+r/2]}function p(e,t=.5,n=null,r=!1){const s=e.logits,i=e.pred_boxes,[a,l,d]=s.dims;if(null!==n&&n.length!==a)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let u=[];for(let e=0;e<a;++e){let a=null!==n?n[e]:null,p={boxes:[],classes:[],scores:[]},h=s[e],m=i[e];for(let e=0;e<l;++e){let n,s=h[e],i=[];if(r){n=s.sigmoid().data;for(let e=0;e<n.length;++e)n[e]>t&&i.push(e)}else{let e=(0,o.max)(s.data)[1];if(e===d-1)continue;if(n=(0,o.softmax)(s.data),n[e]<t)continue;i.push(e)}for(const t of i){let r=m[e].data;r=c(r),null!==a&&(r=r.map(((e,t)=>e*a[(t+1)%2]))),p.boxes.push(r),p.classes.push(t),p.scores.push(n[t])}}u.push(p)}return u}function h(e,t=null){const n=e.logits,r=n.dims[0];if(null!==t&&t.length!==r)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const o=[];for(let e=0;e<r;++e){const r=null!==t?t[e]:null;let i=n[e];null!==r&&(i=(0,s.interpolate)(i,r,"bilinear",!1));const[a,l]=r??i.dims.slice(-2),d=new s.Tensor("int32",new Int32Array(a*l),[a,l]),u=i[0].data,c=d.data;for(let e=1;e<i.dims[0];++e){const t=i[e].data;for(let n=0;n<t.length;++n)t[n]>u[n]&&(u[n]=t[n],c[n]=e)}const p=new Array(i.dims[0]);for(let e=0;e<c.length;++e){const t=c[e];p[t]=t}const h=p.filter((e=>void 0!==e));o.push({segmentation:d,labels:h})}return o}function m(e,t,n,r){const s=[],i=[],a=[];for(let l=0;l<e.dims[0];++l){const d=e[l],u=t[l],c=(0,o.max)(d.data)[1];if(c===r)continue;const p=(0,o.softmax)(d.data)[c];p>n&&(s.push(u),i.push(p),a.push(c))}return[s,i,a]}function f(e,t,n,r=.5,s=.8){const o=[];let i=0,a=0;const l=t[n].data;for(let t=0;t<e.length;++t)e[t]===n&&(o.push(t),++i),l[t]>=r&&++a;let d=i>0&&a>0;if(d){d=i/a>s}return[d,o]}function g(e,t,n,r,o,i=null,a=null){const[l,d]=a??e[0].dims,u=new s.Tensor("int32",new Int32Array(l*d),[l,d]),c=[];if(null!==a)for(let t=0;t<e.length;++t)e[t]=(0,s.interpolate)(e[t],a,"bilinear",!1);const p=new Int32Array(e[0].data.length),h=new Float32Array(e[0].data.length);for(let n=0;n<e.length;++n){let r=t[n];const s=e[n].data;for(let e=0;e<s.length;++e)s[e]*=r,s[e]>h[e]&&(p[e]=n,h[e]=s[e])}let m=0;const g=u.data;for(let s=0;s<n.length;++s){const i=n[s],[a,l]=f(p,e,s,r,o);if(a){++m;for(const e of l)g[e]=m;c.push({id:m,label_id:i,score:t[s]})}}return[u,c]}function _(e,t=.5,n=.5,r=.8,o=null,i=null){null===o&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),o=new Set);const a=e.class_queries_logits??e.logits,l=(e.masks_queries_logits??e.pred_masks).sigmoid();let[d,u,c]=a.dims;if(c-=1,null!==i&&i.length!==d)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let p=[];for(let e=0;e<d;++e){let d=null!==i?i[e]:null,u=a[e],h=l[e],[f,_,w]=m(u,h,t,c);if(0===w.length){let[e,t]=d??h.dims.slice(-2),n=new s.Tensor("int32",new Int32Array(e*t).fill(-1),[e,t]);p.push({segmentation:n,segments_info:[]});continue}let[y,b]=g(f,_,w,n,r,o,d);p.push({segmentation:y,segments_info:b})}return p}function w(e,t=.5,n=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class y extends r.Callable{constructor(e){super(),this.image_mean=e.image_mean??e.mean,this.image_std=e.image_std??e.std,this.resample=e.resample??2,this.do_rescale=e.do_rescale??!0,this.rescale_factor=e.rescale_factor??1/255,this.do_normalize=e.do_normalize,this.do_thumbnail=e.do_thumbnail,this.size=e.size??e.image_size,this.do_resize=e.do_resize??void 0!==this.size,this.size_divisibility=e.size_divisibility??e.size_divisor,this.do_center_crop=e.do_center_crop,this.crop_size=e.crop_size,this.do_convert_rgb=e.do_convert_rgb??!0,this.do_crop_margin=e.do_crop_margin,this.pad_size=e.pad_size,this.do_pad=e.do_pad,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=e.do_flip_channel_order??!1,this.config=e}async thumbnail(e,t,n=2){const r=e.height,s=e.width,o=t.height,i=t.width;let a=Math.min(r,o),l=Math.min(s,i);return a===r&&l===s?e:(r>s?l=Math.floor(s*a/r):s>r&&(a=Math.floor(r*l/s)),await e.resize(l,a,{resample:n}))}async crop_margin(e,t=200){const n=e.clone().grayscale(),r=(0,o.min)(n.data)[0],s=(0,o.max)(n.data)[0]-r;if(0===s)return e;const i=t/255;let a=n.width,l=n.height,d=0,u=0;const c=n.data;for(let e=0;e<n.height;++e){const t=e*n.width;for(let o=0;o<n.width;++o)(c[t+o]-r)/s<i&&(a=Math.min(a,o),l=Math.min(l,e),d=Math.max(d,o),u=Math.max(u,e))}return e=await e.crop([a,l,d,u])}pad_image(e,t,n,{mode:r="constant",center:s=!1,constant_values:o=0}={}){const[a,l,d]=t;let u,c;if("number"==typeof n?(u=n,c=n):(u=n.width,c=n.height),u!==l||c!==a){const n=new Float32Array(u*c*d);if(Array.isArray(o))for(let e=0;e<n.length;++e)n[e]=o[e%d];else 0!==o&&n.fill(o);const[p,h]=s?[Math.floor((u-l)/2),Math.floor((c-a)/2)]:[0,0];for(let t=0;t<a;++t){const r=(t+h)*u,s=t*l;for(let t=0;t<l;++t){const o=(r+t+p)*d,i=(s+t)*d;for(let t=0;t<d;++t)n[o+t]=e[i+t]}}if("symmetric"===r){if(s)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const t=a-1,r=l-1;for(let s=0;s<c;++s){const o=s*u,c=(0,i.calculateReflectOffset)(s,t)*l;for(let t=0;t<u;++t){if(s<a&&t<l)continue;const u=(o+t)*d,p=(c+(0,i.calculateReflectOffset)(t,r))*d;for(let t=0;t<d;++t)n[u+t]=e[p+t]}}}e=n,t=[c,u,d]}return[e,t]}rescale(e){for(let t=0;t<e.length;++t)e[t]=this.rescale_factor*e[t]}get_resize_output_image_size(e,t){const[n,r]=e.size;let s,o;if(this.do_thumbnail){const{height:e,width:n}=t;s=Math.min(e,n)}else Number.isInteger(t)?(s=t,o=this.config.max_size??s):void 0!==t&&(s=t.shortest_edge,o=t.longest_edge);if(void 0!==s||void 0!==o){const e=void 0===s?1:Math.max(s/n,s/r),t=n*e,i=r*e,a=void 0===o?1:Math.min(o/t,o/i);let l=Math.floor(Number((t*a).toFixed(2))),d=Math.floor(Number((i*a).toFixed(2)));return void 0!==this.size_divisibility&&([l,d]=u([l,d],this.size_divisibility)),[l,d]}if(void 0!==t&&void 0!==t.width&&void 0!==t.height){let e=t.width,s=t.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let t=s/r,o=e/n;Math.abs(1-o)<Math.abs(1-t)?t=o:o=t,s=d(t*r,this.config.ensure_multiple_of),e=d(o*n,this.config.ensure_multiple_of)}return[e,s]}if(void 0!==this.size_divisibility)return u([n,r],this.size_divisibility);if(void 0!==t.min_pixels&&void 0!==t.max_pixels){const{min_pixels:e,max_pixels:s}=t;return function(e,t,n=28,r=3136,s=1003520){if(e<n||t<n)throw new Error(`height:${e} or width:${t} must be larger than factor:${n}`);if(Math.max(e,t)/Math.min(e,t)>200)throw new Error("absolute aspect ratio must be smaller than 200, got "+Math.max(e,t)/Math.min(e,t));let o=Math.round(e/n)*n,i=Math.round(t/n)*n;if(o*i>s){const r=Math.sqrt(e*t/s);o=Math.floor(e/r/n)*n,i=Math.floor(t/r/n)*n}else if(o*i<r){const s=Math.sqrt(r/(e*t));o=Math.ceil(e*s/n)*n,i=Math.ceil(t*s/n)*n}return[o,i]}(r,n,this.config.patch_size*this.config.merge_size,e,s)}throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(t)}`)}async resize(e){const[t,n]=this.get_resize_output_image_size(e,this.size);return await e.resize(t,n,{resample:this.resample})}async preprocess(e,{do_normalize:t=null,do_pad:n=null,do_convert_rgb:r=null,do_convert_grayscale:o=null,do_flip_channel_order:i=null}={}){this.do_crop_margin&&(e=await this.crop_margin(e));const[a,l]=e.size;if(r??this.do_convert_rgb?e=e.rgb():o&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let t,n;Number.isInteger(this.crop_size)?(t=this.crop_size,n=this.crop_size):(t=this.crop_size.width,n=this.crop_size.height),e=await e.center_crop(t,n)}const d=[e.height,e.width];let c=Float32Array.from(e.data),p=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(c),t??this.do_normalize){let t=this.image_mean;Array.isArray(this.image_mean)||(t=new Array(e.channels).fill(t));let n=this.image_std;if(Array.isArray(this.image_std)||(n=new Array(e.channels).fill(t)),t.length!==e.channels||n.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${t.length}) and \`image_std\` (${n.length}) must match the number of channels in the image (${e.channels}).`);for(let r=0;r<c.length;r+=e.channels)for(let s=0;s<e.channels;++s)c[r+s]=(c[r+s]-t[s])/n[s]}if(n??this.do_pad)if(this.pad_size){const t=this.pad_image(c,[e.height,e.width,e.channels],this.pad_size);[c,p]=t}else if(this.size_divisibility){const[e,t]=u([p[1],p[0]],this.size_divisibility);[c,p]=this.pad_image(c,p,{width:e,height:t})}if(i??this.do_flip_channel_order){if(3!==p[2])throw new Error("Flipping channel order is only supported for RGB images.");for(let e=0;e<c.length;e+=3){const t=c[e];c[e]=c[e+2],c[e+2]=t}}return{original_size:[l,a],reshaped_input_size:d,pixel_values:new s.Tensor("float32",c,p).permute(2,0,1)}}async _call(e,...t){Array.isArray(e)||(e=[e]);const n=await Promise.all(e.map((e=>this.preprocess(e))));return{pixel_values:(0,s.stack)(n.map((e=>e.pixel_values)),0),original_sizes:n.map((e=>e.original_size)),reshaped_input_sizes:n.map((e=>e.reshaped_input_size))}}static async from_pretrained(e,t){return new this(await(0,a.getModelJSON)(e,l.IMAGE_PROCESSOR_NAME,!0,t))}}},"./src/base/processing_utils.js":
  /*!**************************************!*\
    !*** ./src/base/processing_utils.js ***!
    \**************************************/(e,t,n)=>{n.r(t),n.d(t,{Processor:()=>i});var r=n(/*! ../utils/constants.js */"./src/utils/constants.js"),s=n(/*! ../utils/generic.js */"./src/utils/generic.js"),o=n(/*! ../utils/hub.js */"./src/utils/hub.js");class i extends s.Callable{static classes=["image_processor_class","tokenizer_class","feature_extractor_class"];static uses_processor_config=!1;constructor(e,t){super(),this.config=e,this.components=t}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(e,t={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(e,{tokenize:!1,...t})}batch_decode(...e){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...e)}async _call(e,...t){for(const n of[this.image_processor,this.feature_extractor,this.tokenizer])if(n)return n(e,...t);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(e,t){const[n,s]=await Promise.all([this.uses_processor_config?(0,o.getModelJSON)(e,r.PROCESSOR_NAME,!0,t):{},Promise.all(this.classes.filter((e=>e in this)).map((async n=>{const r=await this[n].from_pretrained(e,t);return[n.replace(/_class$/,""),r]}))).then(Object.fromEntries)]);return new this(n,s)}}},"./src/configs.js":
  /*!************************!*\
    !*** ./src/configs.js ***!
    \************************/(e,t,n)=>{n.r(t),n.d(t,{AutoConfig:()=>l,PretrainedConfig:()=>a,getKeyValueShapes:()=>i});var r=n(/*! ./utils/core.js */"./src/utils/core.js"),s=n(/*! ./utils/hub.js */"./src/utils/hub.js");function o(e){const t={};let n={};switch(e.model_type){case"llava":case"paligemma":case"florence2":case"llava_onevision":case"idefics3":n=o(e.text_config);break;case"moondream1":n=o(e.phi_config);break;case"musicgen":n=o(e.decoder);break;case"multi_modality":n=o(e.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":t.num_heads="num_attention_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size";break;case"llama":case"olmo":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size",t.num_attention_heads="num_attention_heads";break;case"gemma":case"gemma2":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.dim_kv="head_dim";break;case"openelm":t.num_heads="num_kv_heads",t.num_layers="num_transformer_layers",t.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":t.num_heads="num_heads",t.num_layers="num_layers",t.hidden_size="hidden_size";break;case"bloom":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="hidden_size";break;case"mpt":t.num_heads="n_heads",t.num_layers="n_layers",t.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":t.num_decoder_layers="num_decoder_layers",t.num_decoder_heads="num_heads",t.decoder_dim_kv="d_kv",t.num_encoder_layers="num_layers",t.num_encoder_heads="num_heads",t.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="d_model",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="d_model";break;case"speecht5":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="hidden_size",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="hidden_size";break;case"trocr":t.num_encoder_layers=t.num_decoder_layers="decoder_layers",t.num_encoder_heads=t.num_decoder_heads="decoder_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="d_model";break;case"musicgen_decoder":t.num_encoder_layers=t.num_decoder_layers="num_hidden_layers",t.num_encoder_heads=t.num_decoder_heads="num_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const s=o(e.decoder),i="num_decoder_layers"in s,a=(0,r.pick)(e,["model_type","is_encoder_decoder"]);return i?(a.num_decoder_layers=s.num_decoder_layers,a.num_decoder_heads=s.num_decoder_heads,a.decoder_hidden_size=s.decoder_hidden_size,a.num_encoder_layers=s.num_encoder_layers,a.num_encoder_heads=s.num_encoder_heads,a.encoder_hidden_size=s.encoder_hidden_size):(a.num_layers=s.num_layers,a.num_heads=s.num_heads,a.hidden_size=s.hidden_size),a}const s={...n,...(0,r.pick)(e,["model_type","multi_query","is_encoder_decoder"])};for(const n in t)s[n]=e[t[n]];return s}function i(e,{prefix:t="past_key_values",batch_size:n=1}={}){const r={},s=e.normalized_config;if(s.is_encoder_decoder&&"num_encoder_heads"in s&&"num_decoder_heads"in s){const e=s.encoder_dim_kv??s.encoder_hidden_size/s.num_encoder_heads,o=s.decoder_dim_kv??s.decoder_hidden_size/s.num_decoder_heads,i=[n,s.num_encoder_heads,0,e],a=[n,s.num_decoder_heads,0,o];for(let e=0;e<s.num_decoder_layers;++e)r[`${t}.${e}.encoder.key`]=i,r[`${t}.${e}.encoder.value`]=i,r[`${t}.${e}.decoder.key`]=a,r[`${t}.${e}.decoder.value`]=a}else{const e=s.num_heads,o=s.num_layers,i=s.dim_kv??s.hidden_size/(s.num_attention_heads??e);if("falcon"===s.model_type){const s=[n*e,0,i];for(let e=0;e<o;++e)r[`${t}.${e}.key`]=s,r[`${t}.${e}.value`]=s}else if(s.multi_query){const s=[n*e,0,2*i];for(let e=0;e<o;++e)r[`${t}.${e}.key_value`]=s}else if("bloom"===s.model_type){const s=[n*e,i,0],a=[n*e,0,i];for(let e=0;e<o;++e)r[`${t}.${e}.key`]=s,r[`${t}.${e}.value`]=a}else if("openelm"===s.model_type)for(let s=0;s<o;++s){const o=[n,e[s],0,i];r[`${t}.${s}.key`]=o,r[`${t}.${s}.value`]=o}else{const s=[n,e,0,i];for(let e=0;e<o;++e)r[`${t}.${e}.key`]=s,r[`${t}.${e}.value`]=s}}return r}class a{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(e){Object.assign(this,e),this.normalized_config=o(this)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:o=!1,revision:i="main"}={}){!n||n instanceof a||(n=new a(n));const l=n??await async function(e,t){return await(0,s.getModelJSON)(e,"config.json",!0,t)}(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:o,revision:i});return new this(l)}}class l{static async from_pretrained(...e){return a.from_pretrained(...e)}}},"./src/env.js":
  /*!********************!*\
    !*** ./src/env.js ***!
    \********************/(e,t,n)=>{n.r(t),n.d(t,{apis:()=>f,env:()=>b});var r=n(/*! fs */"?569f"),s=n(/*! path */"?3f59"),o=n(/*! url */"?154a");const i="undefined"!=typeof window&&void 0!==window.document,a="undefined"!=typeof self&&"DedicatedWorkerGlobalScope"===self.constructor?.name,l="undefined"!=typeof self&&"caches"in self,d="undefined"!=typeof navigator&&"gpu"in navigator,u="undefined"!=typeof navigator&&"ml"in navigator,c="undefined"!=typeof process,p=c&&"node"===process?.release?.name,h=!v(r),m=!v(s),f=Object.freeze({IS_BROWSER_ENV:i,IS_WEBWORKER_ENV:a,IS_WEB_CACHE_AVAILABLE:l,IS_WEBGPU_AVAILABLE:d,IS_WEBNN_AVAILABLE:u,IS_PROCESS_AVAILABLE:c,IS_NODE_ENV:p,IS_FS_AVAILABLE:h,IS_PATH_AVAILABLE:m}),g=h&&m;let _="./";if(g){const e=Object(import.meta).url;e?_=s.dirname(s.dirname(o.fileURLToPath(e))):"undefined"!=typeof __dirname&&(_=s.dirname(__dirname))}const w=g?s.join(_,"/.cache/"):null,y="/models/",b={version:"3.1.1",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(i||a),localModelPath:g?s.join(_,y):y,useFS:h,useBrowserCache:l,useFSCache:h,cacheDir:w,useCustomCache:!1,customCache:null};function v(e){return 0===Object.keys(e).length}},"./src/generation/configuration_utils.js":
  /*!***********************************************!*\
    !*** ./src/generation/configuration_utils.js ***!
    \***********************************************/(e,t,n)=>{n.r(t),n.d(t,{GenerationConfig:()=>s});var r=n(/*! ../utils/core.js */"./src/utils/core.js");class s{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;streamer=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(e){Object.assign(this,(0,r.pick)(e,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":
  /*!******************************************!*\
    !*** ./src/generation/logits_process.js ***!
    \******************************************/(e,t,n)=>{n.r(t),n.d(t,{ClassifierFreeGuidanceLogitsProcessor:()=>_,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>d,LogitsProcessor:()=>o,LogitsProcessorList:()=>a,LogitsWarper:()=>i,MinLengthLogitsProcessor:()=>m,MinNewTokensLengthLogitsProcessor:()=>f,NoBadWordsLogitsProcessor:()=>g,NoRepeatNGramLogitsProcessor:()=>p,RepetitionPenaltyLogitsProcessor:()=>h,SuppressTokensAtBeginLogitsProcessor:()=>u,TemperatureLogitsWarper:()=>w,TopKLogitsWarper:()=>b,TopPLogitsWarper:()=>y,WhisperTimeStampLogitsProcessor:()=>c});var r=n(/*! ../utils/generic.js */"./src/utils/generic.js"),s=(n(/*! ../utils/tensor.js */"./src/utils/tensor.js"),n(/*! ../utils/maths.js */"./src/utils/maths.js"));class o extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class i extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class a extends r.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,t){let n=t;for(const t of this.processors)n=t(e,n);return n}[Symbol.iterator](){return this.processors.values()}}class l extends o{constructor(e){super(),this.bos_token_id=e}_call(e,t){for(let n=0;n<e.length;++n)if(1===e[n].length){const e=t[n].data;e.fill(-1/0),e[this.bos_token_id]=0}return t}}class d extends o{constructor(e,t){super(),this.max_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.max_length-1){const e=t[n].data;e.fill(-1/0);for(const t of this.eos_token_id)e[t]=0}return t}}class u extends o{constructor(e,t){super(),this.begin_suppress_tokens=e,this.begin_index=t}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.begin_index){const e=t[n].data;for(const t of this.begin_suppress_tokens)e[t]=-1/0}return t}}class c extends o{constructor(e,t){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=t.length,t.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data;if(r[this.no_timestamps_token_id]=-1/0,e[n].length===this.begin_index-1){r.fill(-1/0),r[this.timestamp_begin]=0;continue}const o=e[n].slice(this.begin_index),i=o.length>=1&&o[o.length-1]>=this.timestamp_begin,a=o.length<2||o[o.length-2]>=this.timestamp_begin;if(i&&(a?r.subarray(this.timestamp_begin).fill(-1/0):r.subarray(0,this.eos_token_id).fill(-1/0)),e[n].length===this.begin_index&&null!==this.max_initial_timestamp_index){const e=this.timestamp_begin+this.max_initial_timestamp_index;r.subarray(e+1).fill(-1/0)}const l=(0,s.log_softmax)(r);Math.log(l.subarray(this.timestamp_begin).map(Math.exp).reduce(((e,t)=>e+t)))>(0,s.max)(l.subarray(0,this.timestamp_begin))[0]&&r.subarray(0,this.timestamp_begin).fill(-1/0)}return t}}class p extends o{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const t=e.length,n=[];for(let r=0;r<t+1-this.no_repeat_ngram_size;++r){const t=[];for(let n=0;n<this.no_repeat_ngram_size;++n)t.push(e[r+n]);n.push(t.map(Number))}const r=new Map;for(const e of n){const t=e.slice(0,e.length-1),n=JSON.stringify(t),s=r.get(n)??[];s.push(e[e.length-1]),r.set(n,s)}return r}getGeneratedNgrams(e,t){const n=t.slice(t.length+1-this.no_repeat_ngram_size,t.length);return e.get(JSON.stringify(n.map(Number)))??[]}calcBannedNgramTokens(e){const t=[];if(e.length+1<this.no_repeat_ngram_size)return t;{const t=this.getNgrams(e);return this.getGeneratedNgrams(t,e)}}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data,s=this.calcBannedNgramTokens(e[n]);for(const e of s)r[e]=-1/0}return t}}class h extends o{constructor(e){super(),this.penalty=e}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data;for(const t of new Set(e[n])){const e=Number(t);r[e]<0?r[e]*=this.penalty:r[e]/=this.penalty}}return t}}class m extends o{constructor(e,t){super(),this.min_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length<this.min_length){const e=t[n].data;for(const t of this.eos_token_id)e[t]=-1/0}return t}}class f extends o{constructor(e,t,n){super(),this.prompt_length_to_skip=e,this.min_new_tokens=t,this.eos_token_id=Array.isArray(n)?n:[n]}_call(e,t){for(let n=0;n<e.length;++n){if(e[n].length-this.prompt_length_to_skip<this.min_new_tokens){const e=t[n].data;for(const t of this.eos_token_id)e[t]=-1/0}}return t}}class g extends o{constructor(e,t){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data,s=e[n];for(const e of this.bad_words_ids){let t=!0;for(let n=1;n<=e.length-1&&e.length<s.length;++n)if(e.at(-n-1)!=s.at(-n)){t=!1;break}t&&(r[e.at(-1)]=-1/0)}}return t}}class _ extends o{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,t){if(t.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${t.dims[0]} for the logits and ${e.length} for the input ids.`);const n=e.length,r=t.slice([0,n],null),s=t.slice([n,t.dims[0]],null);for(let e=0;e<s.data.length;++e)s.data[e]+=(r.data[e]-s.data[e])*this.guidance_scale;return s}}class w extends i{constructor(e){if(super(),"number"!=typeof e||e<=0){let t=`\`temperature\` (=${e}) must be a strictly positive float, otherwise your next token scores will be invalid.`;0===e&&(t+=" If you're looking for greedy decoding strategies, set `do_sample=false`.")}this.temperature=e}_call(e,t){const n=t.data;for(let e=0;e<n.length;++e)n[e]/=this.temperature;return t}}class y extends i{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:n=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(n)||n<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${n}`);this.top_p=e,this.filter_value=t,this.min_tokens_to_keep=n}}class b extends i{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:n=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,n),this.filter_value=t}}},"./src/generation/logits_sampler.js":
  /*!******************************************!*\
    !*** ./src/generation/logits_sampler.js ***!
    \******************************************/(e,t,n)=>{n.r(t),n.d(t,{LogitsSampler:()=>i});var r=n(/*! ../utils/generic.js */"./src/utils/generic.js"),s=n(/*! ../utils/tensor.js */"./src/utils/tensor.js"),o=n(/*! ../utils/maths.js */"./src/utils/maths.js");n(/*! ../generation/configuration_utils.js */"./src/generation/configuration_utils.js");class i extends r.Callable{constructor(e){super(),this.generation_config=e}async _call(e){return this.sample(e)}async sample(e){throw Error("sample should be implemented in subclasses.")}getLogits(e,t){let n=e.dims.at(-1),r=e.data;if(-1===t)r=r.slice(-n);else{let e=t*n;r=r.slice(e,e+n)}return r}randomSelect(e){let t=0;for(let n=0;n<e.length;++n)t+=e[n];let n=Math.random()*t;for(let t=0;t<e.length;++t)if(n-=e[t],n<=0)return t;return 0}static getSampler(e){if(e.do_sample)return new l(e);if(e.num_beams>1)return new d(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new a(e)}}class a extends i{async sample(e){const t=(0,o.max)(e.data)[1];return[[BigInt(t),0]]}}class l extends i{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await(0,s.topk)(e,t),i=(0,o.softmax)(n.data);return Array.from({length:this.generation_config.num_beams},(()=>{const e=this.randomSelect(i);return[r.data[e],Math.log(i[e])]}))}}class d extends i{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await(0,s.topk)(e,t),i=(0,o.softmax)(n.data);return Array.from({length:this.generation_config.num_beams},((e,t)=>[r.data[t],Math.log(i[t])]))}}},"./src/generation/stopping_criteria.js":
  /*!*********************************************!*\
    !*** ./src/generation/stopping_criteria.js ***!
    \*********************************************/(e,t,n)=>{n.r(t),n.d(t,{EosTokenCriteria:()=>a,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>i,StoppingCriteria:()=>s,StoppingCriteriaList:()=>o});var r=n(/*! ../utils/generic.js */"./src/utils/generic.js");class s extends r.Callable{_call(e,t){throw Error("StoppingCriteria needs to be subclassed")}}class o extends r.Callable{constructor(){super(),this.criteria=[]}push(e){this.criteria.push(e)}extend(e){e instanceof o?e=e.criteria:e instanceof s&&(e=[e]),this.criteria.push(...e)}_call(e,t){const n=new Array(e.length).fill(!1);for(const r of this.criteria){const s=r(e,t);for(let e=0;e<n.length;++e)n[e]||=s[e]}return n}[Symbol.iterator](){return this.criteria.values()}}class i extends s{constructor(e,t=null){super(),this.max_length=e,this.max_position_embeddings=t}_call(e){return e.map((e=>e.length>=this.max_length))}}class a extends s{constructor(e){super(),Array.isArray(e)||(e=[e]),this.eos_token_id=e}_call(e,t){return e.map((e=>{const t=e.at(-1);return this.eos_token_id.some((e=>t==e))}))}}class l extends s{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(e,t){return new Array(e.length).fill(this.interrupted)}}},"./src/generation/streamers.js":
  /*!*************************************!*\
    !*** ./src/generation/streamers.js ***!
    \*************************************/(e,t,n)=>{n.r(t),n.d(t,{BaseStreamer:()=>i,TextStreamer:()=>l,WhisperTextStreamer:()=>d});var r=n(/*! ../utils/core.js */"./src/utils/core.js"),s=n(/*! ../tokenizers.js */"./src/tokenizers.js"),o=n(/*! ../env.js */"./src/env.js");class i{put(e){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const a=o.apis.IS_PROCESS_AVAILABLE?e=>process.stdout.write(e):e=>console.log(e);class l extends i{constructor(e,{skip_prompt:t=!1,callback_function:n=null,token_callback_function:r=null,decode_kwargs:s={},...o}={}){super(),this.tokenizer=e,this.skip_prompt=t,this.callback_function=n??a,this.token_callback_function=r,this.decode_kwargs={...s,...o},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(e){if(e.length>1)throw Error("TextStreamer only supports batch size of 1");if(this.skip_prompt&&this.next_tokens_are_prompt)return void(this.next_tokens_are_prompt=!1);const t=e[0];this.token_callback_function?.(t),this.token_cache=(0,r.mergeArrays)(this.token_cache,t);const n=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let o;n.endsWith("\n")?(o=n.slice(this.print_len),this.token_cache=[],this.print_len=0):n.length>0&&(0,s.is_chinese_char)(n.charCodeAt(n.length-1))?(o=n.slice(this.print_len),this.print_len+=o.length):(o=n.slice(this.print_len,n.lastIndexOf(" ")+1),this.print_len+=o.length),this.on_finalized_text(o,!1)}end(){let e;if(this.token_cache.length>0){e=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0}else e="";this.next_tokens_are_prompt=!0,this.on_finalized_text(e,!0)}on_finalized_text(e,t){e.length>0&&this.callback_function?.(e),t&&this.callback_function===a&&o.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.("\n")}}class d extends l{constructor(e,{skip_prompt:t=!1,callback_function:n=null,token_callback_function:r=null,on_chunk_start:s=null,on_chunk_end:o=null,on_finalize:i=null,time_precision:a=.02,skip_special_tokens:l=!0,decode_kwargs:d={}}={}){super(e,{skip_prompt:t,callback_function:n,token_callback_function:r,decode_kwargs:{skip_special_tokens:l,...d}}),this.timestamp_begin=e.timestamp_begin,this.on_chunk_start=s,this.on_chunk_end=o,this.on_finalize=i,this.time_precision=a,this.waiting_for_timestamp=!1}put(e){if(e.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const t=e[0];if(1===t.length){const n=Number(t[0])-this.timestamp_begin;if(n>=0){const t=n*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(t):this.on_chunk_start?.(t),this.waiting_for_timestamp=!this.waiting_for_timestamp,e=[[]]}}return super.put(e)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":
  /*!***********************!*\
    !*** ./src/models.js ***!
    \***********************/(e,t,n)=>{n.r(t),n.d(t,{ASTForAudioClassification:()=>un,ASTModel:()=>dn,ASTPreTrainedModel:()=>ln,AlbertForMaskedLM:()=>wt,AlbertForQuestionAnswering:()=>_t,AlbertForSequenceClassification:()=>gt,AlbertModel:()=>ft,AlbertPreTrainedModel:()=>mt,AutoModel:()=>bl,AutoModelForAudioClassification:()=>Nl,AutoModelForAudioFrameClassification:()=>jl,AutoModelForCTC:()=>Dl,AutoModelForCausalLM:()=>Cl,AutoModelForDepthEstimation:()=>ql,AutoModelForDocumentQuestionAnswering:()=>Vl,AutoModelForImageClassification:()=>Fl,AutoModelForImageFeatureExtraction:()=>Xl,AutoModelForImageMatting:()=>Gl,AutoModelForImageSegmentation:()=>Al,AutoModelForImageToImage:()=>Ul,AutoModelForMaskGeneration:()=>Bl,AutoModelForMaskedLM:()=>Pl,AutoModelForNormalEstimation:()=>Wl,AutoModelForObjectDetection:()=>Ll,AutoModelForPoseEstimation:()=>Hl,AutoModelForQuestionAnswering:()=>Sl,AutoModelForSemanticSegmentation:()=>Il,AutoModelForSeq2SeqLM:()=>Ml,AutoModelForSequenceClassification:()=>vl,AutoModelForSpeechSeq2Seq:()=>Tl,AutoModelForTextToSpectrogram:()=>kl,AutoModelForTextToWaveform:()=>$l,AutoModelForTokenClassification:()=>xl,AutoModelForUniversalSegmentation:()=>zl,AutoModelForVision2Seq:()=>El,AutoModelForXVector:()=>Rl,AutoModelForZeroShotObjectDetection:()=>Ol,BartForConditionalGeneration:()=>Et,BartForSequenceClassification:()=>Ft,BartModel:()=>St,BartPretrainedModel:()=>Pt,BaseModelOutput:()=>K,BeitForImageClassification:()=>Is,BeitModel:()=>As,BeitPreTrainedModel:()=>Fs,BertForMaskedLM:()=>Z,BertForQuestionAnswering:()=>ne,BertForSequenceClassification:()=>ee,BertForTokenClassification:()=>te,BertModel:()=>J,BertPreTrainedModel:()=>Y,BlenderbotForConditionalGeneration:()=>Nt,BlenderbotModel:()=>Dt,BlenderbotPreTrainedModel:()=>Bt,BlenderbotSmallForConditionalGeneration:()=>Vt,BlenderbotSmallModel:()=>jt,BlenderbotSmallPreTrainedModel:()=>Rt,BloomForCausalLM:()=>Wr,BloomModel:()=>qr,BloomPreTrainedModel:()=>Ur,CLIPModel:()=>Tn,CLIPPreTrainedModel:()=>Mn,CLIPSegForImageSegmentation:()=>jn,CLIPSegModel:()=>Rn,CLIPSegPreTrainedModel:()=>Nn,CLIPTextModel:()=>kn,CLIPTextModelWithProjection:()=>$n,CLIPVisionModel:()=>Cn,CLIPVisionModelWithProjection:()=>Pn,CamembertForMaskedLM:()=>ke,CamembertForQuestionAnswering:()=>Pe,CamembertForSequenceClassification:()=>$e,CamembertForTokenClassification:()=>Ce,CamembertModel:()=>Te,CamembertPreTrainedModel:()=>Me,CausalLMOutput:()=>td,CausalLMOutputWithPast:()=>nd,ChineseCLIPModel:()=>zn,ChineseCLIPPreTrainedModel:()=>In,ClapAudioModelWithProjection:()=>Qi,ClapModel:()=>Hi,ClapPreTrainedModel:()=>Wi,ClapTextModelWithProjection:()=>Xi,CodeGenForCausalLM:()=>lr,CodeGenModel:()=>ar,CodeGenPreTrainedModel:()=>ir,CohereForCausalLM:()=>Mr,CohereModel:()=>xr,CoherePreTrainedModel:()=>vr,ConvBertForMaskedLM:()=>he,ConvBertForQuestionAnswering:()=>ge,ConvBertForSequenceClassification:()=>me,ConvBertForTokenClassification:()=>fe,ConvBertModel:()=>pe,ConvBertPreTrainedModel:()=>ce,ConvNextForImageClassification:()=>Fo,ConvNextModel:()=>Eo,ConvNextPreTrainedModel:()=>So,ConvNextV2ForImageClassification:()=>zo,ConvNextV2Model:()=>Io,ConvNextV2PreTrainedModel:()=>Ao,DPTForDepthEstimation:()=>po,DPTModel:()=>co,DPTPreTrainedModel:()=>uo,DebertaForMaskedLM:()=>Fe,DebertaForQuestionAnswering:()=>ze,DebertaForSequenceClassification:()=>Ae,DebertaForTokenClassification:()=>Ie,DebertaModel:()=>Ee,DebertaPreTrainedModel:()=>Se,DebertaV2ForMaskedLM:()=>Be,DebertaV2ForQuestionAnswering:()=>Re,DebertaV2ForSequenceClassification:()=>De,DebertaV2ForTokenClassification:()=>Ne,DebertaV2Model:()=>Oe,DebertaV2PreTrainedModel:()=>Le,DecisionTransformerModel:()=>ka,DecisionTransformerPreTrainedModel:()=>Ta,DeiTForImageClassification:()=>Ks,DeiTModel:()=>Qs,DeiTPreTrainedModel:()=>Xs,DepthAnythingForDepthEstimation:()=>mo,DepthAnythingPreTrainedModel:()=>ho,DepthProForDepthEstimation:()=>bo,DepthProPreTrainedModel:()=>yo,DetrForObjectDetection:()=>Os,DetrForSegmentation:()=>Bs,DetrModel:()=>Ls,DetrObjectDetectionOutput:()=>Ds,DetrPreTrainedModel:()=>zs,DetrSegmentationOutput:()=>Ns,Dinov2ForImageClassification:()=>Bo,Dinov2Model:()=>Oo,Dinov2PreTrainedModel:()=>Lo,DistilBertForMaskedLM:()=>We,DistilBertForQuestionAnswering:()=>qe,DistilBertForSequenceClassification:()=>Ge,DistilBertForTokenClassification:()=>Ue,DistilBertModel:()=>Ve,DistilBertPreTrainedModel:()=>je,DonutSwinModel:()=>Po,DonutSwinPreTrainedModel:()=>Co,EfficientNetForImageClassification:()=>aa,EfficientNetModel:()=>ia,EfficientNetPreTrainedModel:()=>oa,ElectraForMaskedLM:()=>ye,ElectraForQuestionAnswering:()=>xe,ElectraForSequenceClassification:()=>be,ElectraForTokenClassification:()=>ve,ElectraModel:()=>we,ElectraPreTrainedModel:()=>_e,EsmForMaskedLM:()=>Qe,EsmForSequenceClassification:()=>Ke,EsmForTokenClassification:()=>Ye,EsmModel:()=>Xe,EsmPreTrainedModel:()=>He,FalconForCausalLM:()=>qi,FalconModel:()=>Ui,FalconPreTrainedModel:()=>Gi,FastViTForImageClassification:()=>gs,FastViTModel:()=>fs,FastViTPreTrainedModel:()=>ms,Florence2ForConditionalGeneration:()=>bn,Florence2PreTrainedModel:()=>yn,GLPNForDepthEstimation:()=>$o,GLPNModel:()=>ko,GLPNPreTrainedModel:()=>To,GPT2LMHeadModel:()=>Un,GPT2Model:()=>Gn,GPT2PreTrainedModel:()=>Vn,GPTBigCodeForCausalLM:()=>or,GPTBigCodeModel:()=>sr,GPTBigCodePreTrainedModel:()=>rr,GPTJForCausalLM:()=>nr,GPTJModel:()=>tr,GPTJPreTrainedModel:()=>er,GPTNeoForCausalLM:()=>Kn,GPTNeoModel:()=>Qn,GPTNeoPreTrainedModel:()=>Xn,GPTNeoXForCausalLM:()=>Zn,GPTNeoXModel:()=>Jn,GPTNeoXPreTrainedModel:()=>Yn,Gemma2ForCausalLM:()=>Sr,Gemma2Model:()=>Pr,Gemma2PreTrainedModel:()=>Cr,GemmaForCausalLM:()=>$r,GemmaModel:()=>kr,GemmaPreTrainedModel:()=>Tr,GraniteForCausalLM:()=>br,GraniteModel:()=>yr,GranitePreTrainedModel:()=>wr,GroupViTModel:()=>hs,GroupViTPreTrainedModel:()=>ps,HieraForImageClassification:()=>Zs,HieraModel:()=>Js,HieraPreTrainedModel:()=>Ys,HubertForCTC:()=>xi,HubertForSequenceClassification:()=>Mi,HubertModel:()=>vi,HubertPreTrainedModel:()=>bi,Idefics3ForConditionalGeneration:()=>xn,Idefics3PreTrainedModel:()=>vn,ImageMattingOutput:()=>rd,JAISLMHeadModel:()=>Hn,JAISModel:()=>Wn,JAISPreTrainedModel:()=>qn,JinaCLIPModel:()=>On,JinaCLIPPreTrainedModel:()=>Ln,JinaCLIPTextModel:()=>Bn,JinaCLIPVisionModel:()=>Dn,LlamaForCausalLM:()=>cr,LlamaModel:()=>ur,LlamaPreTrainedModel:()=>dr,LlavaForConditionalGeneration:()=>gn,LlavaOnevisionForConditionalGeneration:()=>_n,LlavaPreTrainedModel:()=>fn,LongT5ForConditionalGeneration:()=>Tt,LongT5Model:()=>Mt,LongT5PreTrainedModel:()=>xt,M2M100ForConditionalGeneration:()=>Ko,M2M100Model:()=>Qo,M2M100PreTrainedModel:()=>Xo,MBartForCausalLM:()=>Ot,MBartForConditionalGeneration:()=>zt,MBartForSequenceClassification:()=>Lt,MBartModel:()=>It,MBartPreTrainedModel:()=>At,MPNetForMaskedLM:()=>ot,MPNetForQuestionAnswering:()=>lt,MPNetForSequenceClassification:()=>it,MPNetForTokenClassification:()=>at,MPNetModel:()=>st,MPNetPreTrainedModel:()=>rt,MT5ForConditionalGeneration:()=>Ct,MT5Model:()=>$t,MT5PreTrainedModel:()=>kt,MarianMTModel:()=>Ho,MarianModel:()=>Wo,MarianPreTrainedModel:()=>qo,MaskFormerForInstanceSegmentation:()=>Mo,MaskFormerModel:()=>xo,MaskFormerPreTrainedModel:()=>vo,MaskedLMOutput:()=>Zl,MgpstrForSceneTextRecognition:()=>Ea,MgpstrModelOutput:()=>Pa,MgpstrPreTrainedModel:()=>Sa,MistralForCausalLM:()=>Ni,MistralModel:()=>Di,MistralPreTrainedModel:()=>Bi,MobileBertForMaskedLM:()=>et,MobileBertForQuestionAnswering:()=>nt,MobileBertForSequenceClassification:()=>tt,MobileBertModel:()=>Ze,MobileBertPreTrainedModel:()=>Je,MobileLLMForCausalLM:()=>mr,MobileLLMModel:()=>hr,MobileLLMPreTrainedModel:()=>pr,MobileNetV1ForImageClassification:()=>ma,MobileNetV1Model:()=>ha,MobileNetV1PreTrainedModel:()=>pa,MobileNetV2ForImageClassification:()=>_a,MobileNetV2Model:()=>ga,MobileNetV2PreTrainedModel:()=>fa,MobileNetV3ForImageClassification:()=>ba,MobileNetV3Model:()=>ya,MobileNetV3PreTrainedModel:()=>wa,MobileNetV4ForImageClassification:()=>Ma,MobileNetV4Model:()=>xa,MobileNetV4PreTrainedModel:()=>va,MobileViTForImageClassification:()=>vs,MobileViTModel:()=>bs,MobileViTPreTrainedModel:()=>ys,MobileViTV2ForImageClassification:()=>Ts,MobileViTV2Model:()=>Ms,MobileViTV2PreTrainedModel:()=>xs,ModelOutput:()=>Q,Moondream1ForConditionalGeneration:()=>wn,MptForCausalLM:()=>Qr,MptModel:()=>Xr,MptPreTrainedModel:()=>Hr,MultiModalityCausalLM:()=>Ca,MultiModalityPreTrainedModel:()=>$a,MusicgenForCausalLM:()=>ua,MusicgenForConditionalGeneration:()=>ca,MusicgenModel:()=>da,MusicgenPreTrainedModel:()=>la,NomicBertModel:()=>se,NomicBertPreTrainedModel:()=>re,OPTForCausalLM:()=>Jr,OPTModel:()=>Yr,OPTPreTrainedModel:()=>Kr,OlmoForCausalLM:()=>_r,OlmoModel:()=>gr,OlmoPreTrainedModel:()=>fr,OpenELMForCausalLM:()=>Ar,OpenELMModel:()=>Fr,OpenELMPreTrainedModel:()=>Er,OwlViTForObjectDetection:()=>Cs,OwlViTModel:()=>$s,OwlViTPreTrainedModel:()=>ks,Owlv2ForObjectDetection:()=>Es,Owlv2Model:()=>Ss,Owlv2PreTrainedModel:()=>Ps,PatchTSMixerForPrediction:()=>Oa,PatchTSMixerModel:()=>La,PatchTSMixerPreTrainedModel:()=>za,PatchTSTForPrediction:()=>Ia,PatchTSTModel:()=>Aa,PatchTSTPreTrainedModel:()=>Fa,Phi3ForCausalLM:()=>Gr,Phi3Model:()=>Vr,Phi3PreTrainedModel:()=>jr,PhiForCausalLM:()=>Rr,PhiModel:()=>Nr,PhiPreTrainedModel:()=>Dr,PreTrainedModel:()=>X,PretrainedMixin:()=>Ba,PvtForImageClassification:()=>is,PvtModel:()=>os,PvtPreTrainedModel:()=>ss,PyAnnoteForAudioFrameClassification:()=>si,PyAnnoteModel:()=>ri,PyAnnotePreTrainedModel:()=>ni,QuestionAnsweringModelOutput:()=>ed,Qwen2ForCausalLM:()=>Lr,Qwen2Model:()=>zr,Qwen2PreTrainedModel:()=>Ir,Qwen2VLForConditionalGeneration:()=>Br,Qwen2VLPreTrainedModel:()=>Or,RTDetrForObjectDetection:()=>Vs,RTDetrModel:()=>js,RTDetrObjectDetectionOutput:()=>Gs,RTDetrPreTrainedModel:()=>Rs,ResNetForImageClassification:()=>no,ResNetModel:()=>to,ResNetPreTrainedModel:()=>eo,RoFormerForMaskedLM:()=>ae,RoFormerForQuestionAnswering:()=>ue,RoFormerForSequenceClassification:()=>le,RoFormerForTokenClassification:()=>de,RoFormerModel:()=>ie,RoFormerPreTrainedModel:()=>oe,RobertaForMaskedLM:()=>qt,RobertaForQuestionAnswering:()=>Xt,RobertaForSequenceClassification:()=>Wt,RobertaForTokenClassification:()=>Ht,RobertaModel:()=>Ut,RobertaPreTrainedModel:()=>Gt,SamImageSegmentationOutput:()=>Uo,SamModel:()=>Go,SamPreTrainedModel:()=>Vo,SapiensForDepthEstimation:()=>_o,SapiensForNormalEstimation:()=>wo,SapiensForSemanticSegmentation:()=>go,SapiensPreTrainedModel:()=>fo,SegformerForImageClassification:()=>ea,SegformerForSemanticSegmentation:()=>ta,SegformerModel:()=>Zi,SegformerPreTrainedModel:()=>Ji,Seq2SeqLMOutput:()=>Ql,SequenceClassifierOutput:()=>Kl,SiglipModel:()=>En,SiglipPreTrainedModel:()=>Sn,SiglipTextModel:()=>Fn,SiglipVisionModel:()=>An,SpeechT5ForSpeechToText:()=>Ai,SpeechT5ForTextToSpeech:()=>Ii,SpeechT5HifiGan:()=>zi,SpeechT5Model:()=>Fi,SpeechT5PreTrainedModel:()=>Ei,SqueezeBertForMaskedLM:()=>ct,SqueezeBertForQuestionAnswering:()=>ht,SqueezeBertForSequenceClassification:()=>pt,SqueezeBertModel:()=>ut,SqueezeBertPreTrainedModel:()=>dt,StableLmForCausalLM:()=>sa,StableLmModel:()=>ra,StableLmPreTrainedModel:()=>na,Starcoder2ForCausalLM:()=>Vi,Starcoder2Model:()=>ji,Starcoder2PreTrainedModel:()=>Ri,Swin2SRForImageSuperResolution:()=>lo,Swin2SRModel:()=>ao,Swin2SRPreTrainedModel:()=>io,SwinForImageClassification:()=>oo,SwinModel:()=>so,SwinPreTrainedModel:()=>ro,T5ForConditionalGeneration:()=>vt,T5Model:()=>bt,T5PreTrainedModel:()=>yt,TableTransformerForObjectDetection:()=>Ws,TableTransformerModel:()=>qs,TableTransformerObjectDetectionOutput:()=>Hs,TableTransformerPreTrainedModel:()=>Us,TokenClassifierOutput:()=>Jl,TrOCRForCausalLM:()=>Oi,TrOCRPreTrainedModel:()=>Li,UniSpeechForCTC:()=>di,UniSpeechForSequenceClassification:()=>ui,UniSpeechModel:()=>li,UniSpeechPreTrainedModel:()=>ai,UniSpeechSatForAudioFrameClassification:()=>fi,UniSpeechSatForCTC:()=>hi,UniSpeechSatForSequenceClassification:()=>mi,UniSpeechSatModel:()=>pi,UniSpeechSatPreTrainedModel:()=>ci,ViTForImageClassification:()=>ts,ViTMAEModel:()=>ls,ViTMAEPreTrainedModel:()=>as,ViTMSNForImageClassification:()=>cs,ViTMSNModel:()=>us,ViTMSNPreTrainedModel:()=>ds,ViTModel:()=>es,ViTPreTrainedModel:()=>Zr,VisionEncoderDecoderModel:()=>mn,VitMatteForImageMatting:()=>ws,VitMattePreTrainedModel:()=>_s,VitPoseForPoseEstimation:()=>rs,VitPosePreTrainedModel:()=>ns,VitsModel:()=>Yi,VitsModelOutput:()=>sd,VitsPreTrainedModel:()=>Ki,Wav2Vec2BertForCTC:()=>wi,Wav2Vec2BertForSequenceClassification:()=>yi,Wav2Vec2BertModel:()=>_i,Wav2Vec2BertPreTrainedModel:()=>gi,Wav2Vec2ForAudioFrameClassification:()=>ti,Wav2Vec2ForCTC:()=>Zo,Wav2Vec2ForSequenceClassification:()=>ei,Wav2Vec2Model:()=>Jo,Wav2Vec2PreTrainedModel:()=>Yo,WavLMForAudioFrameClassification:()=>Si,WavLMForCTC:()=>$i,WavLMForSequenceClassification:()=>Ci,WavLMForXVector:()=>Pi,WavLMModel:()=>ki,WavLMPreTrainedModel:()=>Ti,WeSpeakerResNetModel:()=>ii,WeSpeakerResNetPreTrainedModel:()=>oi,WhisperForConditionalGeneration:()=>hn,WhisperModel:()=>pn,WhisperPreTrainedModel:()=>cn,XLMForQuestionAnswering:()=>en,XLMForSequenceClassification:()=>Jt,XLMForTokenClassification:()=>Zt,XLMModel:()=>Kt,XLMPreTrainedModel:()=>Qt,XLMRobertaForMaskedLM:()=>rn,XLMRobertaForQuestionAnswering:()=>an,XLMRobertaForSequenceClassification:()=>sn,XLMRobertaForTokenClassification:()=>on,XLMRobertaModel:()=>nn,XLMRobertaPreTrainedModel:()=>tn,XLMWithLMHeadModel:()=>Yt,XVectorOutput:()=>Yl,YolosForObjectDetection:()=>Ro,YolosModel:()=>No,YolosObjectDetectionOutput:()=>jo,YolosPreTrainedModel:()=>Do});var r=n(/*! ./configs.js */"./src/configs.js"),s=n(/*! ./backends/onnx.js */"./src/backends/onnx.js"),o=n(/*! ./utils/dtypes.js */"./src/utils/dtypes.js"),i=n(/*! ./utils/generic.js */"./src/utils/generic.js"),a=n(/*! ./utils/core.js */"./src/utils/core.js"),l=n(/*! ./utils/hub.js */"./src/utils/hub.js"),d=n(/*! ./utils/constants.js */"./src/utils/constants.js"),u=n(/*! ./generation/logits_process.js */"./src/generation/logits_process.js"),c=n(/*! ./generation/configuration_utils.js */"./src/generation/configuration_utils.js"),p=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),h=n(/*! ./utils/image.js */"./src/utils/image.js"),m=n(/*! ./utils/maths.js */"./src/utils/maths.js"),f=n(/*! ./generation/stopping_criteria.js */"./src/generation/stopping_criteria.js"),g=n(/*! ./generation/logits_sampler.js */"./src/generation/logits_sampler.js"),_=n(/*! ./env.js */"./src/env.js"),w=n(/*! ./models/whisper/generation_whisper.js */"./src/models/whisper/generation_whisper.js"),y=n(/*! ./models/whisper/common_whisper.js */"./src/models/whisper/common_whisper.js");const b=0,v=1,x=2,M=3,T=4,k=5,$=6,C=7,P=8,S=new Map,E=new Map,F=new Map;async function A(e,t,n){return Object.fromEntries(await Promise.all(Object.keys(t).map((async i=>{const{buffer:a,session_options:d,session_config:u}=await async function(e,t,n){const i=n.config?.["transformers.js_config"]??{};let a=n.device??i.device;a&&"string"!=typeof a&&(a.hasOwnProperty(t)?a=a[t]:(console.warn(`device not specified for "${t}". Using the default device.`),a=null));const d=a??(_.apis.IS_NODE_ENV?"cpu":"wasm"),u=(0,s.deviceToExecutionProviders)(d);let c=n.dtype??i.dtype;if("string"!=typeof c&&(c&&c.hasOwnProperty(t)?c=c[t]:(c=o.DEFAULT_DEVICE_DTYPE_MAPPING[d]??o.DATA_TYPES.fp32,console.warn(`dtype not specified for "${t}". Using the default dtype (${c}) for this device (${d}).`))),c===o.DATA_TYPES.auto){let e=i.dtype;"string"!=typeof e&&(e=e[t]),c=e&&e!==o.DATA_TYPES.auto&&o.DATA_TYPES.hasOwnProperty(e)?e:o.DEFAULT_DEVICE_DTYPE_MAPPING[d]??o.DATA_TYPES.fp32}const p=c;if(!o.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(p))throw new Error(`Invalid dtype: ${p}. Should be one of: ${Object.keys(o.DATA_TYPES).join(", ")}`);if(p===o.DATA_TYPES.fp16&&"webgpu"===d&&!await(0,o.isWebGpuFp16Supported)())throw new Error(`The device (${d}) does not support fp16.`);const h=i.kv_cache_dtype?"string"==typeof i.kv_cache_dtype?i.kv_cache_dtype:i.kv_cache_dtype[p]??"float32":void 0;if(h&&!["float32","float16"].includes(h))throw new Error(`Invalid kv_cache_dtype: ${h}. Should be one of: float32, float16`);const m={dtype:p,kv_cache_dtype:h},f=o.DEFAULT_DTYPE_SUFFIX_MAPPING[p],g=`${n.subfolder??""}/${t}${f}.onnx`,w={...n.session_options};w.executionProviders??=u;const y=i.free_dimension_overrides;y?w.freeDimensionOverrides??=y:d.startsWith("webnn")&&!w.freeDimensionOverrides&&console.warn('WebNN does not currently support dynamic shapes and requires `free_dimension_overrides` to be set in config.json as a field within "transformers.js_config". When `free_dimension_overrides` is not set, you may experience significant performance degradation.');const b=(0,l.getModelFile)(e,g,!0,n),v=n.use_external_data_format??i.use_external_data_format;let x=[];if(v&&(!0===v||"object"==typeof v&&v.hasOwnProperty(t)&&!0===v[t])){if(_.apis.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const r=`${t}${f}.onnx_data`,s=`${n.subfolder??""}/${r}`;x.push(new Promise((async(t,o)=>{const i=await(0,l.getModelFile)(e,s,!0,n);t({path:r,data:i})})))}else void 0!==w.externalData&&(x=w.externalData.map((async t=>{if("string"==typeof t.data){const r=await(0,l.getModelFile)(e,t.data,!0,n);return{...t,data:r}}return t})));if(x.length>0&&(w.externalData=await Promise.all(x)),"webgpu"===d){const e=(0,r.getKeyValueShapes)(n.config,{prefix:"present"});if(Object.keys(e).length>0&&!(0,s.isONNXProxy)()){const t={};for(const n in e)t[n]="gpu-buffer";w.preferredOutputLocation=t}}return{buffer:await b,session_options:w,session_config:m}}(e,t[i],n);return[i,await(0,s.createInferenceSession)(a,d,u)]}))))}async function I(e,t,n){return Object.fromEntries(await Promise.all(Object.keys(t).map((async r=>[r,await(0,l.getModelJSON)(e,t[r],!1,n)]))))}async function z(e,t){const n=function(e,t){const n=Object.create(null),r=[];for(const o of e.inputNames){const e=t[o];e instanceof p.Tensor?n[o]=(0,s.isONNXProxy)()?e.clone():e:r.push(o)}if(r.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${r.join(", ")}.`);const o=Object.keys(t).length,i=e.inputNames.length;if(o>i){let n=Object.keys(t).filter((t=>!e.inputNames.includes(t)));console.warn(`WARNING: Too many inputs were provided (${o} > ${i}). The following inputs will be ignored: "${n.join(", ")}".`)}return n}(e,t);try{const t=Object.fromEntries(Object.entries(n).map((([e,t])=>[e,t.ort_tensor])));let r=await e.run(t);return r=L(r),r}catch(e){const t=Object.fromEntries(Object.entries(n).map((([e,{type:t,dims:n,data:r}])=>[e,{type:t,dims:n,data:r}])));throw console.error(`An error occurred during model execution: "${e}".`),console.error("Inputs given to model:",t),e}}function L(e){for(let t in e)(0,s.isONNXTensor)(e[t])?e[t]=new p.Tensor(e[t]):"object"==typeof e[t]&&L(e[t]);return e}function O(e){if(e instanceof p.Tensor)return e;if(0===e.length)throw Error("items must be non-empty");if(Array.isArray(e[0])){if(e.some((t=>t.length!==e[0].length)))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new p.Tensor("int64",BigInt64Array.from(e.flat().map((e=>BigInt(e)))),[e.length,e[0].length])}return new p.Tensor("int64",BigInt64Array.from(e.map((e=>BigInt(e)))),[1,e.length])}function B(e){return new p.Tensor("bool",[e],[1])}async function D(e,t){let{encoder_outputs:n,input_ids:r,decoder_input_ids:s,...o}=t;if(!n){const r=(0,a.pick)(t,e.sessions.model.inputNames);n=(await N(e,r)).last_hidden_state}o.input_ids=s,o.encoder_hidden_states=n,e.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(o.encoder_attention_mask=t.attention_mask);return await R(e,o,!0)}async function N(e,t){const n=e.sessions.model,r=(0,a.pick)(t,n.inputNames);if(n.inputNames.includes("inputs_embeds")&&!r.inputs_embeds){if(!t.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");r.inputs_embeds=await e.encode_text({input_ids:t.input_ids})}return n.inputNames.includes("token_type_ids")&&!r.token_type_ids&&(r.token_type_ids=new p.Tensor("int64",new BigInt64Array(r.input_ids.data.length),r.input_ids.dims)),await z(n,r)}async function R(e,t,n=!1){const r=e.sessions[n?"decoder_model_merged":"model"],{past_key_values:s,...o}=t;r.inputNames.includes("use_cache_branch")&&(o.use_cache_branch=B(!!s)),r.inputNames.includes("position_ids")&&o.attention_mask&&!o.position_ids&&(o.position_ids=function(e,t=null){const{input_ids:n,inputs_embeds:r,attention_mask:s}=e,{data:o,dims:i}=G(s);let a=new p.Tensor("int64",o,i);if(t){const e=-(n??r).dims.at(1);a=a.slice(null,[e,null])}return a}(o,s)),e.addPastKeyValues(o,s);const i=(0,a.pick)(o,r.inputNames);return await z(r,i)}function j({image_token_id:e,inputs_embeds:t,image_features:n,input_ids:r,attention_mask:s}){const o=r.tolist().map((t=>t.reduce(((t,n,r)=>(n==e&&t.push(r),t)),[]))),i=o.reduce(((e,t)=>e+t.length),0),a=n.dims[0];if(i!==a)throw new Error(`Image features and image tokens do not match: tokens: ${i}, features ${a}`);let l=0;for(let e=0;e<o.length;++e){const r=o[e],s=t[e];for(let e=0;e<r.length;++e)s[r[e]].data.set(n[l++].data)}return{inputs_embeds:t,attention_mask:s}}async function V(e,{input_ids:t=null,attention_mask:n=null,pixel_values:r=null,position_ids:s=null,inputs_embeds:o=null,past_key_values:i=null,generation_config:a=null,logits_processor:l=null,...d}){if(!o)if(o=await e.encode_text({input_ids:t,...d}),r&&1!==t.dims[1]){const s=await e.encode_image({pixel_values:r,...d});({inputs_embeds:o,attention_mask:n}=e._merge_input_ids_with_image_features({image_features:s,inputs_embeds:o,input_ids:t,attention_mask:n}))}else if(i&&r&&1===t.dims[1]){const e=t.dims[1],r=Object.values(i)[0].dims.at(-2);n=(0,p.cat)([(0,p.ones)([t.dims[0],r]),n.slice(null,[n.dims[1]-e,n.dims[1]])],1)}if(!s&&"qwen2_vl"===e.config.model_type){const{image_grid_thw:r,video_grid_thw:o}=d;[s]=e.get_rope_index(t,r,o,n)}return await R(e,{inputs_embeds:o,past_key_values:i,attention_mask:n,position_ids:s,generation_config:a,logits_processor:l},!0)}function G(e){const[t,n]=e.dims,r=e.data,s=new BigInt64Array(r.length);for(let e=0;e<t;++e){const t=e*n;let o=BigInt(0);for(let e=0;e<n;++e){const n=t+e;0n===r[n]?s[n]=BigInt(1):(s[n]=o,o+=r[n])}}return{data:s,dims:e.dims}}function U(e,t,n,r){if(n.past_key_values){const t=Object.values(n.past_key_values)[0].dims.at(-2),{input_ids:r,attention_mask:s}=n;if(s&&s.dims[1]>r.dims[1]);else if(t<r.dims[1])n.input_ids=r.slice(null,[t,null]);else if(null!=e.config.image_token_index&&r.data.some((t=>t==e.config.image_token_index))){const s=e.config.num_image_tokens;if(!s)throw new Error("`num_image_tokens` is missing in the model configuration.");const o=r.dims[1]-(t-s);n.input_ids=r.slice(null,[-o,null]),n.attention_mask=(0,p.ones)([1,t+o])}}return n}function q(e,t,n,r){return n.past_key_values&&(t=t.map((e=>[e.at(-1)]))),{...n,decoder_input_ids:O(t)}}function W(e,...t){return e.config.is_encoder_decoder?q(e,...t):U(e,...t)}function H(e,t,n,r){const s=!!n.past_key_values;if(null!==r.guidance_scale&&r.guidance_scale>1&&(s?n.input_ids=(0,p.cat)([n.input_ids,n.input_ids],0):(n.input_ids=(0,p.cat)([n.input_ids,(0,p.full_like)(n.input_ids,BigInt(r.pad_token_id))],0),n.attention_mask=(0,p.cat)([n.attention_mask,(0,p.full_like)(n.attention_mask,0n)],0))),!s&&n.pixel_values||(n.pixel_values=(0,p.full)([0,0,3,384,384],1)),s){const e=0,t=1,r=e>0?1:0,s=1;n.images_seq_mask=new p.Tensor("bool",new Array(e+t).fill(!0).fill(!1,0,t),[s,e+t]),n.images_emb_mask=new p.Tensor("bool",new Array(e).fill(!!r),[s,1,e])}return n}class X extends i.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(e,t,n){super(),this.config=e,this.sessions=t,this.configs=n;const r=F.get(this.constructor),s=S.get(r);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,s){case T:this.can_generate=!0,this._forward=R,this._prepare_inputs_for_generation=U;break;case x:case M:case C:this.can_generate=!0,this._forward=D,this._prepare_inputs_for_generation=q;break;case v:this._forward=D;break;case $:this.can_generate=!0,this._forward=V,this._prepare_inputs_for_generation=W;break;case P:this.can_generate=!0,this._prepare_inputs_for_generation=H;break;default:this._forward=N}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const e=[];for(const t of Object.values(this.sessions))t?.handler?.dispose&&e.push(t.handler.dispose());return await Promise.all(e)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:s=null,local_files_only:o=!1,revision:i="main",model_file_name:a=null,subfolder:l="onnx",device:u=null,dtype:c=null,use_external_data_format:p=null,session_options:h={}}={}){let m={progress_callback:t,config:n,cache_dir:s,local_files_only:o,revision:i,model_file_name:a,subfolder:l,device:u,dtype:c,use_external_data_format:p,session_options:h};const f=F.get(this),g=S.get(f);let _;if(n=m.config=await r.AutoConfig.from_pretrained(e,m),g===T)_=await Promise.all([A(e,{model:m.model_file_name??"model"},m),I(e,{generation_config:"generation_config.json"},m)]);else if(g===x||g===M)_=await Promise.all([A(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},m),I(e,{generation_config:"generation_config.json"},m)]);else if(g===k)_=await Promise.all([A(e,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},m)]);else if(g===v)_=await Promise.all([A(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},m)]);else if(g===$){const t={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};n.is_encoder_decoder&&(t.model="encoder_model"),_=await Promise.all([A(e,t,m),I(e,{generation_config:"generation_config.json"},m)])}else if(g===C)_=await Promise.all([A(e,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},m),I(e,{generation_config:"generation_config.json"},m)]);else if(g===P)_=await Promise.all([A(e,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},m),I(e,{generation_config:"generation_config.json"},m)]);else{if(g!==b){const e=f??n?.model_type;"custom"!==e&&console.warn(`Model type for '${e}' not found, assuming encoder-only architecture. Please report this at ${d.GITHUB_ISSUE_URL}.`)}_=await Promise.all([A(e,{model:m.model_file_name??"model"},m)])}return new this(n,..._)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(e){const t=new u.LogitsProcessorList;return null!==e.temperature&&1!==e.temperature&&t.push(new u.TemperatureLogitsWarper(e.temperature)),null!==e.top_k&&0!==e.top_k&&t.push(new u.TopKLogitsWarper(e.top_k)),null!==e.top_p&&e.top_p<1&&t.push(new u.TopPLogitsWarper(e.top_p)),t}_get_logits_processor(e,t,n=null){const r=new u.LogitsProcessorList;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&r.push(new u.RepetitionPenaltyLogitsProcessor(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&r.push(new u.NoRepeatNGramLogitsProcessor(e.no_repeat_ngram_size)),null!==e.bad_words_ids&&r.push(new u.NoBadWordsLogitsProcessor(e.bad_words_ids,e.eos_token_id)),null!==e.min_length&&null!==e.eos_token_id&&e.min_length>0&&r.push(new u.MinLengthLogitsProcessor(e.min_length,e.eos_token_id)),null!==e.min_new_tokens&&null!==e.eos_token_id&&e.min_new_tokens>0&&r.push(new u.MinNewTokensLengthLogitsProcessor(t,e.min_new_tokens,e.eos_token_id)),null!==e.forced_bos_token_id&&r.push(new u.ForcedBOSTokenLogitsProcessor(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&r.push(new u.ForcedEOSTokenLogitsProcessor(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){const n=t>1||null===e.forced_bos_token_id?t:t+1;r.push(new u.SuppressTokensAtBeginLogitsProcessor(e.begin_suppress_tokens,n))}return null!==e.guidance_scale&&e.guidance_scale>1&&r.push(new u.ClassifierFreeGuidanceLogitsProcessor(e.guidance_scale)),null!==n&&r.extend(n),r}_prepare_generation_config(e,t,n=c.GenerationConfig){const r={...this.config};for(const e of["decoder","generator","text_config"])e in r&&Object.assign(r,r[e]);const s=new n(r);return Object.assign(s,this.generation_config??{}),e&&Object.assign(s,e),t&&Object.assign(s,(0,a.pick)(t,Object.getOwnPropertyNames(s))),s}_get_stopping_criteria(e,t=null){const n=new f.StoppingCriteriaList;return null!==e.max_length&&n.push(new f.MaxLengthCriteria(e.max_length,this.config.max_position_embeddings??null)),null!==e.eos_token_id&&n.push(new f.EosTokenCriteria(e.eos_token_id)),t&&n.extend(t),n}_validate_model_class(){if(!this.can_generate){const e=[Ha,Ya,Wa,ja],t=F.get(this.constructor),n=new Set,r=this.config.model_type;for(const t of e){const e=t.get(r);e&&n.add(e[0])}let s=`The current model class (${t}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw n.size>0&&(s+=` Please use the following class instead: ${[...n].join(", ")}`),Error(s)}}prepare_inputs_for_generation(...e){return this._prepare_inputs_for_generation(this,...e)}_update_model_kwargs_for_generation({generated_input_ids:e,outputs:t,model_inputs:n,is_encoder_decoder:r}){return n.past_key_values=this.getPastKeyValues(t,n.past_key_values),n.input_ids=new p.Tensor("int64",e.flat(),[e.length,1]),r||(n.attention_mask=(0,p.cat)([n.attention_mask,(0,p.ones)([n.attention_mask.dims[0],1])],1)),n.position_ids=null,n}_prepare_model_inputs({inputs:e,bos_token_id:t,model_kwargs:n}){const r=(0,a.pick)(n,this.forward_params),s=this.main_input_name;if(s in r){if(e)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else r[s]=e;return{inputs_tensor:r[s],model_inputs:r,model_input_name:s}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:e,model_inputs:t,model_input_name:n,generation_config:r}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!t.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:e,pixel_values:n,attention_mask:r,...s}=t,o=await this._prepare_inputs_embeds(t);t={...s,...(0,a.pick)(o,["inputs_embeds","attention_mask"])}}let{last_hidden_state:s}=await N(this,t);if(null!==r.guidance_scale&&r.guidance_scale>1)s=(0,p.cat)([s,(0,p.full_like)(s,0)],0),"attention_mask"in t&&(t.attention_mask=(0,p.cat)([t.attention_mask,(0,p.zeros_like)(t.attention_mask)],0));else if(t.decoder_input_ids){const e=O(t.decoder_input_ids).dims[0];if(e!==s.dims[0]){if(1!==s.dims[0])throw new Error(`The encoder outputs have a different batch size (${s.dims[0]}) than the decoder inputs (${e}).`);s=(0,p.cat)(Array.from({length:e},(()=>s)),0)}}return t.encoder_outputs=s,t}_prepare_decoder_input_ids_for_generation({batch_size:e,model_input_name:t,model_kwargs:n,decoder_start_token_id:r,bos_token_id:s,generation_config:o}){let{decoder_input_ids:i,...a}=n;if(!(i instanceof p.Tensor)){if(i)Array.isArray(i[0])||(i=Array.from({length:e},(()=>i)));else if(r??=s,"musicgen"===this.config.model_type)i=Array.from({length:e*this.config.decoder.num_codebooks},(()=>[r]));else if(Array.isArray(r)){if(r.length!==e)throw new Error(`\`decoder_start_token_id\` expcted to have length ${e} but got ${r.length}`);i=r}else i=Array.from({length:e},(()=>[r]));i=O(i)}return n.decoder_attention_mask=(0,p.ones_like)(i),{input_ids:i,model_inputs:a}}async generate({inputs:e=null,generation_config:t=null,logits_processor:n=null,stopping_criteria:r=null,streamer:s=null,...o}){this._validate_model_class(),t=this._prepare_generation_config(t,o);let{inputs_tensor:i,model_inputs:a,model_input_name:l}=this._prepare_model_inputs({inputs:e,model_kwargs:o});const d=this.config.is_encoder_decoder;let u;d&&("encoder_outputs"in a||(a=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:i,model_inputs:a,model_input_name:l,generation_config:t}))),d?({input_ids:u,model_inputs:a}=this._prepare_decoder_input_ids_for_generation({batch_size:a[l].dims.at(0),model_input_name:l,model_kwargs:a,decoder_start_token_id:t.decoder_start_token_id,bos_token_id:t.bos_token_id,generation_config:t})):u=a[l];let c=u.dims.at(-1);null!==t.max_new_tokens&&(t.max_length=c+t.max_new_tokens);const h=this._get_logits_processor(t,c,n),m=this._get_stopping_criteria(t,r),f=a[l].dims.at(0),_=g.LogitsSampler.getSampler(t),w=new Array(f).fill(0),y=u.tolist();let b;s&&s.put(y);let v={};for(;;){if(a=this.prepare_inputs_for_generation(y,a,t),b=await this.forward(a),t.output_attentions&&t.return_dict_in_generate){const e=this.getAttentions(b);for(const t in e)t in v||(v[t]=[]),v[t].push(e[t])}const e=h(y,b.logits.slice(null,-1,null)),n=[];for(let t=0;t<e.dims.at(0);++t){const r=e[t],s=await _(r);for(const[e,r]of s){const s=BigInt(e);w[t]+=r,y[t].push(s),n.push([s]);break}}s&&s.put(n);if(m(y).every((e=>e)))break;a=this._update_model_kwargs_for_generation({generated_input_ids:n,outputs:b,model_inputs:a,is_encoder_decoder:d})}s&&s.end();const x=this.getPastKeyValues(b,a.past_key_values,!0),M=new p.Tensor("int64",y.flat(),[y.length,y[0].length]);if(t.return_dict_in_generate)return{sequences:M,past_key_values:x,...v};for(const e of Object.values(b))"gpu-buffer"===e.location&&e.dispose();return M}getPastKeyValues(e,t,n=!1){const r=Object.create(null);for(const s in e)if(s.startsWith("present")){const o=s.replace("present","past_key_values"),i=s.includes("encoder");if(r[o]=i&&t?t[o]:e[s],t&&(!i||n)){const e=t[o];"gpu-buffer"===e.location&&e.dispose()}}return r}getAttentions(e){const t={};for(const n of["cross_attentions","encoder_attentions","decoder_attentions"])for(const r in e)r.startsWith(n)&&(n in t||(t[n]=[]),t[n].push(e[r]));return t}addPastKeyValues(e,t){if(t)Object.assign(e,t);else{const t=this.sessions.decoder_model_merged??this.sessions.model,n=t?.config?.kv_cache_dtype??"float32",s="float16"===n?new Uint16Array:[],o=(e[this.main_input_name]??e.attention_mask)?.dims?.[0]??1,i=(0,r.getKeyValueShapes)(this.config,{batch_size:o});for(const t in i)e[t]=new p.Tensor(n,s,i[t])}}async encode_image({pixel_values:e}){const t=(await z(this.sessions.vision_encoder,{pixel_values:e})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${t.dims[1]}).`),this.config.num_image_tokens=t.dims[1]),t}async encode_text({input_ids:e}){return(await z(this.sessions.embed_tokens,{input_ids:e})).inputs_embeds}}class Q{}class K extends Q{constructor({last_hidden_state:e,hidden_states:t=null,attentions:n=null}){super(),this.last_hidden_state=e,this.hidden_states=t,this.attentions=n}}class Y extends X{}class J extends Y{}class Z extends Y{async _call(e){return new Zl(await super._call(e))}}class ee extends Y{async _call(e){return new Kl(await super._call(e))}}class te extends Y{async _call(e){return new Jl(await super._call(e))}}class ne extends Y{async _call(e){return new ed(await super._call(e))}}class re extends X{}class se extends re{}class oe extends X{}class ie extends oe{}class ae extends oe{async _call(e){return new Zl(await super._call(e))}}class le extends oe{async _call(e){return new Kl(await super._call(e))}}class de extends oe{async _call(e){return new Jl(await super._call(e))}}class ue extends oe{async _call(e){return new ed(await super._call(e))}}class ce extends X{}class pe extends ce{}class he extends ce{async _call(e){return new Zl(await super._call(e))}}class me extends ce{async _call(e){return new Kl(await super._call(e))}}class fe extends ce{async _call(e){return new Jl(await super._call(e))}}class ge extends ce{async _call(e){return new ed(await super._call(e))}}class _e extends X{}class we extends _e{}class ye extends _e{async _call(e){return new Zl(await super._call(e))}}class be extends _e{async _call(e){return new Kl(await super._call(e))}}class ve extends _e{async _call(e){return new Jl(await super._call(e))}}class xe extends _e{async _call(e){return new ed(await super._call(e))}}class Me extends X{}class Te extends Me{}class ke extends Me{async _call(e){return new Zl(await super._call(e))}}class $e extends Me{async _call(e){return new Kl(await super._call(e))}}class Ce extends Me{async _call(e){return new Jl(await super._call(e))}}class Pe extends Me{async _call(e){return new ed(await super._call(e))}}class Se extends X{}class Ee extends Se{}class Fe extends Se{async _call(e){return new Zl(await super._call(e))}}class Ae extends Se{async _call(e){return new Kl(await super._call(e))}}class Ie extends Se{async _call(e){return new Jl(await super._call(e))}}class ze extends Se{async _call(e){return new ed(await super._call(e))}}class Le extends X{}class Oe extends Le{}class Be extends Le{async _call(e){return new Zl(await super._call(e))}}class De extends Le{async _call(e){return new Kl(await super._call(e))}}class Ne extends Le{async _call(e){return new Jl(await super._call(e))}}class Re extends Le{async _call(e){return new ed(await super._call(e))}}class je extends X{}class Ve extends je{}class Ge extends je{async _call(e){return new Kl(await super._call(e))}}class Ue extends je{async _call(e){return new Jl(await super._call(e))}}class qe extends je{async _call(e){return new ed(await super._call(e))}}class We extends je{async _call(e){return new Zl(await super._call(e))}}class He extends X{}class Xe extends He{}class Qe extends He{async _call(e){return new Zl(await super._call(e))}}class Ke extends He{async _call(e){return new Kl(await super._call(e))}}class Ye extends He{async _call(e){return new Jl(await super._call(e))}}class Je extends X{}class Ze extends Je{}class et extends Je{async _call(e){return new Zl(await super._call(e))}}class tt extends Je{async _call(e){return new Kl(await super._call(e))}}class nt extends Je{async _call(e){return new ed(await super._call(e))}}class rt extends X{}class st extends rt{}class ot extends rt{async _call(e){return new Zl(await super._call(e))}}class it extends rt{async _call(e){return new Kl(await super._call(e))}}class at extends rt{async _call(e){return new Jl(await super._call(e))}}class lt extends rt{async _call(e){return new ed(await super._call(e))}}class dt extends X{}class ut extends dt{}class ct extends dt{async _call(e){return new Zl(await super._call(e))}}class pt extends dt{async _call(e){return new Kl(await super._call(e))}}class ht extends dt{async _call(e){return new ed(await super._call(e))}}class mt extends X{}class ft extends mt{}class gt extends mt{async _call(e){return new Kl(await super._call(e))}}class _t extends mt{async _call(e){return new ed(await super._call(e))}}class wt extends mt{async _call(e){return new Zl(await super._call(e))}}class yt extends X{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class bt extends yt{}class vt extends yt{}class xt extends X{}class Mt extends xt{}class Tt extends xt{}class kt extends X{}class $t extends kt{}class Ct extends kt{}class Pt extends X{}class St extends Pt{}class Et extends Pt{}class Ft extends Pt{async _call(e){return new Kl(await super._call(e))}}class At extends X{}class It extends At{}class zt extends At{}class Lt extends At{async _call(e){return new Kl(await super._call(e))}}class Ot extends At{}class Bt extends X{}class Dt extends Bt{}class Nt extends Bt{}class Rt extends X{}class jt extends Rt{}class Vt extends Rt{}class Gt extends X{}class Ut extends Gt{}class qt extends Gt{async _call(e){return new Zl(await super._call(e))}}class Wt extends Gt{async _call(e){return new Kl(await super._call(e))}}class Ht extends Gt{async _call(e){return new Jl(await super._call(e))}}class Xt extends Gt{async _call(e){return new ed(await super._call(e))}}class Qt extends X{}class Kt extends Qt{}class Yt extends Qt{async _call(e){return new Zl(await super._call(e))}}class Jt extends Qt{async _call(e){return new Kl(await super._call(e))}}class Zt extends Qt{async _call(e){return new Jl(await super._call(e))}}class en extends Qt{async _call(e){return new ed(await super._call(e))}}class tn extends X{}class nn extends tn{}class rn extends tn{async _call(e){return new Zl(await super._call(e))}}class sn extends tn{async _call(e){return new Kl(await super._call(e))}}class on extends tn{async _call(e){return new Jl(await super._call(e))}}class an extends tn{async _call(e){return new ed(await super._call(e))}}class ln extends X{}class dn extends ln{}class un extends ln{}class cn extends X{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class pn extends cn{}class hn extends cn{_prepare_generation_config(e,t){return super._prepare_generation_config(e,t,w.WhisperGenerationConfig)}_retrieve_init_tokens(e){const t=[e.decoder_start_token_id];let n=e.language;const r=e.task;if(e.is_multilingual){n||(console.warn("No language specified - defaulting to English (en)."),n="en");const s=`<|${(0,y.whisper_language_to_code)(n)}|>`;t.push(e.lang_to_id[s]),t.push(e.task_to_id[r??"transcribe"])}else if(n||r)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!e.return_timestamps&&e.no_timestamps_token_id&&t.at(-1)!==e.no_timestamps_token_id?t.push(e.no_timestamps_token_id):e.return_timestamps&&t.at(-1)===e.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),t.pop()),t.filter((e=>null!=e))}async generate({inputs:e=null,generation_config:t=null,logits_processor:n=null,stopping_criteria:r=null,...s}){t=this._prepare_generation_config(t,s);const o=s.decoder_input_ids??this._retrieve_init_tokens(t);if(t.return_timestamps&&(n??=new u.LogitsProcessorList,n.push(new u.WhisperTimeStampLogitsProcessor(t,o))),t.begin_suppress_tokens&&(n??=new u.LogitsProcessorList,n.push(new u.SuppressTokensAtBeginLogitsProcessor(t.begin_suppress_tokens,o.length))),t.return_token_timestamps){if(!t.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");"translate"===t.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),t.output_attentions=!0,t.return_dict_in_generate=!0}const i=await super.generate({inputs:e,generation_config:t,logits_processor:n,decoder_input_ids:o,...s});return t.return_token_timestamps&&(i.token_timestamps=this._extract_token_timestamps(i,t.alignment_heads,t.num_frames)),i}_extract_token_timestamps(e,t,n=null,r=.02){if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");null==n&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let s=this.config.median_filter_width;void 0===s&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),s=7);const o=e.cross_attentions,i=Array.from({length:this.config.decoder_layers},((e,t)=>(0,p.cat)(o.map((e=>e[t])),2))),l=(0,p.stack)(t.map((([e,t])=>{if(e>=i.length)throw new Error(`Layer index ${e} is out of bounds for cross attentions (length ${i.length}).`);return n?i[e].slice(null,t,null,[0,n]):i[e].slice(null,t)}))).transpose(1,0,2,3),[d,u]=(0,p.std_mean)(l,-2,0,!0),c=l.clone();for(let e=0;e<c.dims[0];++e){const t=c[e];for(let n=0;n<t.dims[0];++n){const r=t[n],o=d[e][n][0].data,i=u[e][n][0].data;for(let e=0;e<r.dims[0];++e){let t=r[e].data;for(let e=0;e<t.length;++e)t[e]=(t[e]-i[e])/o[e];t.set((0,m.medianFilter)(t,s))}}}const h=[(0,p.mean)(c,1)],f=e.sequences.dims,g=new p.Tensor("float32",new Float32Array(f[0]*f[1]),f);for(let e=0;e<f[0];++e){const t=h[e].neg().squeeze_(0),[n,s]=(0,m.dynamic_time_warping)(t.tolist()),o=Array.from({length:n.length-1},((e,t)=>n[t+1]-n[t])),i=(0,a.mergeArrays)([1],o).map((e=>!!e)),l=[];for(let e=0;e<i.length;++e)i[e]&&l.push(s[e]*r);g[e].data.set(l,1)}return g}}class mn extends X{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class fn extends X{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class gn extends fn{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:n,attention_mask:r}){const s=this.config.image_token_index,o=n.tolist().map((e=>e.findIndex((e=>e==s)))),i=o.every((e=>-1===e)),a=o.every((e=>-1!==e));if(!i&&!a)throw new Error("Every input should contain either 0 or 1 image token.");if(i)return{inputs_embeds:e,attention_mask:r};const l=[],d=[];for(let n=0;n<o.length;++n){const s=o[n],i=e[n],a=t[n],u=r[n];l.push((0,p.cat)([i.slice([0,s]),a,i.slice([s+1,i.dims[0]])],0)),d.push((0,p.cat)([u.slice([0,s]),(0,p.ones)([a.dims[0]]),u.slice([s+1,u.dims[0]])],0))}return{inputs_embeds:(0,p.stack)(l,0),attention_mask:(0,p.stack)(d,0)}}}class _n extends gn{}class wn extends gn{}class yn extends X{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class bn extends yn{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:n,attention_mask:r}){return{inputs_embeds:(0,p.cat)([t,e],1),attention_mask:(0,p.cat)([(0,p.ones)(t.dims.slice(0,2)),r],1)}}async _prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:n,attention_mask:r}){if(!e&&!t)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let s,o;return e&&(s=await this.encode_text({input_ids:e})),t&&(o=await this.encode_image({pixel_values:t})),s&&o?({inputs_embeds:n,attention_mask:r}=this._merge_input_ids_with_image_features({inputs_embeds:s,image_features:o,input_ids:e,attention_mask:r})):n=s||o,{inputs_embeds:n,attention_mask:r}}async forward({input_ids:e,pixel_values:t,attention_mask:n,decoder_input_ids:r,decoder_attention_mask:s,encoder_outputs:o,past_key_values:i,inputs_embeds:a,decoder_inputs_embeds:l}){if(a||({inputs_embeds:a,attention_mask:n}=await this._prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:a,attention_mask:n})),!o){let{last_hidden_state:e}=await N(this,{inputs_embeds:a,attention_mask:n});o=e}if(!l){if(!r)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");l=await this.encode_text({input_ids:r})}const d={inputs_embeds:l,attention_mask:s,encoder_attention_mask:n,encoder_hidden_states:o,past_key_values:i};return await R(this,d,!0)}}class vn extends X{forward_params=["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"]}class xn extends vn{async encode_image({pixel_values:e,pixel_attention_mask:t}){return(await z(this.sessions.vision_encoder,{pixel_values:e,pixel_attention_mask:t})).image_features}_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return j({image_token_id:this.config.image_token_id,...e,image_features:n})}}class Mn extends X{}class Tn extends Mn{}class kn extends Mn{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}}class $n extends Mn{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}}class Cn extends Mn{static async from_pretrained(e,t={}){return t.model_file_name??="vision_model",super.from_pretrained(e,t)}}class Pn extends Mn{static async from_pretrained(e,t={}){return t.model_file_name??="vision_model",super.from_pretrained(e,t)}}class Sn extends X{}class En extends Sn{}class Fn extends Sn{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}}class An extends Mn{static async from_pretrained(e,t={}){return t.model_file_name??="vision_model",super.from_pretrained(e,t)}}class In extends X{}class zn extends In{}class Ln extends X{}class On extends Ln{async forward(e){const t=!e.input_ids,n=!e.pixel_values;if(t&&n)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(t&&(e.input_ids=(0,p.ones)([e.pixel_values.dims[0],1])),n){const{image_size:t}=this.config.vision_config;e.pixel_values=(0,p.full)([0,3,t,t],0)}const{text_embeddings:r,image_embeddings:s,l2norm_text_embeddings:o,l2norm_image_embeddings:i}=await super.forward(e),a={};return t||(a.text_embeddings=r,a.l2norm_text_embeddings=o),n||(a.image_embeddings=s,a.l2norm_image_embeddings=i),a}}class Bn extends Ln{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}}class Dn extends Ln{static async from_pretrained(e,t={}){return t.model_file_name??="vision_model",super.from_pretrained(e,t)}}class Nn extends X{}class Rn extends Nn{}class jn extends Nn{}class Vn extends X{}class Gn extends Vn{}class Un extends Vn{}class qn extends X{}class Wn extends qn{}class Hn extends qn{}class Xn extends X{}class Qn extends Xn{}class Kn extends Xn{}class Yn extends X{}class Jn extends Yn{}class Zn extends Yn{}class er extends X{}class tr extends er{}class nr extends er{}class rr extends X{}class sr extends rr{}class or extends rr{}class ir extends X{}class ar extends ir{}class lr extends ir{}class dr extends X{}class ur extends dr{}class cr extends dr{}class pr extends X{}class hr extends pr{}class mr extends pr{}class fr extends X{}class gr extends fr{}class _r extends fr{}class wr extends X{}class yr extends wr{}class br extends wr{}class vr extends X{}class xr extends vr{}class Mr extends vr{}class Tr extends X{}class kr extends Tr{}class $r extends Tr{}class Cr extends X{}class Pr extends Cr{}class Sr extends Cr{}class Er extends X{}class Fr extends Er{}class Ar extends Er{}class Ir extends X{}class zr extends Ir{}class Lr extends Ir{}class Or extends X{forward_params=["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"]}class Br extends Or{get_rope_index(e,t,n,r){const{vision_config:s,image_token_id:o,video_token_id:i,vision_start_token_id:a}=this.config,l=s.spatial_merge_size??2,d=[];if(t||n){let s=e.tolist();r||(r=(0,p.ones_like)(e));const u=r.tolist(),c=Array.from({length:3},(t=>Array.from({length:e.dims[0]},(t=>Array.from({length:e.dims[1]},(e=>1)))))),h=t?t.tolist():[],f=n?n.tolist():[];let g=0,_=0;for(let e=0;e<s.length;++e){const t=s[e].filter(((t,n)=>1==u[e][n])),n=t.reduce(((e,t,n)=>(t==a&&e.push(n),e)),[]).map((e=>t[e+1])),r=n.filter((e=>e==o)).length,p=n.filter((e=>e==i)).length;let w=[],y=0,b=r,v=p;for(let e=0;e<n.length;++e){const e=t.findIndex(((e,t)=>t>y&&e==o)),n=t.findIndex(((e,t)=>t>y&&e==i)),r=b>0&&-1!==e?e:t.length+1,s=v>0&&-1!==n?n:t.length+1;let a,d,u,c;r<s?([d,u,c]=h[g],++g,--b,a=r):([d,u,c]=f[_],++_,--v,a=s);const[p,x,M]=[Number(d),Math.floor(Number(u)/l),Math.floor(Number(c)/l)],T=a-y,k=w.length>0?(0,m.max)(w.at(-1))[0]+1:0;w.push(Array.from({length:3*T},((e,t)=>k+t%T)));const $=T+k,C=p*x*M,P=Array.from({length:C},((e,t)=>$+Math.floor(t/(x*M)))),S=Array.from({length:C},((e,t)=>$+Math.floor(t/M)%x)),E=Array.from({length:C},((e,t)=>$+t%M));w.push([P,S,E].flat()),y=a+C}if(y<t.length){const e=w.length>0?(0,m.max)(w.at(-1))[0]+1:0,n=t.length-y;w.push(Array.from({length:3*n},((t,r)=>e+r%n)))}const x=w.reduce(((e,t)=>e+t.length),0),M=new Array(x);let T=0;for(let e=0;e<3;++e)for(let t=0;t<w.length;++t){const n=w[t],r=n.length/3;for(let t=e*r;t<(e+1)*r;++t)M[T++]=n[t]}let k=0;const $=u[e];for(let t=0;t<$.length;++t)if(1==$[t]){for(let n=0;n<3;++n)c[n][e][t]=M[n*x/3+k];++k}const C=(0,m.max)(M)[0];d.push(C+1-s[e].length)}return[new p.Tensor("int64",c.flat(1/0),[3,e.dims[0],e.dims[1]]),new p.Tensor("int64",d,[d.length,1])]}if(r){const{data:e,dims:t}=G(r),n=BigInt64Array.from({length:3*e.length},((t,n)=>e[n%e.length])),s=Array.from({length:t[0]},((n,r)=>(0,m.max)(e.subarray(t[1]*r,t[1]*(r+1)))[0]+1+t[1]));return[new p.Tensor("int64",n,[3,...t]),new p.Tensor("int64",s,[s.length,1])]}{const[t,n]=e.dims,r=BigInt64Array.from({length:3*t*n},((e,r)=>BigInt(Math.floor(r%n/t))));return[new p.Tensor("int64",r,[3,...e.dims]),(0,p.zeros)([t,1])]}}async encode_image({pixel_values:e,image_grid_thw:t}){return(await z(this.sessions.vision_encoder,{pixel_values:e,grid_thw:t})).image_features}_merge_input_ids_with_image_features(e){return j({image_token_id:this.config.image_token_id,...e})}prepare_inputs_for_generation(e,t,n){if(t.attention_mask&&!t.position_ids)if(t.past_key_values){t.pixel_values=null;const e=BigInt(Object.values(t.past_key_values)[0].dims.at(-2)),n=t.rope_deltas.map((t=>e+t));t.position_ids=(0,p.stack)([n,n,n],0)}else[t.position_ids,t.rope_deltas]=this.get_rope_index(t.input_ids,t.image_grid_thw,t.video_grid_thw,t.attention_mask);return t}}class Dr extends X{}class Nr extends Dr{}class Rr extends Dr{}class jr extends X{}class Vr extends jr{}class Gr extends jr{}class Ur extends X{}class qr extends Ur{}class Wr extends Ur{}class Hr extends X{}class Xr extends Hr{}class Qr extends Hr{}class Kr extends X{}class Yr extends Kr{}class Jr extends Kr{}class Zr extends X{}class es extends Zr{}class ts extends Zr{async _call(e){return new Kl(await super._call(e))}}class ns extends X{}class rs extends ns{}class ss extends X{}class os extends ss{}class is extends ss{async _call(e){return new Kl(await super._call(e))}}class as extends X{}class ls extends as{}class ds extends X{}class us extends ds{}class cs extends ds{async _call(e){return new Kl(await super._call(e))}}class ps extends X{}class hs extends ps{}class ms extends X{}class fs extends ms{}class gs extends ms{async _call(e){return new Kl(await super._call(e))}}class _s extends X{}class ws extends _s{async _call(e){return new rd(await super._call(e))}}class ys extends X{}class bs extends ys{}class vs extends ys{async _call(e){return new Kl(await super._call(e))}}class xs extends X{}class Ms extends xs{}class Ts extends xs{async _call(e){return new Kl(await super._call(e))}}class ks extends X{}class $s extends ks{}class Cs extends ks{}class Ps extends X{}class Ss extends Ps{}class Es extends Ps{}class Fs extends X{}class As extends Fs{}class Is extends Fs{async _call(e){return new Kl(await super._call(e))}}class zs extends X{}class Ls extends zs{}class Os extends zs{async _call(e){return new Ds(await super._call(e))}}class Bs extends zs{async _call(e){return new Ns(await super._call(e))}}class Ds extends Q{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Ns extends Q{constructor({logits:e,pred_boxes:t,pred_masks:n}){super(),this.logits=e,this.pred_boxes=t,this.pred_masks=n}}class Rs extends X{}class js extends Rs{}class Vs extends Rs{async _call(e){return new Gs(await super._call(e))}}class Gs extends Q{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Us extends X{}class qs extends Us{}class Ws extends Us{async _call(e){return new Hs(await super._call(e))}}class Hs extends Ds{}class Xs extends X{}class Qs extends Xs{}class Ks extends Xs{async _call(e){return new Kl(await super._call(e))}}class Ys extends X{}class Js extends Ys{}class Zs extends Ys{async _call(e){return new Kl(await super._call(e))}}class eo extends X{}class to extends eo{}class no extends eo{async _call(e){return new Kl(await super._call(e))}}class ro extends X{}class so extends ro{}class oo extends ro{async _call(e){return new Kl(await super._call(e))}}class io extends X{}class ao extends io{}class lo extends io{}class uo extends X{}class co extends uo{}class po extends uo{}class ho extends X{}class mo extends ho{}class fo extends X{}class go extends fo{}class _o extends fo{}class wo extends fo{}class yo extends X{}class bo extends yo{}class vo extends X{}class xo extends vo{}class Mo extends vo{}class To extends X{}class ko extends To{}class $o extends To{}class Co extends X{}class Po extends Co{}class So extends X{}class Eo extends So{}class Fo extends So{async _call(e){return new Kl(await super._call(e))}}class Ao extends X{}class Io extends Ao{}class zo extends Ao{async _call(e){return new Kl(await super._call(e))}}class Lo extends X{}class Oo extends Lo{}class Bo extends Lo{async _call(e){return new Kl(await super._call(e))}}class Do extends X{}class No extends Do{}class Ro extends Do{async _call(e){return new jo(await super._call(e))}}class jo extends Q{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Vo extends X{}class Go extends Vo{async get_image_embeddings({pixel_values:e}){return await N(this,{pixel_values:e})}async forward(e){if(e.image_embeddings&&e.image_positional_embeddings||(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels&&e.input_points){const t=e.input_points.dims.slice(0,-1),n=t.reduce(((e,t)=>e*t),1);e.input_labels=new p.Tensor("int64",new BigInt64Array(n).fill(1n),t)}const t={image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings};return e.input_points&&(t.input_points=e.input_points),e.input_labels&&(t.input_labels=e.input_labels),e.input_boxes&&(t.input_boxes=e.input_boxes),await z(this.sessions.prompt_encoder_mask_decoder,t)}async _call(e){return new Uo(await super._call(e))}}class Uo extends Q{constructor({iou_scores:e,pred_masks:t}){super(),this.iou_scores=e,this.pred_masks=t}}class qo extends X{}class Wo extends qo{}class Ho extends qo{}class Xo extends X{}class Qo extends Xo{}class Ko extends Xo{}class Yo extends X{}class Jo extends Yo{}class Zo extends Yo{async _call(e){return new td(await super._call(e))}}class ei extends Yo{async _call(e){return new Kl(await super._call(e))}}class ti extends Yo{async _call(e){return new Jl(await super._call(e))}}class ni extends X{}class ri extends ni{}class si extends ni{async _call(e){return new Jl(await super._call(e))}}class oi extends X{}class ii extends oi{}class ai extends X{}class li extends ai{}class di extends ai{async _call(e){return new td(await super._call(e))}}class ui extends ai{async _call(e){return new Kl(await super._call(e))}}class ci extends X{}class pi extends ci{}class hi extends ci{async _call(e){return new td(await super._call(e))}}class mi extends ci{async _call(e){return new Kl(await super._call(e))}}class fi extends ci{async _call(e){return new Jl(await super._call(e))}}class gi extends X{}class _i extends gi{}class wi extends gi{async _call(e){return new td(await super._call(e))}}class yi extends gi{async _call(e){return new Kl(await super._call(e))}}class bi extends X{}class vi extends Yo{}class xi extends Yo{async _call(e){return new td(await super._call(e))}}class Mi extends Yo{async _call(e){return new Kl(await super._call(e))}}class Ti extends X{}class ki extends Ti{}class $i extends Ti{async _call(e){return new td(await super._call(e))}}class Ci extends Ti{async _call(e){return new Kl(await super._call(e))}}class Pi extends Ti{async _call(e){return new Yl(await super._call(e))}}class Si extends Ti{async _call(e){return new Jl(await super._call(e))}}class Ei extends X{}class Fi extends Ei{}class Ai extends Ei{}class Ii extends Ei{async generate_speech(e,t,{threshold:n=.5,minlenratio:r=0,maxlenratio:s=20,vocoder:o=null}={}){const i={input_ids:e},{encoder_outputs:a,encoder_attention_mask:l}=await N(this,i),d=a.dims[1]/this.config.reduction_factor,u=Math.floor(d*s),c=Math.floor(d*r),h=this.config.num_mel_bins;let m=[],f=null,g=null,_=0;for(;;){++_;const e=B(!!g);let r;r=g?g.output_sequence_out:new p.Tensor("float32",new Float32Array(h),[1,1,h]);let s={use_cache_branch:e,output_sequence:r,encoder_attention_mask:l,speaker_embeddings:t,encoder_hidden_states:a};this.addPastKeyValues(s,f),g=await z(this.sessions.decoder_model_merged,s),f=this.getPastKeyValues(g,f);const{prob:o,spectrum:i}=g;if(m.push(i),_>=c&&(Array.from(o.data).filter((e=>e>=n)).length>0||_>=u))break}const w=(0,p.cat)(m),{waveform:y}=await z(o.sessions.model,{spectrogram:w});return{spectrogram:w,waveform:y}}}class zi extends X{main_input_name="spectrogram"}class Li extends X{}class Oi extends Li{}class Bi extends X{}class Di extends Bi{}class Ni extends Bi{}class Ri extends X{}class ji extends Ri{}class Vi extends Ri{}class Gi extends X{}class Ui extends Gi{}class qi extends Gi{}class Wi extends X{}class Hi extends Wi{}class Xi extends Wi{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}}class Qi extends Wi{static async from_pretrained(e,t={}){return t.model_file_name??="audio_model",super.from_pretrained(e,t)}}class Ki extends X{}class Yi extends Ki{async _call(e){return new sd(await super._call(e))}}class Ji extends X{}class Zi extends Ji{}class ea extends Ji{}class ta extends Ji{}class na extends X{}class ra extends na{}class sa extends na{}class oa extends X{}class ia extends oa{}class aa extends oa{async _call(e){return new Kl(await super._call(e))}}class la extends X{}class da extends la{}class ua extends la{}class ca extends X{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(e){const[t,n]=e.dims,r=this.config.decoder.num_codebooks,s=n-r;let o=0;for(let t=0;t<e.size;++t){if(e.data[t]===this.config.decoder.pad_token_id)continue;const i=t%n-Math.floor(t/n)%r;i>0&&i<=s&&(e.data[o++]=e.data[t])}const i=Math.floor(t/r),a=o/(i*r);return new p.Tensor(e.type,e.data.slice(0,o),[i,r,a])}prepare_inputs_for_generation(e,t,n){let r=structuredClone(e);for(let e=0;e<r.length;++e)for(let t=0;t<r[e].length;++t)e%this.config.decoder.num_codebooks>=t&&(r[e][t]=BigInt(this.config.decoder.pad_token_id));null!==n.guidance_scale&&n.guidance_scale>1&&(r=r.concat(r));return super.prepare_inputs_for_generation(r,t,n)}async generate(e){const t=await super.generate(e),n=this._apply_and_filter_by_delay_pattern_mask(t).unsqueeze_(0),{audio_values:r}=await z(this.sessions.encodec_decode,{audio_codes:n});return r}}class pa extends X{}class ha extends pa{}class ma extends pa{async _call(e){return new Kl(await super._call(e))}}class fa extends X{}class ga extends fa{}class _a extends fa{async _call(e){return new Kl(await super._call(e))}}class wa extends X{}class ya extends wa{}class ba extends wa{async _call(e){return new Kl(await super._call(e))}}class va extends X{}class xa extends va{}class Ma extends va{async _call(e){return new Kl(await super._call(e))}}class Ta extends X{}class ka extends Ta{}class $a extends X{}class Ca extends $a{forward_params=["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"];constructor(...e){super(...e),this._generation_mode="text"}async forward(e){const t=this._generation_mode??"text";let n;if("text"!==t&&e.past_key_values){const t=this.sessions.gen_img_embeds,r=(0,a.pick)({image_ids:e.input_ids},t.inputNames);n=await z(t,r)}else{const t=this.sessions.prepare_inputs_embeds,r=(0,a.pick)(e,t.inputNames);n=await z(t,r)}const r={...e,...n},s=await R(this,r),o=this.sessions["text"===t?"lm_head":"gen_head"];if(!o)throw new Error(`Unable to find "${o}" generation head`);const i=await z(o,(0,a.pick)(s,o.inputNames));return{...n,...s,...i}}async generate(e){return this._generation_mode="text",super.generate(e)}async generate_images(e){this._generation_mode="image";const t=(e.inputs??e[this.main_input_name]).dims[1],n=(await super.generate(e)).slice(null,[t,null]),r=this.sessions.image_decode,{decoded_image:s}=await z(r,{generated_tokens:n}),o=s.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),i=[];for(const e of o){const t=h.RawImage.fromTensor(e);i.push(t)}return i}}class Pa extends Q{constructor({char_logits:e,bpe_logits:t,wp_logits:n}){super(),this.char_logits=e,this.bpe_logits=t,this.wp_logits=n}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class Sa extends X{}class Ea extends Sa{async _call(e){return new Pa(await super._call(e))}}class Fa extends X{}class Aa extends Fa{}class Ia extends Fa{}class za extends X{}class La extends za{}class Oa extends za{}class Ba{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:s=null,local_files_only:o=!1,revision:i="main",model_file_name:a=null,subfolder:l="onnx",device:d=null,dtype:u=null,use_external_data_format:c=null,session_options:p={}}={}){const h={progress_callback:t,config:n,cache_dir:s,local_files_only:o,revision:i,model_file_name:a,subfolder:l,device:d,dtype:u,use_external_data_format:c,session_options:p};if(h.config=await r.AutoConfig.from_pretrained(e,h),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(const t of this.MODEL_CLASS_MAPPINGS){const n=t.get(h.config.model_type);if(n)return await n[1].from_pretrained(e,h)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${h.config.model_type}", attempting to construct from base class.`),await X.from_pretrained(e,h);throw Error(`Unsupported model type: ${h.config.model_type}`)}}const Da=new Map([["bert",["BertModel",J]],["nomic_bert",["NomicBertModel",se]],["roformer",["RoFormerModel",ie]],["electra",["ElectraModel",we]],["esm",["EsmModel",Xe]],["convbert",["ConvBertModel",pe]],["camembert",["CamembertModel",Te]],["deberta",["DebertaModel",Ee]],["deberta-v2",["DebertaV2Model",Oe]],["mpnet",["MPNetModel",st]],["albert",["AlbertModel",ft]],["distilbert",["DistilBertModel",Ve]],["roberta",["RobertaModel",Ut]],["xlm",["XLMModel",Kt]],["xlm-roberta",["XLMRobertaModel",nn]],["clap",["ClapModel",Hi]],["clip",["CLIPModel",Tn]],["clipseg",["CLIPSegModel",Rn]],["chinese_clip",["ChineseCLIPModel",zn]],["siglip",["SiglipModel",En]],["jina_clip",["JinaCLIPModel",On]],["mobilebert",["MobileBertModel",Ze]],["squeezebert",["SqueezeBertModel",ut]],["wav2vec2",["Wav2Vec2Model",Jo]],["wav2vec2-bert",["Wav2Vec2BertModel",_i]],["unispeech",["UniSpeechModel",li]],["unispeech-sat",["UniSpeechSatModel",pi]],["hubert",["HubertModel",vi]],["wavlm",["WavLMModel",ki]],["audio-spectrogram-transformer",["ASTModel",dn]],["vits",["VitsModel",Yi]],["pyannote",["PyAnnoteModel",ri]],["wespeaker-resnet",["WeSpeakerResNetModel",ii]],["detr",["DetrModel",Ls]],["rt_detr",["RTDetrModel",js]],["table-transformer",["TableTransformerModel",qs]],["vit",["ViTModel",es]],["pvt",["PvtModel",os]],["vit_msn",["ViTMSNModel",us]],["vit_mae",["ViTMAEModel",ls]],["groupvit",["GroupViTModel",hs]],["fastvit",["FastViTModel",fs]],["mobilevit",["MobileViTModel",bs]],["mobilevitv2",["MobileViTV2Model",Ms]],["owlvit",["OwlViTModel",$s]],["owlv2",["Owlv2Model",Ss]],["beit",["BeitModel",As]],["deit",["DeiTModel",Qs]],["hiera",["HieraModel",Js]],["convnext",["ConvNextModel",Eo]],["convnextv2",["ConvNextV2Model",Io]],["dinov2",["Dinov2Model",Oo]],["resnet",["ResNetModel",to]],["swin",["SwinModel",so]],["swin2sr",["Swin2SRModel",ao]],["donut-swin",["DonutSwinModel",Po]],["yolos",["YolosModel",No]],["dpt",["DPTModel",co]],["glpn",["GLPNModel",ko]],["hifigan",["SpeechT5HifiGan",zi]],["efficientnet",["EfficientNetModel",ia]],["decision_transformer",["DecisionTransformerModel",ka]],["patchtst",["PatchTSTForPrediction",Aa]],["patchtsmixer",["PatchTSMixerForPrediction",La]],["mobilenet_v1",["MobileNetV1Model",ha]],["mobilenet_v2",["MobileNetV2Model",ga]],["mobilenet_v3",["MobileNetV3Model",ya]],["mobilenet_v4",["MobileNetV4Model",xa]],["maskformer",["MaskFormerModel",xo]],["mgp-str",["MgpstrForSceneTextRecognition",Ea]]]),Na=new Map([["t5",["T5Model",bt]],["longt5",["LongT5Model",Mt]],["mt5",["MT5Model",$t]],["bart",["BartModel",St]],["mbart",["MBartModel",It]],["marian",["MarianModel",Wo]],["whisper",["WhisperModel",pn]],["m2m_100",["M2M100Model",Qo]],["blenderbot",["BlenderbotModel",Dt]],["blenderbot-small",["BlenderbotSmallModel",jt]]]),Ra=new Map([["bloom",["BloomModel",qr]],["jais",["JAISModel",Wn]],["gpt2",["GPT2Model",Gn]],["gptj",["GPTJModel",tr]],["gpt_bigcode",["GPTBigCodeModel",sr]],["gpt_neo",["GPTNeoModel",Qn]],["gpt_neox",["GPTNeoXModel",Jn]],["codegen",["CodeGenModel",ar]],["llama",["LlamaModel",ur]],["olmo",["OlmoModel",gr]],["mobilellm",["MobileLLMModel",hr]],["granite",["GraniteModel",yr]],["cohere",["CohereModel",xr]],["gemma",["GemmaModel",kr]],["gemma2",["Gemma2Model",Pr]],["openelm",["OpenELMModel",Fr]],["qwen2",["Qwen2Model",zr]],["phi",["PhiModel",Nr]],["phi3",["Phi3Model",Vr]],["mpt",["MptModel",Xr]],["opt",["OPTModel",Yr]],["mistral",["MistralModel",Di]],["starcoder2",["Starcoder2Model",ji]],["falcon",["FalconModel",Ui]],["stablelm",["StableLmModel",ra]]]),ja=new Map([["speecht5",["SpeechT5ForSpeechToText",Ai]],["whisper",["WhisperForConditionalGeneration",hn]]]),Va=new Map([["speecht5",["SpeechT5ForTextToSpeech",Ii]]]),Ga=new Map([["vits",["VitsModel",Yi]],["musicgen",["MusicgenForConditionalGeneration",ca]]]),Ua=new Map([["bert",["BertForSequenceClassification",ee]],["roformer",["RoFormerForSequenceClassification",le]],["electra",["ElectraForSequenceClassification",be]],["esm",["EsmForSequenceClassification",Ke]],["convbert",["ConvBertForSequenceClassification",me]],["camembert",["CamembertForSequenceClassification",$e]],["deberta",["DebertaForSequenceClassification",Ae]],["deberta-v2",["DebertaV2ForSequenceClassification",De]],["mpnet",["MPNetForSequenceClassification",it]],["albert",["AlbertForSequenceClassification",gt]],["distilbert",["DistilBertForSequenceClassification",Ge]],["roberta",["RobertaForSequenceClassification",Wt]],["xlm",["XLMForSequenceClassification",Jt]],["xlm-roberta",["XLMRobertaForSequenceClassification",sn]],["bart",["BartForSequenceClassification",Ft]],["mbart",["MBartForSequenceClassification",Lt]],["mobilebert",["MobileBertForSequenceClassification",tt]],["squeezebert",["SqueezeBertForSequenceClassification",pt]]]),qa=new Map([["bert",["BertForTokenClassification",te]],["roformer",["RoFormerForTokenClassification",de]],["electra",["ElectraForTokenClassification",ve]],["esm",["EsmForTokenClassification",Ye]],["convbert",["ConvBertForTokenClassification",fe]],["camembert",["CamembertForTokenClassification",Ce]],["deberta",["DebertaForTokenClassification",Ie]],["deberta-v2",["DebertaV2ForTokenClassification",Ne]],["mpnet",["MPNetForTokenClassification",at]],["distilbert",["DistilBertForTokenClassification",Ue]],["roberta",["RobertaForTokenClassification",Ht]],["xlm",["XLMForTokenClassification",Zt]],["xlm-roberta",["XLMRobertaForTokenClassification",on]]]),Wa=new Map([["t5",["T5ForConditionalGeneration",vt]],["longt5",["LongT5ForConditionalGeneration",Tt]],["mt5",["MT5ForConditionalGeneration",Ct]],["bart",["BartForConditionalGeneration",Et]],["mbart",["MBartForConditionalGeneration",zt]],["marian",["MarianMTModel",Ho]],["m2m_100",["M2M100ForConditionalGeneration",Ko]],["blenderbot",["BlenderbotForConditionalGeneration",Nt]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Vt]]]),Ha=new Map([["bloom",["BloomForCausalLM",Wr]],["gpt2",["GPT2LMHeadModel",Un]],["jais",["JAISLMHeadModel",Hn]],["gptj",["GPTJForCausalLM",nr]],["gpt_bigcode",["GPTBigCodeForCausalLM",or]],["gpt_neo",["GPTNeoForCausalLM",Kn]],["gpt_neox",["GPTNeoXForCausalLM",Zn]],["codegen",["CodeGenForCausalLM",lr]],["llama",["LlamaForCausalLM",cr]],["olmo",["OlmoForCausalLM",_r]],["mobilellm",["MobileLLMForCausalLM",mr]],["granite",["GraniteForCausalLM",br]],["cohere",["CohereForCausalLM",Mr]],["gemma",["GemmaForCausalLM",$r]],["gemma2",["Gemma2ForCausalLM",Sr]],["openelm",["OpenELMForCausalLM",Ar]],["qwen2",["Qwen2ForCausalLM",Lr]],["phi",["PhiForCausalLM",Rr]],["phi3",["Phi3ForCausalLM",Gr]],["mpt",["MptForCausalLM",Qr]],["opt",["OPTForCausalLM",Jr]],["mbart",["MBartForCausalLM",Ot]],["mistral",["MistralForCausalLM",Ni]],["starcoder2",["Starcoder2ForCausalLM",Vi]],["falcon",["FalconForCausalLM",qi]],["trocr",["TrOCRForCausalLM",Oi]],["stablelm",["StableLmForCausalLM",sa]]]),Xa=new Map([["multi_modality",["MultiModalityCausalLM",Ca]]]),Qa=new Map([["bert",["BertForMaskedLM",Z]],["roformer",["RoFormerForMaskedLM",ae]],["electra",["ElectraForMaskedLM",ye]],["esm",["EsmForMaskedLM",Qe]],["convbert",["ConvBertForMaskedLM",he]],["camembert",["CamembertForMaskedLM",ke]],["deberta",["DebertaForMaskedLM",Fe]],["deberta-v2",["DebertaV2ForMaskedLM",Be]],["mpnet",["MPNetForMaskedLM",ot]],["albert",["AlbertForMaskedLM",wt]],["distilbert",["DistilBertForMaskedLM",We]],["roberta",["RobertaForMaskedLM",qt]],["xlm",["XLMWithLMHeadModel",Yt]],["xlm-roberta",["XLMRobertaForMaskedLM",rn]],["mobilebert",["MobileBertForMaskedLM",et]],["squeezebert",["SqueezeBertForMaskedLM",ct]]]),Ka=new Map([["bert",["BertForQuestionAnswering",ne]],["roformer",["RoFormerForQuestionAnswering",ue]],["electra",["ElectraForQuestionAnswering",xe]],["convbert",["ConvBertForQuestionAnswering",ge]],["camembert",["CamembertForQuestionAnswering",Pe]],["deberta",["DebertaForQuestionAnswering",ze]],["deberta-v2",["DebertaV2ForQuestionAnswering",Re]],["mpnet",["MPNetForQuestionAnswering",lt]],["albert",["AlbertForQuestionAnswering",_t]],["distilbert",["DistilBertForQuestionAnswering",qe]],["roberta",["RobertaForQuestionAnswering",Xt]],["xlm",["XLMForQuestionAnswering",en]],["xlm-roberta",["XLMRobertaForQuestionAnswering",an]],["mobilebert",["MobileBertForQuestionAnswering",nt]],["squeezebert",["SqueezeBertForQuestionAnswering",ht]]]),Ya=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",mn]],["idefics3",["Idefics3ForConditionalGeneration",xn]]]),Ja=new Map([["llava",["LlavaForConditionalGeneration",gn]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",_n]],["moondream1",["Moondream1ForConditionalGeneration",wn]],["florence2",["Florence2ForConditionalGeneration",bn]],["qwen2-vl",["Qwen2VLForConditionalGeneration",Br]],["idefics3",["Idefics3ForConditionalGeneration",xn]]]),Za=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",mn]]]),el=new Map([["vit",["ViTForImageClassification",ts]],["pvt",["PvtForImageClassification",is]],["vit_msn",["ViTMSNForImageClassification",cs]],["fastvit",["FastViTForImageClassification",gs]],["mobilevit",["MobileViTForImageClassification",vs]],["mobilevitv2",["MobileViTV2ForImageClassification",Ts]],["beit",["BeitForImageClassification",Is]],["deit",["DeiTForImageClassification",Ks]],["hiera",["HieraForImageClassification",Zs]],["convnext",["ConvNextForImageClassification",Fo]],["convnextv2",["ConvNextV2ForImageClassification",zo]],["dinov2",["Dinov2ForImageClassification",Bo]],["resnet",["ResNetForImageClassification",no]],["swin",["SwinForImageClassification",oo]],["segformer",["SegformerForImageClassification",ea]],["efficientnet",["EfficientNetForImageClassification",aa]],["mobilenet_v1",["MobileNetV1ForImageClassification",ma]],["mobilenet_v2",["MobileNetV2ForImageClassification",_a]],["mobilenet_v3",["MobileNetV3ForImageClassification",ba]],["mobilenet_v4",["MobileNetV4ForImageClassification",Ma]]]),tl=new Map([["detr",["DetrForObjectDetection",Os]],["rt_detr",["RTDetrForObjectDetection",Vs]],["table-transformer",["TableTransformerForObjectDetection",Ws]],["yolos",["YolosForObjectDetection",Ro]]]),nl=new Map([["owlvit",["OwlViTForObjectDetection",Cs]],["owlv2",["Owlv2ForObjectDetection",Es]]]),rl=new Map([["detr",["DetrForSegmentation",Bs]],["clipseg",["CLIPSegForImageSegmentation",jn]]]),sl=new Map([["segformer",["SegformerForSemanticSegmentation",ta]],["sapiens",["SapiensForSemanticSegmentation",go]]]),ol=new Map([["detr",["DetrForSegmentation",Bs]],["maskformer",["MaskFormerForInstanceSegmentation",Mo]]]),il=new Map([["sam",["SamModel",Go]]]),al=new Map([["wav2vec2",["Wav2Vec2ForCTC",Zo]],["wav2vec2-bert",["Wav2Vec2BertForCTC",wi]],["unispeech",["UniSpeechForCTC",di]],["unispeech-sat",["UniSpeechSatForCTC",hi]],["wavlm",["WavLMForCTC",$i]],["hubert",["HubertForCTC",xi]]]),ll=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",ei]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",yi]],["unispeech",["UniSpeechForSequenceClassification",ui]],["unispeech-sat",["UniSpeechSatForSequenceClassification",mi]],["wavlm",["WavLMForSequenceClassification",Ci]],["hubert",["HubertForSequenceClassification",Mi]],["audio-spectrogram-transformer",["ASTForAudioClassification",un]]]),dl=new Map([["wavlm",["WavLMForXVector",Pi]]]),ul=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",fi]],["wavlm",["WavLMForAudioFrameClassification",Si]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",ti]],["pyannote",["PyAnnoteForAudioFrameClassification",si]]]),cl=new Map([["vitmatte",["VitMatteForImageMatting",ws]]]),pl=new Map([["patchtst",["PatchTSTForPrediction",Ia]],["patchtsmixer",["PatchTSMixerForPrediction",Oa]]]),hl=new Map([["swin2sr",["Swin2SRForImageSuperResolution",lo]]]),ml=new Map([["dpt",["DPTForDepthEstimation",po]],["depth_anything",["DepthAnythingForDepthEstimation",mo]],["glpn",["GLPNForDepthEstimation",$o]],["sapiens",["SapiensForDepthEstimation",_o]],["depth_pro",["DepthProForDepthEstimation",bo]]]),fl=new Map([["sapiens",["SapiensForNormalEstimation",wo]]]),gl=new Map([["vitpose",["VitPoseForPoseEstimation",rs]]]),_l=new Map([["clip",["CLIPVisionModelWithProjection",Pn]],["siglip",["SiglipVisionModel",An]],["jina_clip",["JinaCLIPVisionModel",Dn]]]),wl=[[Da,b],[Na,v],[Ra,T],[Ua,b],[qa,b],[Wa,x],[ja,x],[Ha,T],[Xa,P],[Qa,b],[Ka,b],[Ya,M],[Ja,$],[el,b],[rl,b],[ol,b],[sl,b],[cl,b],[pl,b],[hl,b],[ml,b],[fl,b],[gl,b],[tl,b],[nl,b],[il,k],[al,b],[ll,b],[Va,x],[Ga,b],[dl,b],[ul,b],[_l,b]];for(const[e,t]of wl)for(const[n,r]of e.values())S.set(n,t),F.set(r,n),E.set(n,r);const yl=[["MusicgenForConditionalGeneration",ca,C],["CLIPTextModelWithProjection",$n,b],["SiglipTextModel",Fn,b],["JinaCLIPTextModel",Bn,b],["ClapTextModelWithProjection",Xi,b],["ClapAudioModelWithProjection",Qi,b]];for(const[e,t,n]of yl)S.set(e,n),F.set(t,e),E.set(e,t);class bl extends Ba{static MODEL_CLASS_MAPPINGS=wl.map((e=>e[0]));static BASE_IF_FAIL=!0}class vl extends Ba{static MODEL_CLASS_MAPPINGS=[Ua]}class xl extends Ba{static MODEL_CLASS_MAPPINGS=[qa]}class Ml extends Ba{static MODEL_CLASS_MAPPINGS=[Wa]}class Tl extends Ba{static MODEL_CLASS_MAPPINGS=[ja]}class kl extends Ba{static MODEL_CLASS_MAPPINGS=[Va]}class $l extends Ba{static MODEL_CLASS_MAPPINGS=[Ga]}class Cl extends Ba{static MODEL_CLASS_MAPPINGS=[Ha]}class Pl extends Ba{static MODEL_CLASS_MAPPINGS=[Qa]}class Sl extends Ba{static MODEL_CLASS_MAPPINGS=[Ka]}class El extends Ba{static MODEL_CLASS_MAPPINGS=[Ya]}class Fl extends Ba{static MODEL_CLASS_MAPPINGS=[el]}class Al extends Ba{static MODEL_CLASS_MAPPINGS=[rl]}class Il extends Ba{static MODEL_CLASS_MAPPINGS=[sl]}class zl extends Ba{static MODEL_CLASS_MAPPINGS=[ol]}class Ll extends Ba{static MODEL_CLASS_MAPPINGS=[tl]}class Ol extends Ba{static MODEL_CLASS_MAPPINGS=[nl]}class Bl extends Ba{static MODEL_CLASS_MAPPINGS=[il]}class Dl extends Ba{static MODEL_CLASS_MAPPINGS=[al]}class Nl extends Ba{static MODEL_CLASS_MAPPINGS=[ll]}class Rl extends Ba{static MODEL_CLASS_MAPPINGS=[dl]}class jl extends Ba{static MODEL_CLASS_MAPPINGS=[ul]}class Vl extends Ba{static MODEL_CLASS_MAPPINGS=[Za]}class Gl extends Ba{static MODEL_CLASS_MAPPINGS=[cl]}class Ul extends Ba{static MODEL_CLASS_MAPPINGS=[hl]}class ql extends Ba{static MODEL_CLASS_MAPPINGS=[ml]}class Wl extends Ba{static MODEL_CLASS_MAPPINGS=[fl]}class Hl extends Ba{static MODEL_CLASS_MAPPINGS=[gl]}class Xl extends Ba{static MODEL_CLASS_MAPPINGS=[_l]}class Ql extends Q{constructor({logits:e,past_key_values:t,encoder_outputs:n,decoder_attentions:r=null,cross_attentions:s=null}){super(),this.logits=e,this.past_key_values=t,this.encoder_outputs=n,this.decoder_attentions=r,this.cross_attentions=s}}class Kl extends Q{constructor({logits:e}){super(),this.logits=e}}class Yl extends Q{constructor({logits:e,embeddings:t}){super(),this.logits=e,this.embeddings=t}}class Jl extends Q{constructor({logits:e}){super(),this.logits=e}}class Zl extends Q{constructor({logits:e}){super(),this.logits=e}}class ed extends Q{constructor({start_logits:e,end_logits:t}){super(),this.start_logits=e,this.end_logits=t}}class td extends Q{constructor({logits:e}){super(),this.logits=e}}class nd extends Q{constructor({logits:e,past_key_values:t}){super(),this.logits=e,this.past_key_values=t}}class rd extends Q{constructor({alphas:e}){super(),this.alphas=e}}class sd extends Q{constructor({waveform:e,spectrogram:t}){super(),this.waveform=e,this.spectrogram=t}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":
  /*!******************************************************************************************************!*\
    !*** ./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js ***!
    \******************************************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{ASTFeatureExtractor:()=>o});var r=n(/*! ../../base/feature_extraction_utils.js */"./src/base/feature_extraction_utils.js"),s=(n(/*! ../../utils/tensor.js */"./src/utils/tensor.js"),n(/*! ../../utils/audio.js */"./src/utils/audio.js"));class o extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,s.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<n.length;++e)n[e].push(0);this.mel_filters=n,this.window=(0,s.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(e,t){return(0,s.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e){(0,r.validate_audio_inputs)(e,"ASTFeatureExtractor");const t=await this._extract_fbank_features(e,this.config.max_length);if(this.config.do_normalize){const e=2*this.std,n=t.data;for(let t=0;t<n.length;++t)n[t]=(n[t]-this.mean)/e}return{input_values:t.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":
  /*!****************************************************!*\
    !*** ./src/models/auto/feature_extraction_auto.js ***!
    \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{AutoFeatureExtractor:()=>i});var r=n(/*! ../../utils/constants.js */"./src/utils/constants.js"),s=n(/*! ../../utils/hub.js */"./src/utils/hub.js"),o=(n(/*! ../../base/feature_extraction_utils.js */"./src/base/feature_extraction_utils.js"),n(/*! ../feature_extractors.js */"./src/models/feature_extractors.js"));class i{static async from_pretrained(e,t={}){const n=await(0,s.getModelJSON)(e,r.FEATURE_EXTRACTOR_NAME,!0,t),i=n.feature_extractor_type,a=o[i];if(!a)throw new Error(`Unknown feature_extractor_type: '${i}'. Please report this at ${r.GITHUB_ISSUE_URL}.`);return new a(n)}}},"./src/models/auto/image_processing_auto.js":
  /*!**************************************************!*\
    !*** ./src/models/auto/image_processing_auto.js ***!
    \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{AutoImageProcessor:()=>a});var r=n(/*! ../../utils/constants.js */"./src/utils/constants.js"),s=n(/*! ../../utils/hub.js */"./src/utils/hub.js"),o=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js"),i=n(/*! ../image_processors.js */"./src/models/image_processors.js");class a{static async from_pretrained(e,t={}){const n=await(0,s.getModelJSON)(e,r.IMAGE_PROCESSOR_NAME,!0,t),a=n.image_processor_type??n.feature_extractor_type;let l=i[a];return l||(void 0!==a&&console.warn(`Image processor type '${a}' not found, assuming base ImageProcessor. Please report this at ${r.GITHUB_ISSUE_URL}.`),l=o.ImageProcessor),new l(n)}}},"./src/models/auto/processing_auto.js":
  /*!********************************************!*\
    !*** ./src/models/auto/processing_auto.js ***!
    \********************************************/(e,t,n)=>{n.r(t),n.d(t,{AutoProcessor:()=>d});var r=n(/*! ../../utils/constants.js */"./src/utils/constants.js"),s=n(/*! ../../utils/hub.js */"./src/utils/hub.js"),o=n(/*! ../../base/processing_utils.js */"./src/base/processing_utils.js"),i=n(/*! ../processors.js */"./src/models/processors.js"),a=n(/*! ../image_processors.js */"./src/models/image_processors.js"),l=n(/*! ../feature_extractors.js */"./src/models/feature_extractors.js");class d{static async from_pretrained(e,t={}){const n=await(0,s.getModelJSON)(e,r.IMAGE_PROCESSOR_NAME,!0,t),{image_processor_type:d,feature_extractor_type:u,processor_class:c}=n;if(c&&i[c])return i[c].from_pretrained(e,t);if(!d&&!u)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const p={};if(d){const e=a[d];if(!e)throw new Error(`Unknown image_processor_type: '${d}'.`);p.image_processor=new e(n)}if(u){const e=a[u];if(e)p.image_processor=new e(n);else{const e=l[u];if(!e)throw new Error(`Unknown feature_extractor_type: '${u}'.`);p.feature_extractor=new e(n)}}return new o.Processor({},p)}}},"./src/models/beit/image_processing_beit.js":
  /*!**************************************************!*\
    !*** ./src/models/beit/image_processing_beit.js ***!
    \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{BeitFeatureExtractor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":
  /*!************************************************!*\
    !*** ./src/models/bit/image_processing_bit.js ***!
    \************************************************/(e,t,n)=>{n.r(t),n.d(t,{BitImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":
  /*!******************************************************************!*\
    !*** ./src/models/chinese_clip/image_processing_chinese_clip.js ***!
    \******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{ChineseCLIPFeatureExtractor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":
  /*!****************************************************!*\
    !*** ./src/models/clap/feature_extraction_clap.js ***!
    \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{ClapFeatureExtractor:()=>o});var r=n(/*! ../../base/feature_extraction_utils.js */"./src/base/feature_extraction_utils.js"),s=(n(/*! ../../utils/tensor.js */"./src/utils/tensor.js"),n(/*! ../../utils/audio.js */"./src/utils/audio.js"));class o extends r.FeatureExtractor{constructor(e){super(e),this.mel_filters=(0,s.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,s.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,s.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(e,t,n,r){let s,o=!1;const i=e.length-t;if(i>0){if("rand_trunc"!==n)throw new Error(`Truncation strategy "${n}" not implemented`);{o=!0;const n=Math.floor(Math.random()*(i+1));e=e.subarray(n,n+t),s=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}}else{if(i<0){let n=new Float64Array(t);if(n.set(e),"repeat"===r)for(let r=e.length;r<t;r+=e.length)n.set(e.subarray(0,Math.min(e.length,t-r)),r);else if("repeatpad"===r)for(let t=e.length;t<-i;t+=e.length)n.set(e,t);e=n}if("fusion"===n)throw new Error(`Truncation strategy "${n}" not implemented`);s=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}return s.unsqueeze_(0)}async _extract_fbank_features(e,t,n=null){return(0,s.spectrogram)(e,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:t,log_mel:"dB",max_num_frames:n,do_pad:!1,transpose:!0})}async _call(e,{max_length:t=null}={}){(0,r.validate_audio_inputs)(e,"ClapFeatureExtractor");return{input_features:(await this._get_input_mel(e,t??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":
  /*!**************************************************!*\
    !*** ./src/models/clip/image_processing_clip.js ***!
    \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{CLIPFeatureExtractor:()=>o,CLIPImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/convnext/image_processing_convnext.js":
  /*!**********************************************************!*\
    !*** ./src/models/convnext/image_processing_convnext.js ***!
    \**********************************************************/(e,t,n)=>{n.r(t),n.d(t,{ConvNextFeatureExtractor:()=>o,ConvNextImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){super(e),this.crop_pct=this.config.crop_pct??.875}async resize(e){const t=this.size?.shortest_edge;if(void 0===t)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(t<384){const n=Math.floor(t/this.crop_pct),[r,s]=this.get_resize_output_image_size(e,{shortest_edge:n});e=await e.resize(r,s,{resample:this.resample}),e=await e.center_crop(t,t)}else e=await e.resize(t,t,{resample:this.resample});return e}}class o extends s{}},"./src/models/deit/image_processing_deit.js":
  /*!**************************************************!*\
    !*** ./src/models/deit/image_processing_deit.js ***!
    \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{DeiTFeatureExtractor:()=>o,DeiTImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/detr/image_processing_detr.js":
  /*!**************************************************!*\
    !*** ./src/models/detr/image_processing_detr.js ***!
    \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{DetrFeatureExtractor:()=>i,DetrImageProcessor:()=>o});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js"),s=n(/*! ../../utils/tensor.js */"./src/utils/tensor.js");class o extends r.ImageProcessor{async _call(e){const t=await super._call(e),n=[t.pixel_values.dims[0],64,64],r=(0,s.full)(n,1n);return{...t,pixel_mask:r}}post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}post_process_panoptic_segmentation(...e){return(0,r.post_process_panoptic_segmentation)(...e)}post_process_instance_segmentation(...e){return(0,r.post_process_instance_segmentation)(...e)}}class i extends o{}},"./src/models/donut/image_processing_donut.js":
  /*!****************************************************!*\
    !*** ./src/models/donut/image_processing_donut.js ***!
    \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{DonutFeatureExtractor:()=>o,DonutImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{pad_image(e,t,n,r={}){const[s,o,i]=t;let a=this.image_mean;Array.isArray(this.image_mean)||(a=new Array(i).fill(a));let l=this.image_std;Array.isArray(l)||(l=new Array(i).fill(a));const d=a.map(((e,t)=>-e/l[t]));return super.pad_image(e,t,n,{center:!0,constant_values:d,...r})}}class o extends s{}},"./src/models/dpt/image_processing_dpt.js":
  /*!************************************************!*\
    !*** ./src/models/dpt/image_processing_dpt.js ***!
    \************************************************/(e,t,n)=>{n.r(t),n.d(t,{DPTFeatureExtractor:()=>o,DPTImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/efficientnet/image_processing_efficientnet.js":
  /*!******************************************************************!*\
    !*** ./src/models/efficientnet/image_processing_efficientnet.js ***!
    \******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{EfficientNetImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){super(e),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map((e=>e*e)))}}},"./src/models/feature_extractors.js":
  /*!******************************************!*\
    !*** ./src/models/feature_extractors.js ***!
    \******************************************/(e,t,n)=>{n.r(t),n.d(t,{ASTFeatureExtractor:()=>r.ASTFeatureExtractor,ClapFeatureExtractor:()=>s.ClapFeatureExtractor,ImageFeatureExtractor:()=>c.ImageProcessor,PyAnnoteFeatureExtractor:()=>o.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>i.SeamlessM4TFeatureExtractor,SpeechT5FeatureExtractor:()=>a.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>l.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>d.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>u.WhisperFeatureExtractor});var r=n(/*! ./audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js */"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),s=n(/*! ./clap/feature_extraction_clap.js */"./src/models/clap/feature_extraction_clap.js"),o=n(/*! ./pyannote/feature_extraction_pyannote.js */"./src/models/pyannote/feature_extraction_pyannote.js"),i=n(/*! ./seamless_m4t/feature_extraction_seamless_m4t.js */"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),a=n(/*! ./speecht5/feature_extraction_speecht5.js */"./src/models/speecht5/feature_extraction_speecht5.js"),l=n(/*! ./wav2vec2/feature_extraction_wav2vec2.js */"./src/models/wav2vec2/feature_extraction_wav2vec2.js"),d=n(/*! ./wespeaker/feature_extraction_wespeaker.js */"./src/models/wespeaker/feature_extraction_wespeaker.js"),u=n(/*! ./whisper/feature_extraction_whisper.js */"./src/models/whisper/feature_extraction_whisper.js"),c=n(/*! ../base/image_processors_utils.js */"./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":
  /*!******************************************************!*\
    !*** ./src/models/florence2/processing_florence2.js ***!
    \******************************************************/(e,t,n)=>{n.r(t),n.d(t,{Florence2Processor:()=>i});var r=n(/*! ../../base/processing_utils.js */"./src/base/processing_utils.js"),s=n(/*! ../auto/image_processing_auto.js */"./src/models/auto/image_processing_auto.js"),o=n(/*! ../../tokenizers.js */"./src/tokenizers.js");class i extends r.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;constructor(e,t){super(e,t);const{tasks_answer_post_processing_type:n,task_prompts_without_inputs:r,task_prompts_with_input:s}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(n??{})),this.task_prompts_without_inputs=new Map(Object.entries(r??{})),this.task_prompts_with_input=new Map(Object.entries(s??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(e){"string"==typeof e&&(e=[e]);const t=[];for(const n of e)if(this.task_prompts_without_inputs.has(n))t.push(this.task_prompts_without_inputs.get(n));else{for(const[e,r]of this.task_prompts_with_input)if(n.includes(e)){t.push(r.replaceAll("{input}",n).replaceAll(e,""));break}t.length!==e.length&&t.push(n)}return t}post_process_generation(e,t,n){const r=this.tasks_answer_post_processing_type.get(t)??"pure_text";let s;switch(e=e.replaceAll("<s>","").replaceAll("</s>",""),r){case"pure_text":s=e;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const o="ocr"===r?"quad_boxes":"bboxes",i=e.matchAll(this.regexes[o]),a=[],l=[];for(const[e,t,...r]of i)a.push(t?t.trim():a.at(-1)??""),l.push(r.map(((e,t)=>(Number(e)+.5)/this.size_per_bin*n[t%2])));s={labels:a,[o]:l};break;default:throw new Error(`Task "${t}" (of type "${r}") not yet implemented.`)}return{[t]:s}}async _call(e,t=null,n={}){if(!e&&!t)throw new Error("Either text or images must be provided");return{...await this.image_processor(e,n),...t?this.tokenizer(t,n):{}}}}},"./src/models/glpn/image_processing_glpn.js":
  /*!**************************************************!*\
    !*** ./src/models/glpn/image_processing_glpn.js ***!
    \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{GLPNFeatureExtractor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/idefics3/image_processing_idefics3.js":
  /*!**********************************************************!*\
    !*** ./src/models/idefics3/image_processing_idefics3.js ***!
    \**********************************************************/(e,t,n)=>{n.r(t),n.d(t,{Idefics3ImageProcessor:()=>o});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js"),s=n(/*! ../../utils/tensor.js */"./src/utils/tensor.js");class o extends r.ImageProcessor{constructor(e){super(e),this.do_image_splitting=e.do_image_splitting??!0,this.max_image_size=e.max_image_size}get_resize_for_vision_encoder(e,t){let[n,r]=e.dims.slice(-2);const s=r/n;return r>=n?(r=Math.ceil(r/t)*t,n=Math.floor(r/s),n=Math.ceil(n/t)*t):(n=Math.ceil(n/t)*t,r=Math.floor(n*s),r=Math.ceil(r/t)*t),{height:n,width:r}}async _call(e,{do_image_splitting:t=null,return_row_col_info:n=!1}={}){let r;if(Array.isArray(e)){if(0===e.length||!e[0])throw new Error("No images provided.");r=Array.isArray(e[0])?e:[e]}else r=[[e]];let o=[],i=[],a=[];const l=[],d=[];for(const e of r){let n=await Promise.all(e.map((e=>this.preprocess(e))));l.push(...n.map((e=>e.original_size))),d.push(...n.map((e=>e.reshaped_input_size))),n.forEach((e=>e.pixel_values.unsqueeze_(0)));const{longest_edge:r}=this.max_image_size;let u;if(t??this.do_image_splitting){let e=new Array(n.length),t=new Array(n.length);u=await Promise.all(n.map((async(n,o)=>{const i=this.get_resize_for_vision_encoder(n.pixel_values,r),a=await(0,s.interpolate_4d)(n.pixel_values,{size:[i.height,i.width]}),{frames:l,num_splits_h:d,num_splits_w:u}=await this.split_image(a,this.max_image_size);return e[o]=d,t[o]=u,(0,s.cat)(l,0)}))),i.push(e),a.push(t)}else{const e=[r,r];u=await Promise.all(n.map((t=>(0,s.interpolate_4d)(t.pixel_values,{size:e})))),i.push(new Array(n.length).fill(0)),a.push(new Array(n.length).fill(0))}o.push((0,s.cat)(u,0))}const u=o.length,[c,p,h,m]=o[0].dims;let f,g;if(1===u)f=o[0].unsqueeze_(0),g=(0,s.full)([u,c,h,m],!0);else{const e=Math.max(...o.map((e=>e.dims.at(0))));g=(0,s.full)([u,e,h,m],!0);const t=g.data,n=e*h*m;for(let r=0;r<u;++r){const i=o[r].dims[0];if(i<e){o[r]=(0,s.cat)([o[r],(0,s.full)([e-i,p,h,m],0)],0);const a=r*n+i*h*m,l=(r+1)*n;t.fill(!1,a,l)}}f=(0,s.stack)(o,0)}return{pixel_values:f,pixel_attention_mask:g,original_sizes:l,reshaped_input_sizes:d,...n?{rows:i,cols:a}:{}}}async split_image(e,{longest_edge:t}){const n=t,r=t,o=[],[i,a]=e.dims.slice(-2);let l=0,d=0;if(i>n||a>r){l=Math.ceil(i/n),d=Math.ceil(a/r);const t=Math.ceil(i/l),u=Math.ceil(a/d);for(let n=0;n<l;n++)for(let r=0;r<d;r++){const s=r*u,l=n*t,d=Math.min(s+u,a),c=Math.min(l+t,i);o.push(e.slice(null,null,[l,c],[s,d]))}const c=n,p=r;i===c&&a===p||(e=await(0,s.interpolate_4d)(e,{size:[c,p]}))}return o.push(e),{frames:o,num_splits_h:l,num_splits_w:d}}}},"./src/models/idefics3/processing_idefics3.js":
  /*!****************************************************!*\
    !*** ./src/models/idefics3/processing_idefics3.js ***!
    \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{Idefics3Processor:()=>l});var r=n(/*! ../../base/processing_utils.js */"./src/base/processing_utils.js"),s=n(/*! ../auto/image_processing_auto.js */"./src/models/auto/image_processing_auto.js"),o=n(/*! ../../tokenizers.js */"./src/tokenizers.js"),i=(n(/*! ../../utils/image.js */"./src/utils/image.js"),n(/*! ../../utils/core.js */"./src/utils/core.js"));function a(e,t,n,r,s,o){return 0===e&&0===t?function(e,t,n,r){return`${t}${r}`+n.repeat(e)+`${t}`}(n,r,s,o):function(e,t,n,r,s,o){let i="";for(let o=0;o<t;++o){for(let t=0;t<n;++t)i+=r+`<row_${o+1}_col_${t+1}>`+s.repeat(e);i+="\n"}return i+=`\n${r}${o}`+s.repeat(e)+`${r}`,i}(n,e,t,r,s,o)}class l extends r.Processor{static image_processor_class=s.AutoImageProcessor;static tokenizer_class=o.AutoTokenizer;static uses_processor_config=!0;fake_image_token="<fake_token_around_image>";image_token="<image>";global_img_token="<global-img>";async _call(e,t=null,n={}){let r;n.return_row_col_info??=!0,t&&(r=await this.image_processor(t,n)),Array.isArray(e)||(e=[e]);const s=r.rows??[new Array(e.length).fill(0)],o=r.cols??[new Array(e.length).fill(0)],l=this.config.image_seq_len,d=[],u=[];for(let t=0;t<e.length;++t){const n=e[t],r=s[t],c=o[t];d.push((0,i.count)(n,this.image_token));const p=r.map(((e,t)=>a(e,c[t],l,this.fake_image_token,this.image_token,this.global_img_token))),h=n.split(this.image_token);if(0===h.length)throw new Error("The image token should be present in the text.");let m=h[0];for(let e=0;e<p.length;++e)m+=p[e]+h[e+1];u.push(m)}return{...this.tokenizer(u),...r}}}},"./src/models/image_processors.js":
  /*!****************************************!*\
    !*** ./src/models/image_processors.js ***!
    \****************************************/(e,t,n)=>{n.r(t),n.d(t,{BeitFeatureExtractor:()=>r.BeitFeatureExtractor,BitImageProcessor:()=>s.BitImageProcessor,CLIPFeatureExtractor:()=>i.CLIPFeatureExtractor,CLIPImageProcessor:()=>i.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>o.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>a.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>a.ConvNextImageProcessor,DPTFeatureExtractor:()=>c.DPTFeatureExtractor,DPTImageProcessor:()=>c.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>d.DetrFeatureExtractor,DetrImageProcessor:()=>d.DetrImageProcessor,DonutFeatureExtractor:()=>u.DonutFeatureExtractor,DonutImageProcessor:()=>u.DonutImageProcessor,EfficientNetImageProcessor:()=>p.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>h.GLPNFeatureExtractor,Idefics3ImageProcessor:()=>m.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>g.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>_.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>w.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>y.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>y.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>b.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>b.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>v.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>v.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>x.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>x.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>M.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>M.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>T.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>T.MobileViTImageProcessor,NougatImageProcessor:()=>k.NougatImageProcessor,OwlViTFeatureExtractor:()=>C.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>C.OwlViTImageProcessor,Owlv2ImageProcessor:()=>$.Owlv2ImageProcessor,PvtImageProcessor:()=>P.PvtImageProcessor,Qwen2VLImageProcessor:()=>S.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>E.RTDetrImageProcessor,SamImageProcessor:()=>F.SamImageProcessor,SegformerFeatureExtractor:()=>A.SegformerFeatureExtractor,SegformerImageProcessor:()=>A.SegformerImageProcessor,SiglipImageProcessor:()=>I.SiglipImageProcessor,Swin2SRImageProcessor:()=>z.Swin2SRImageProcessor,VLMImageProcessor:()=>f.VLMImageProcessor,ViTFeatureExtractor:()=>L.ViTFeatureExtractor,ViTImageProcessor:()=>L.ViTImageProcessor,VitMatteImageProcessor:()=>O.VitMatteImageProcessor,VitPoseImageProcessor:()=>B.VitPoseImageProcessor,YolosFeatureExtractor:()=>D.YolosFeatureExtractor,YolosImageProcessor:()=>D.YolosImageProcessor});var r=n(/*! ./beit/image_processing_beit.js */"./src/models/beit/image_processing_beit.js"),s=n(/*! ./bit/image_processing_bit.js */"./src/models/bit/image_processing_bit.js"),o=n(/*! ./chinese_clip/image_processing_chinese_clip.js */"./src/models/chinese_clip/image_processing_chinese_clip.js"),i=n(/*! ./clip/image_processing_clip.js */"./src/models/clip/image_processing_clip.js"),a=n(/*! ./convnext/image_processing_convnext.js */"./src/models/convnext/image_processing_convnext.js"),l=n(/*! ./deit/image_processing_deit.js */"./src/models/deit/image_processing_deit.js"),d=n(/*! ./detr/image_processing_detr.js */"./src/models/detr/image_processing_detr.js"),u=n(/*! ./donut/image_processing_donut.js */"./src/models/donut/image_processing_donut.js"),c=n(/*! ./dpt/image_processing_dpt.js */"./src/models/dpt/image_processing_dpt.js"),p=n(/*! ./efficientnet/image_processing_efficientnet.js */"./src/models/efficientnet/image_processing_efficientnet.js"),h=n(/*! ./glpn/image_processing_glpn.js */"./src/models/glpn/image_processing_glpn.js"),m=n(/*! ./idefics3/image_processing_idefics3.js */"./src/models/idefics3/image_processing_idefics3.js"),f=n(/*! ./janus/image_processing_janus.js */"./src/models/janus/image_processing_janus.js"),g=n(/*! ./jina_clip/image_processing_jina_clip.js */"./src/models/jina_clip/image_processing_jina_clip.js"),_=n(/*! ./llava_onevision/image_processing_llava_onevision.js */"./src/models/llava_onevision/image_processing_llava_onevision.js"),w=n(/*! ./mask2former/image_processing_mask2former.js */"./src/models/mask2former/image_processing_mask2former.js"),y=n(/*! ./maskformer/image_processing_maskformer.js */"./src/models/maskformer/image_processing_maskformer.js"),b=n(/*! ./mobilenet_v1/image_processing_mobilenet_v1.js */"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),v=n(/*! ./mobilenet_v2/image_processing_mobilenet_v2.js */"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),x=n(/*! ./mobilenet_v3/image_processing_mobilenet_v3.js */"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),M=n(/*! ./mobilenet_v4/image_processing_mobilenet_v4.js */"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),T=n(/*! ./mobilevit/image_processing_mobilevit.js */"./src/models/mobilevit/image_processing_mobilevit.js"),k=n(/*! ./nougat/image_processing_nougat.js */"./src/models/nougat/image_processing_nougat.js"),$=n(/*! ./owlv2/image_processing_owlv2.js */"./src/models/owlv2/image_processing_owlv2.js"),C=n(/*! ./owlvit/image_processing_owlvit.js */"./src/models/owlvit/image_processing_owlvit.js"),P=n(/*! ./pvt/image_processing_pvt.js */"./src/models/pvt/image_processing_pvt.js"),S=n(/*! ./qwen2_vl/image_processing_qwen2_vl.js */"./src/models/qwen2_vl/image_processing_qwen2_vl.js"),E=n(/*! ./rt_detr/image_processing_rt_detr.js */"./src/models/rt_detr/image_processing_rt_detr.js"),F=n(/*! ./sam/image_processing_sam.js */"./src/models/sam/image_processing_sam.js"),A=n(/*! ./segformer/image_processing_segformer.js */"./src/models/segformer/image_processing_segformer.js"),I=n(/*! ./siglip/image_processing_siglip.js */"./src/models/siglip/image_processing_siglip.js"),z=n(/*! ./swin2sr/image_processing_swin2sr.js */"./src/models/swin2sr/image_processing_swin2sr.js"),L=n(/*! ./vit/image_processing_vit.js */"./src/models/vit/image_processing_vit.js"),O=n(/*! ./vitmatte/image_processing_vitmatte.js */"./src/models/vitmatte/image_processing_vitmatte.js"),B=n(/*! ./vitpose/image_processing_vitpose.js */"./src/models/vitpose/image_processing_vitpose.js"),D=n(/*! ./yolos/image_processing_yolos.js */"./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":
  /*!****************************************************!*\
    !*** ./src/models/janus/image_processing_janus.js ***!
    \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{VLMImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){super({do_pad:!0,pad_size:{width:e.image_size,height:e.image_size},...e}),this.constant_values=this.config.background_color.map((e=>e*this.rescale_factor))}pad_image(e,t,n,r){return super.pad_image(e,t,n,{constant_values:this.constant_values,center:!0,...r})}}},"./src/models/janus/processing_janus.js":
  /*!**********************************************!*\
    !*** ./src/models/janus/processing_janus.js ***!
    \**********************************************/(e,t,n)=>{n.r(t),n.d(t,{VLChatProcessor:()=>d});var r=n(/*! ../../base/processing_utils.js */"./src/base/processing_utils.js"),s=n(/*! ../auto/image_processing_auto.js */"./src/models/auto/image_processing_auto.js"),o=n(/*! ../../tokenizers.js */"./src/tokenizers.js"),i=n(/*! ../../utils/core.js */"./src/utils/core.js"),a=n(/*! ../../utils/tensor.js */"./src/utils/tensor.js"),l=n(/*! ../../utils/image.js */"./src/utils/image.js");class d extends r.Processor{static image_processor_class=s.AutoImageProcessor;static tokenizer_class=o.AutoTokenizer;static uses_processor_config=!0;constructor(e,t){super(e,t),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(e,{images:t=null,chat_template:n="default"}={}){t?Array.isArray(t)||(t=[t]):t=await Promise.all(e.filter((e=>e.images)).flatMap((e=>e.images)).map((e=>l.RawImage.read(e))));const r=this.tokenizer,s=e=>r.encode(e,{add_special_tokens:!1}),o=r.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0,chat_template:n}).split(this.image_tag),d=o.length-1;if(t.length!==d)throw new Error(`Number of images provided (${t.length}) does not match number of "${this.image_tag}" image tags (${d})`);const[u,c,p]=r.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let h=s(o[0]),m=new Array(h.length).fill(!1);for(let e=1;e<o.length;++e){const t=new Array(this.num_image_tokens).fill(u),n=s(o[e]);h=(0,i.mergeArrays)(h,[c],t,[p],n);const r=new Array(this.num_image_tokens).fill(!0);m=(0,i.mergeArrays)(m,[!1],r,[!1],new Array(n.length).fill(!1))}const f=[1,h.length],g={input_ids:new a.Tensor("int64",h,f),attention_mask:new a.Tensor("int64",new Array(h.length).fill(1),f),images_seq_mask:new a.Tensor("bool",m,f),images_emb_mask:new a.Tensor("bool",new Array(d*this.num_image_tokens).fill(!0),[1,d,this.num_image_tokens])};if(t&&t.length>0){const e=await this.image_processor(t);return e.pixel_values.unsqueeze_(0),{...g,...e}}return g}}},"./src/models/jina_clip/image_processing_jina_clip.js":
  /*!************************************************************!*\
    !*** ./src/models/jina_clip/image_processing_jina_clip.js ***!
    \************************************************************/(e,t,n)=>{n.r(t),n.d(t,{JinaCLIPImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){const{resize_mode:t,fill_color:n,interpolation:r,size:s,...o}=e;super({...o,size:"squash"===t?{width:s,height:s}:"shortest"===t?{shortest_edge:s}:{longest_edge:s},resample:"bicubic"===r?3:2,do_center_crop:!0,crop_size:s,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":
  /*!******************************************************!*\
    !*** ./src/models/jina_clip/processing_jina_clip.js ***!
    \******************************************************/(e,t,n)=>{n.r(t),n.d(t,{JinaCLIPProcessor:()=>i});var r=n(/*! ../../base/processing_utils.js */"./src/base/processing_utils.js"),s=n(/*! ../auto/image_processing_auto.js */"./src/models/auto/image_processing_auto.js"),o=n(/*! ../../tokenizers.js */"./src/tokenizers.js");class i extends r.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;async _call(e=null,t=null,n={}){if(!e&&!t)throw new Error("Either text or images must be provided");return{...e?this.tokenizer(e,n):{},...t?await this.image_processor(t,n):{}}}}},"./src/models/llava_onevision/image_processing_llava_onevision.js":
  /*!************************************************************************!*\
    !*** ./src/models/llava_onevision/image_processing_llava_onevision.js ***!
    \************************************************************************/(e,t,n)=>{n.r(t),n.d(t,{LlavaOnevisionImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":
  /*!****************************************************************!*\
    !*** ./src/models/mask2former/image_processing_mask2former.js ***!
    \****************************************************************/(e,t,n)=>{n.r(t),n.d(t,{Mask2FormerImageProcessor:()=>s});var r=n(/*! ../maskformer/image_processing_maskformer.js */"./src/models/maskformer/image_processing_maskformer.js");class s extends r.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":
  /*!**************************************************************!*\
    !*** ./src/models/maskformer/image_processing_maskformer.js ***!
    \**************************************************************/(e,t,n)=>{n.r(t),n.d(t,{MaskFormerFeatureExtractor:()=>o,MaskFormerImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_panoptic_segmentation(...e){return(0,r.post_process_panoptic_segmentation)(...e)}post_process_instance_segmentation(...e){return(0,r.post_process_instance_segmentation)(...e)}}class o extends s{}},"./src/models/mgp_str/processing_mgp_str.js":
  /*!**************************************************!*\
    !*** ./src/models/mgp_str/processing_mgp_str.js ***!
    \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{MgpstrProcessor:()=>l});var r=n(/*! ../../base/processing_utils.js */"./src/base/processing_utils.js"),s=n(/*! ../auto/image_processing_auto.js */"./src/models/auto/image_processing_auto.js"),o=n(/*! ../../tokenizers.js */"./src/tokenizers.js"),i=n(/*! ../../utils/maths.js */"./src/utils/maths.js");const a={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends r.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(e,t){if(!a.hasOwnProperty(t))throw new Error(`Format ${t} is not supported.`);const[n,r]=a[t],s=this[n].bind(this),[o,l]=e.dims,d=[],u=[],c=e.tolist();for(let e=0;e<o;++e){const t=c[e],n=[],s=[];for(let e=1;e<l;++e){const[o,a]=(0,i.max)((0,i.softmax)(t[e]));if(s.push(o),a==r)break;n.push(a)}const o=s.length>0?s.reduce(((e,t)=>e*t),1):0;u.push(n),d.push(o)}return[s(u),d]}char_decode(e){return this.char_tokenizer.batch_decode(e).map((e=>e.replaceAll(" ","")))}bpe_decode(e){return this.bpe_tokenizer.batch_decode(e)}wp_decode(e){return this.wp_tokenizer.batch_decode(e).map((e=>e.replaceAll(" ","")))}batch_decode([e,t,n]){const[r,s]=this._decode_helper(e,"char"),[o,a]=this._decode_helper(t,"bpe"),[l,d]=this._decode_helper(n,"wp"),u=[],c=[];for(let e=0;e<r.length;++e){const[t,n]=(0,i.max)([s[e],a[e],d[e]]);u.push([r[e],o[e],l[e]][n]),c.push(t)}return{generated_text:u,scores:c,char_preds:r,bpe_preds:o,wp_preds:l}}static async from_pretrained(...e){const t=await super.from_pretrained(...e),n=await o.AutoTokenizer.from_pretrained("Xenova/gpt2"),r=await o.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return t.components={image_processor:t.image_processor,char_tokenizer:t.tokenizer,bpe_tokenizer:n,wp_tokenizer:r},t}async _call(e,t=null){const n=await this.image_processor(e);return t&&(n.labels=this.tokenizer(t).input_ids),n}}},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":
  /*!******************************************************************!*\
    !*** ./src/models/mobilenet_v1/image_processing_mobilenet_v1.js ***!
    \******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{MobileNetV1FeatureExtractor:()=>o,MobileNetV1ImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":
  /*!******************************************************************!*\
    !*** ./src/models/mobilenet_v2/image_processing_mobilenet_v2.js ***!
    \******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{MobileNetV2FeatureExtractor:()=>o,MobileNetV2ImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":
  /*!******************************************************************!*\
    !*** ./src/models/mobilenet_v3/image_processing_mobilenet_v3.js ***!
    \******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{MobileNetV3FeatureExtractor:()=>o,MobileNetV3ImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":
  /*!******************************************************************!*\
    !*** ./src/models/mobilenet_v4/image_processing_mobilenet_v4.js ***!
    \******************************************************************/(e,t,n)=>{n.r(t),n.d(t,{MobileNetV4FeatureExtractor:()=>o,MobileNetV4ImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/mobilevit/image_processing_mobilevit.js":
  /*!************************************************************!*\
    !*** ./src/models/mobilevit/image_processing_mobilevit.js ***!
    \************************************************************/(e,t,n)=>{n.r(t),n.d(t,{MobileViTFeatureExtractor:()=>o,MobileViTImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/nougat/image_processing_nougat.js":
  /*!******************************************************!*\
    !*** ./src/models/nougat/image_processing_nougat.js ***!
    \******************************************************/(e,t,n)=>{n.r(t),n.d(t,{NougatImageProcessor:()=>s});var r=n(/*! ../donut/image_processing_donut.js */"./src/models/donut/image_processing_donut.js");class s extends r.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":
  /*!****************************************************!*\
    !*** ./src/models/owlv2/image_processing_owlv2.js ***!
    \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{Owlv2ImageProcessor:()=>s});var r=n(/*! ../owlvit/image_processing_owlvit.js */"./src/models/owlvit/image_processing_owlvit.js");class s extends r.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":
  /*!******************************************************!*\
    !*** ./src/models/owlvit/image_processing_owlvit.js ***!
    \******************************************************/(e,t,n)=>{n.r(t),n.d(t,{OwlViTFeatureExtractor:()=>o,OwlViTImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}class o extends s{}},"./src/models/owlvit/processing_owlvit.js":
  /*!************************************************!*\
    !*** ./src/models/owlvit/processing_owlvit.js ***!
    \************************************************/(e,t,n)=>{n.r(t),n.d(t,{OwlViTProcessor:()=>i});var r=n(/*! ../../base/processing_utils.js */"./src/base/processing_utils.js"),s=n(/*! ../auto/image_processing_auto.js */"./src/models/auto/image_processing_auto.js"),o=n(/*! ../../tokenizers.js */"./src/tokenizers.js");class i extends r.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=s.AutoImageProcessor}},"./src/models/processors.js":
  /*!**********************************!*\
    !*** ./src/models/processors.js ***!
    \**********************************/(e,t,n)=>{n.r(t),n.d(t,{Florence2Processor:()=>r.Florence2Processor,Idefics3Processor:()=>o.Idefics3Processor,JinaCLIPProcessor:()=>a.JinaCLIPProcessor,MgpstrProcessor:()=>s.MgpstrProcessor,OwlViTProcessor:()=>l.OwlViTProcessor,PyAnnoteProcessor:()=>d.PyAnnoteProcessor,Qwen2VLProcessor:()=>u.Qwen2VLProcessor,SamProcessor:()=>c.SamProcessor,SpeechT5Processor:()=>p.SpeechT5Processor,VLChatProcessor:()=>i.VLChatProcessor,Wav2Vec2ProcessorWithLM:()=>h.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>m.WhisperProcessor});var r=n(/*! ./florence2/processing_florence2.js */"./src/models/florence2/processing_florence2.js"),s=n(/*! ./mgp_str/processing_mgp_str.js */"./src/models/mgp_str/processing_mgp_str.js"),o=n(/*! ./idefics3/processing_idefics3.js */"./src/models/idefics3/processing_idefics3.js"),i=n(/*! ./janus/processing_janus.js */"./src/models/janus/processing_janus.js"),a=n(/*! ./jina_clip/processing_jina_clip.js */"./src/models/jina_clip/processing_jina_clip.js"),l=n(/*! ./owlvit/processing_owlvit.js */"./src/models/owlvit/processing_owlvit.js"),d=n(/*! ./pyannote/processing_pyannote.js */"./src/models/pyannote/processing_pyannote.js"),u=n(/*! ./qwen2_vl/processing_qwen2_vl.js */"./src/models/qwen2_vl/processing_qwen2_vl.js"),c=n(/*! ./sam/processing_sam.js */"./src/models/sam/processing_sam.js"),p=n(/*! ./speecht5/processing_speecht5.js */"./src/models/speecht5/processing_speecht5.js"),h=n(/*! ./wav2vec2/processing_wav2vec2.js */"./src/models/wav2vec2/processing_wav2vec2.js"),m=n(/*! ./whisper/processing_whisper.js */"./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":
  /*!************************************************!*\
    !*** ./src/models/pvt/image_processing_pvt.js ***!
    \************************************************/(e,t,n)=>{n.r(t),n.d(t,{PvtImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":
  /*!************************************************************!*\
    !*** ./src/models/pyannote/feature_extraction_pyannote.js ***!
    \************************************************************/(e,t,n)=>{n.r(t),n.d(t,{PyAnnoteFeatureExtractor:()=>o});var r=n(/*! ../../base/feature_extraction_utils.js */"./src/base/feature_extraction_utils.js"),s=n(/*! ../../utils/tensor.js */"./src/utils/tensor.js");class o extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"PyAnnoteFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,1,e.length];return{input_values:new s.Tensor("float32",e,t)}}}},"./src/models/pyannote/processing_pyannote.js":
  /*!****************************************************!*\
    !*** ./src/models/pyannote/processing_pyannote.js ***!
    \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{PyAnnoteProcessor:()=>i});var r=n(/*! ../../base/processing_utils.js */"./src/base/processing_utils.js"),s=n(/*! ../auto/feature_extraction_auto.js */"./src/models/auto/feature_extraction_auto.js"),o=n(/*! ../../utils/maths.js */"./src/utils/maths.js");class i extends r.Processor{static feature_extractor_class=s.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}samples_to_frames(e){return(e-this.config.offset)/this.config.step}post_process_speaker_diarization(e,t){const n=t/this.samples_to_frames(t)/this.config.sampling_rate,r=[];for(const t of e.tolist()){const e=[];let s=-1;for(let n=0;n<t.length;++n){const r=(0,o.softmax)(t[n]),[i,a]=(0,o.max)(r),[l,d]=[n,n+1];a!==s?(s=a,e.push({id:a,start:l,end:d,score:i})):(e.at(-1).end=d,e.at(-1).score+=i)}r.push(e.map((({id:e,start:t,end:r,score:s})=>({id:e,start:t*n,end:r*n,confidence:s/(r-t)}))))}return r}}},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":
  /*!**********************************************************!*\
    !*** ./src/models/qwen2_vl/image_processing_qwen2_vl.js ***!
    \**********************************************************/(e,t,n)=>{n.r(t),n.d(t,{Qwen2VLImageProcessor:()=>o});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js"),s=n(/*! ../../utils/tensor.js */"./src/utils/tensor.js");class o extends r.ImageProcessor{async _call(e,...t){const{pixel_values:n,original_sizes:r,reshaped_input_sizes:o}=await super._call(e,...t);let i=n;const{temporal_patch_size:a,merge_size:l,patch_size:d}=this.config;1===i.dims[0]&&(i=(0,s.cat)(Array.from({length:a},(()=>i)),0));const u=i.dims[0]/a,c=i.dims[1],p=Math.floor(i.dims[2]/d),h=Math.floor(i.dims[3]/d);return{pixel_values:i.view(u,a,c,Math.floor(p/l),l,d,Math.floor(h/l),l,d).permute(0,3,6,4,7,2,1,5,8).view(u*p*h,c*a*d*d),image_grid_thw:new s.Tensor("int64",[u,p,h],[1,3]),original_sizes:r,reshaped_input_sizes:o}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":
  /*!****************************************************!*\
    !*** ./src/models/qwen2_vl/processing_qwen2_vl.js ***!
    \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{Qwen2VLProcessor:()=>i});var r=n(/*! ../../base/processing_utils.js */"./src/base/processing_utils.js"),s=n(/*! ../auto/image_processing_auto.js */"./src/models/auto/image_processing_auto.js"),o=n(/*! ../../tokenizers.js */"./src/tokenizers.js");n(/*! ../../utils/image.js */"./src/utils/image.js");class i extends r.Processor{static image_processor_class=s.AutoImageProcessor;static tokenizer_class=o.AutoTokenizer;async _call(e,t=null,...n){let r,s;if(Array.isArray(e)||(e=[e]),t&&(r=await this.image_processor(t),s=r.image_grid_thw),s){let t=this.image_processor.config.merge_size**2,n=0;const r=s.tolist();e=e.map((e=>{for(;e.includes("<|image_pad|>");){const s=Number(r[n++].reduce(((e,t)=>e*t),1n));e=e.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(s/t)))}return e.replaceAll("<|placeholder|>","<|image_pad|>")}))}return{...this.tokenizer(e),...r}}}},"./src/models/rt_detr/image_processing_rt_detr.js":
  /*!********************************************************!*\
    !*** ./src/models/rt_detr/image_processing_rt_detr.js ***!
    \********************************************************/(e,t,n)=>{n.r(t),n.d(t,{RTDetrImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}},"./src/models/sam/image_processing_sam.js":
  /*!************************************************!*\
    !*** ./src/models/sam/image_processing_sam.js ***!
    \************************************************/(e,t,n)=>{n.r(t),n.d(t,{SamImageProcessor:()=>i});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js"),s=n(/*! ../../utils/core.js */"./src/utils/core.js"),o=n(/*! ../../utils/tensor.js */"./src/utils/tensor.js");class i extends r.ImageProcessor{reshape_input_points(e,t,n,r=!1){e=structuredClone(e);let i=(0,s.calculateDimensions)(e);if(3===i.length)r||(i=[1,...i]),e=[e];else if(4!==i.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let r=0;r<e.length;++r){let s=t[r],o=n[r],i=[o[0]/s[0],o[1]/s[1]];for(let t=0;t<e[r].length;++t)for(let n=0;n<e[r][t].length;++n)for(let s=0;s<e[r][t][n].length;++s)e[r][t][n][s]*=i[s%2]}return new o.Tensor("float32",Float32Array.from(e.flat(1/0)),i)}add_input_labels(e,t){let n=(0,s.calculateDimensions)(e);if(2===n.length)n=[1,...n],e=[e];else if(3!==n.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(n.some(((e,n)=>e!==t.dims[n])))throw Error(`The first ${n.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new o.Tensor("int64",e.flat(1/0).map(BigInt),n)}async _call(e,{input_points:t=null,input_labels:n=null,input_boxes:r=null}={}){const s=await super._call(e);if(t&&(s.input_points=this.reshape_input_points(t,s.original_sizes,s.reshaped_input_sizes)),n){if(!s.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");s.input_labels=this.add_input_labels(n,s.input_points)}return r&&(s.input_boxes=this.reshape_input_points(r,s.original_sizes,s.reshaped_input_sizes,!0)),s}async post_process_masks(e,t,n,{mask_threshold:r=0,binarize:s=!0,pad_size:i=null}={}){const a=[],l=[(i=i??this.pad_size).height,i.width];for(let i=0;i<t.length;++i){const d=t[i],u=n[i];let c=await(0,o.interpolate_4d)(e[i],{mode:"bilinear",size:l});if(c=c.slice(null,null,[0,u[0]],[0,u[1]]),c=await(0,o.interpolate_4d)(c,{mode:"bilinear",size:d}),s){const e=c.data,t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)e[n]>r&&(t[n]=1);c=new o.Tensor("bool",t,c.dims)}a.push(c)}return a}generate_crop_boxes(e,t,{crop_n_layers:n=0,overlap_ratio:r=512/1500,points_per_crop:s=32,crop_n_points_downscale_factor:o=1}={}){}}},"./src/models/sam/processing_sam.js":
  /*!******************************************!*\
    !*** ./src/models/sam/processing_sam.js ***!
    \******************************************/(e,t,n)=>{n.r(t),n.d(t,{SamProcessor:()=>o});var r=n(/*! ../../base/processing_utils.js */"./src/base/processing_utils.js"),s=n(/*! ../auto/image_processing_auto.js */"./src/models/auto/image_processing_auto.js");class o extends r.Processor{static image_processor_class=s.AutoImageProcessor;async _call(...e){return await this.image_processor(...e)}post_process_masks(...e){return this.image_processor.post_process_masks(...e)}reshape_input_points(...e){return this.image_processor.reshape_input_points(...e)}}},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":
  /*!********************************************************************!*\
    !*** ./src/models/seamless_m4t/feature_extraction_seamless_m4t.js ***!
    \********************************************************************/(e,t,n)=>{n.r(t),n.d(t,{SeamlessM4TFeatureExtractor:()=>i});var r=n(/*! ../../base/feature_extraction_utils.js */"./src/base/feature_extraction_utils.js"),s=n(/*! ../../utils/tensor.js */"./src/utils/tensor.js"),o=n(/*! ../../utils/audio.js */"./src/utils/audio.js");class i extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,o.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<n.length;++e)n[e].push(0);this.mel_filters=n,this.window=(0,o.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(e,t){return e=e.map((e=>32768*e)),(0,o.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e,{padding:t=!0,pad_to_multiple_of:n=2,do_normalize_per_mel_bins:o=!0,return_attention_mask:i=!0}={}){(0,r.validate_audio_inputs)(e,"SeamlessM4TFeatureExtractor");let a,l=await this._extract_fbank_features(e,this.config.max_length);if(o){const[e,t]=l.dims,n=l.data;for(let r=0;r<t;++r){let s=0;for(let o=0;o<e;++o)s+=n[o*t+r];const o=s/e;let i=0;for(let s=0;s<e;++s)i+=(n[s*t+r]-o)**2;i/=e-1;const a=Math.sqrt(i+1e-7);for(let s=0;s<e;++s){const e=s*t+r;n[e]=(n[e]-o)/a}}}if(t){const[e,t]=l.dims,r=l.data,o=e%n;if(o>0){const n=new Float32Array(t*(e+o));n.set(r),n.fill(this.config.padding_value,r.length);const d=e+o;l=new s.Tensor(l.type,n,[d,t]),i&&(a=new s.Tensor("int64",new BigInt64Array(d),[1,d]),a.data.fill(1n,0,e))}}const[d,u]=l.dims,c=this.config.stride;if(0!==d%c)throw new Error(`The number of frames (${d}) must be a multiple of the stride (${c}).`);const p=l.view(1,Math.floor(d/c),u*c),h={input_features:p};if(i){const e=p.dims[1],t=new BigInt64Array(e);if(a){const e=a.data;for(let n=1,r=0;n<d;n+=c,++r)t[r]=e[n]}else t.fill(1n);h.attention_mask=new s.Tensor("int64",t,[1,e])}return h}}},"./src/models/segformer/image_processing_segformer.js":
  /*!************************************************************!*\
    !*** ./src/models/segformer/image_processing_segformer.js ***!
    \************************************************************/(e,t,n)=>{n.r(t),n.d(t,{SegformerFeatureExtractor:()=>o,SegformerImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_semantic_segmentation(...e){return(0,r.post_process_semantic_segmentation)(...e)}}class o extends s{}},"./src/models/siglip/image_processing_siglip.js":
  /*!******************************************************!*\
    !*** ./src/models/siglip/image_processing_siglip.js ***!
    \******************************************************/(e,t,n)=>{n.r(t),n.d(t,{SiglipImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/speecht5/feature_extraction_speecht5.js":
  /*!************************************************************!*\
    !*** ./src/models/speecht5/feature_extraction_speecht5.js ***!
    \************************************************************/(e,t,n)=>{n.r(t),n.d(t,{SpeechT5FeatureExtractor:()=>s});var r=n(/*! ../../base/feature_extraction_utils.js */"./src/base/feature_extraction_utils.js");class s extends r.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":
  /*!****************************************************!*\
    !*** ./src/models/speecht5/processing_speecht5.js ***!
    \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{SpeechT5Processor:()=>i});var r=n(/*! ../../base/processing_utils.js */"./src/base/processing_utils.js"),s=n(/*! ../../tokenizers.js */"./src/tokenizers.js"),o=n(/*! ../auto/feature_extraction_auto.js */"./src/models/auto/feature_extraction_auto.js");class i extends r.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=o.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/swin2sr/image_processing_swin2sr.js":
  /*!********************************************************!*\
    !*** ./src/models/swin2sr/image_processing_swin2sr.js ***!
    \********************************************************/(e,t,n)=>{n.r(t),n.d(t,{Swin2SRImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{pad_image(e,t,n,r={}){const[s,o,i]=t;return super.pad_image(e,t,{width:o+(n-o%n)%n,height:s+(n-s%n)%n},{mode:"symmetric",center:!1,constant_values:-1,...r})}}},"./src/models/vit/image_processing_vit.js":
  /*!************************************************!*\
    !*** ./src/models/vit/image_processing_vit.js ***!
    \************************************************/(e,t,n)=>{n.r(t),n.d(t,{ViTFeatureExtractor:()=>o,ViTImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/vitmatte/image_processing_vitmatte.js":
  /*!**********************************************************!*\
    !*** ./src/models/vitmatte/image_processing_vitmatte.js ***!
    \**********************************************************/(e,t,n)=>{n.r(t),n.d(t,{VitMatteImageProcessor:()=>o});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js"),s=n(/*! ../../utils/tensor.js */"./src/utils/tensor.js");class o extends r.ImageProcessor{async _call(e,t){Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const n=await Promise.all(e.map((e=>this.preprocess(e)))),r=await Promise.all(t.map((e=>this.preprocess(e,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0}))));return{pixel_values:(0,s.stack)(n.map(((e,t)=>(0,s.cat)([e.pixel_values,r[t].pixel_values],0))),0),original_sizes:n.map((e=>e.original_size)),reshaped_input_sizes:n.map((e=>e.reshaped_input_size))}}}},"./src/models/vitpose/image_processing_vitpose.js":
  /*!********************************************************!*\
    !*** ./src/models/vitpose/image_processing_vitpose.js ***!
    \********************************************************/(e,t,n)=>{n.r(t),n.d(t,{VitPoseImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_pose_estimation(e,t,{threshold:n=null}={}){const r=e.tolist(),[s,o,i,a]=e.dims,l=[];for(let e=0;e<s;++e){const s=r[e],o=t[e],d=[];for(let e=0;e<o.length;++e){const t=o[e],r=[],l=[],u=[],c=t.at(-2)/a,p=t.at(-1)/i;for(let e=0;e<s.length;++e){let[t,o]=[0,0],i=0,a=-1/0;const d=s[e];for(let e=0;e<d.length;++e){const n=d[e];for(let r=0;r<n.length;++r){const s=n[r];i+=s,a=Math.max(a,s),t+=(r+.5)*s,o+=e*s}}if(null!=n&&a<n)continue;const h=[c*t/i,p*o/i];r.push(h),u.push(e),l.push(a)}d.push({bbox:t,scores:l,labels:u,keypoints:r})}l.push(d)}return l}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":
  /*!************************************************************!*\
    !*** ./src/models/wav2vec2/feature_extraction_wav2vec2.js ***!
    \************************************************************/(e,t,n)=>{n.r(t),n.d(t,{Wav2Vec2FeatureExtractor:()=>o});var r=n(/*! ../../base/feature_extraction_utils.js */"./src/base/feature_extraction_utils.js"),s=n(/*! ../../utils/tensor.js */"./src/utils/tensor.js");class o extends r.FeatureExtractor{_zero_mean_unit_var_norm(e){const t=e.reduce(((e,t)=>e+t),0)/e.length,n=e.reduce(((e,n)=>e+(n-t)**2),0)/e.length;return e.map((e=>(e-t)/Math.sqrt(n+1e-7)))}async _call(e){(0,r.validate_audio_inputs)(e,"Wav2Vec2FeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));let t=e;this.config.do_normalize&&(t=this._zero_mean_unit_var_norm(t));const n=[1,t.length];return{input_values:new s.Tensor("float32",t,n),attention_mask:new s.Tensor("int64",new BigInt64Array(t.length).fill(1n),n)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":
  /*!****************************************************!*\
    !*** ./src/models/wav2vec2/processing_wav2vec2.js ***!
    \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{Wav2Vec2ProcessorWithLM:()=>o});var r=n(/*! ../../base/processing_utils.js */"./src/base/processing_utils.js"),s=n(/*! ../auto/feature_extraction_auto.js */"./src/models/auto/feature_extraction_auto.js");class o extends r.Processor{static feature_extractor_class=s.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/wespeaker/feature_extraction_wespeaker.js":
  /*!**************************************************************!*\
    !*** ./src/models/wespeaker/feature_extraction_wespeaker.js ***!
    \**************************************************************/(e,t,n)=>{n.r(t),n.d(t,{WeSpeakerFeatureExtractor:()=>o});var r=n(/*! ../../base/feature_extraction_utils.js */"./src/base/feature_extraction_utils.js"),s=(n(/*! ../../utils/tensor.js */"./src/utils/tensor.js"),n(/*! ../../utils/audio.js */"./src/utils/audio.js"));class o extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,s.mel_filter_bank)(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<n.length;++e)n[e].push(0);this.mel_filters=n,this.window=(0,s.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(e){return e=e.map((e=>32768*e)),(0,s.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(e){(0,r.validate_audio_inputs)(e,"WeSpeakerFeatureExtractor");const t=(await this._extract_fbank_features(e)).unsqueeze_(0);if(null===this.config.fbank_centering_span){const e=t.mean(1).data,n=t.data,[r,s,o]=t.dims;for(let t=0;t<r;++t){const r=t*s*o,i=t*o;for(let t=0;t<s;++t){const s=r+t*o;for(let t=0;t<o;++t)n[s+t]-=e[i+t]}}}return{input_features:t}}}},"./src/models/whisper/common_whisper.js":
  /*!**********************************************!*\
    !*** ./src/models/whisper/common_whisper.js ***!
    \**********************************************/(e,t,n)=>{n.r(t),n.d(t,{WHISPER_LANGUAGE_MAPPING:()=>s,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>o,whisper_language_to_code:()=>i});const r=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],s=new Map(r),o=new Map([...r.map((([e,t])=>[t,e])),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function i(e){e=e.toLowerCase();let t=o.get(e);if(void 0===t){if(!s.has(e)){const t=2===e.length?s.keys():s.values();throw new Error(`Language "${e}" is not supported. Must be one of: ${JSON.stringify(t)}`)}t=e}return t}},"./src/models/whisper/feature_extraction_whisper.js":
  /*!**********************************************************!*\
    !*** ./src/models/whisper/feature_extraction_whisper.js ***!
    \**********************************************************/(e,t,n)=>{n.r(t),n.d(t,{WhisperFeatureExtractor:()=>i});var r=n(/*! ../../base/feature_extraction_utils.js */"./src/base/feature_extraction_utils.js"),s=(n(/*! ../../utils/tensor.js */"./src/utils/tensor.js"),n(/*! ../../utils/audio.js */"./src/utils/audio.js")),o=n(/*! ../../utils/maths.js */"./src/utils/maths.js");class i extends r.FeatureExtractor{constructor(e){super(e),this.config.mel_filters??=(0,s.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,s.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(e){const t=await(0,s.spectrogram)(e,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),n=t.data,r=(0,o.max)(n)[0];for(let e=0;e<n.length;++e)n[e]=(Math.max(n[e],r-8)+4)/4;return t}async _call(e){let t;(0,r.validate_audio_inputs)(e,"WhisperFeatureExtractor"),e.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),t=e.slice(0,this.config.n_samples)):(t=new Float32Array(this.config.n_samples),t.set(e));return{input_features:(await this._extract_fbank_features(t)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":
  /*!**************************************************!*\
    !*** ./src/models/whisper/generation_whisper.js ***!
    \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{WhisperGenerationConfig:()=>s});var r=n(/*! ../../generation/configuration_utils.js */"./src/generation/configuration_utils.js");class s extends r.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/models/whisper/processing_whisper.js":
  /*!**************************************************!*\
    !*** ./src/models/whisper/processing_whisper.js ***!
    \**************************************************/(e,t,n)=>{n.r(t),n.d(t,{WhisperProcessor:()=>i});var r=n(/*! ../auto/feature_extraction_auto.js */"./src/models/auto/feature_extraction_auto.js"),s=n(/*! ../../tokenizers.js */"./src/tokenizers.js"),o=n(/*! ../../base/processing_utils.js */"./src/base/processing_utils.js");class i extends o.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=r.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/yolos/image_processing_yolos.js":
  /*!****************************************************!*\
    !*** ./src/models/yolos/image_processing_yolos.js ***!
    \****************************************************/(e,t,n)=>{n.r(t),n.d(t,{YolosFeatureExtractor:()=>o,YolosImageProcessor:()=>s});var r=n(/*! ../../base/image_processors_utils.js */"./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}class o extends s{}},"./src/ops/registry.js":
  /*!*****************************!*\
    !*** ./src/ops/registry.js ***!
    \*****************************/(e,t,n)=>{n.r(t),n.d(t,{TensorOpRegistry:()=>i});var r=n(/*! ../backends/onnx.js */"./src/backends/onnx.js"),s=n(/*! ../utils/tensor.js */"./src/utils/tensor.js");const o=async(e,t,n)=>{const o=await(0,r.createInferenceSession)(new Uint8Array(e),t);return async e=>{const t=Object.fromEntries(Object.entries(e).map((([e,t])=>[e,t.ort_tensor]))),r=await o.run(t);return Array.isArray(n)?n.map((e=>new s.Tensor(r[e]))):new s.Tensor(r[n])}};class i{static session_options={};static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=o([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=o([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=o([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=o([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=o([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=o([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}}},"./src/pipelines.js":
  /*!**************************!*\
    !*** ./src/pipelines.js ***!
    \**************************/(e,t,n)=>{n.r(t),n.d(t,{AudioClassificationPipeline:()=>P,AutomaticSpeechRecognitionPipeline:()=>E,DepthEstimationPipeline:()=>R,DocumentQuestionAnsweringPipeline:()=>B,FeatureExtractionPipeline:()=>$,FillMaskPipeline:()=>y,ImageClassificationPipeline:()=>A,ImageFeatureExtractionPipeline:()=>C,ImageSegmentationPipeline:()=>I,ImageToImagePipeline:()=>N,ImageToTextPipeline:()=>F,ObjectDetectionPipeline:()=>L,Pipeline:()=>f,QuestionAnsweringPipeline:()=>w,SummarizationPipeline:()=>v,Text2TextGenerationPipeline:()=>b,TextClassificationPipeline:()=>g,TextGenerationPipeline:()=>T,TextToAudioPipeline:()=>D,TokenClassificationPipeline:()=>_,TranslationPipeline:()=>x,ZeroShotAudioClassificationPipeline:()=>S,ZeroShotClassificationPipeline:()=>k,ZeroShotImageClassificationPipeline:()=>z,ZeroShotObjectDetectionPipeline:()=>O,pipeline:()=>G});var r=n(/*! ./tokenizers.js */"./src/tokenizers.js"),s=n(/*! ./models.js */"./src/models.js"),o=n(/*! ./models/auto/processing_auto.js */"./src/models/auto/processing_auto.js"),i=(n(/*! ./base/processing_utils.js */"./src/base/processing_utils.js"),n(/*! ./utils/generic.js */"./src/utils/generic.js")),a=n(/*! ./utils/core.js */"./src/utils/core.js"),l=n(/*! ./utils/maths.js */"./src/utils/maths.js"),d=n(/*! ./utils/audio.js */"./src/utils/audio.js"),u=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),c=n(/*! ./utils/image.js */"./src/utils/image.js");async function p(e){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>c.RawImage.read(e))))}async function h(e,t){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>"string"==typeof e||e instanceof URL?(0,d.read_audio)(e,t):e instanceof Float64Array?new Float32Array(e):e)))}function m(e,t){t&&(e=e.map((e=>0|e)));const[n,r,s,o]=e;return{xmin:n,ymin:r,xmax:s,ymax:o}}class f extends i.Callable{constructor({task:e,model:t,tokenizer:n=null,processor:r=null}){super(),this.task=e,this.model=t,this.tokenizer=n,this.processor=r}async dispose(){await this.model.dispose()}}class g extends f{constructor(e){super(e)}async _call(e,{top_k:t=1}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),r=await this.model(n),s="multi_label_classification"===this.model.config.problem_type?e=>e.sigmoid():e=>new u.Tensor("float32",(0,l.softmax)(e.data),e.dims),o=this.model.config.id2label,i=[];for(const e of r.logits){const n=s(e),r=await(0,u.topk)(n,t),a=r[0].tolist(),l=r[1].tolist().map(((e,t)=>({label:o?o[e]:`LABEL_${e}`,score:a[t]})));1===t?i.push(...l):i.push(l)}return Array.isArray(e)||1===t?i:i[0]}}class _ extends f{constructor(e){super(e)}async _call(e,{ignore_labels:t=["O"]}={}){const n=Array.isArray(e),r=this.tokenizer(n?e:[e],{padding:!0,truncation:!0}),s=(await this.model(r)).logits,o=this.model.config.id2label,i=[];for(let e=0;e<s.dims[0];++e){const n=r.input_ids[e],a=s[e],d=[];for(let e=0;e<a.dims[0];++e){const r=a[e],s=(0,l.max)(r.data)[1],i=o?o[s]:`LABEL_${s}`;if(t.includes(i))continue;const u=this.tokenizer.decode([n[e].item()],{skip_special_tokens:!0});if(""===u)continue;const c=(0,l.softmax)(r.data);d.push({entity:i,score:c[s],index:e,word:u})}i.push(d)}return n?i:i[0]}}class w extends f{constructor(e){super(e)}async _call(e,t,{top_k:n=1}={}){const r=this.tokenizer(e,{text_pair:t,padding:!0,truncation:!0}),{start_logits:s,end_logits:o}=await this.model(r),i=r.input_ids.tolist(),d=r.attention_mask.tolist(),u=this.tokenizer.all_special_ids,c=[];for(let e=0;e<s.dims[0];++e){const t=i[e],r=t.findIndex((e=>e==this.tokenizer.sep_token_id)),p=(d[e].map(((e,n)=>1==e&&(0===n||n>r&&-1===u.findIndex((e=>e==t[n]))))),s[e].tolist()),h=o[e].tolist();for(let n=1;n<p.length;++n)(0==d[e]||n<=r||-1!==u.findIndex((e=>e==t[n])))&&(p[n]=-1/0,h[n]=-1/0);const m=(0,l.softmax)(p).map(((e,t)=>[e,t])),f=(0,l.softmax)(h).map(((e,t)=>[e,t]));m[0][0]=0,f[0][0]=0;const g=(0,a.product)(m,f).filter((e=>e[0][1]<=e[1][1])).map((e=>[e[0][1],e[1][1],e[0][0]*e[1][0]])).sort(((e,t)=>t[2]-e[2]));for(let e=0;e<Math.min(g.length,n);++e){const[n,r,s]=g[e],o=t.slice(n,r+1),i=this.tokenizer.decode(o,{skip_special_tokens:!0});c.push({answer:i,score:s})}}return 1===n?c[0]:c}}class y extends f{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),{logits:r}=await this.model(n),s=[],o=n.input_ids.tolist();for(let e=0;e<o.length;++e){const n=o[e],i=n.findIndex((e=>e==this.tokenizer.mask_token_id));if(-1===i)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const a=r[e][i],d=await(0,u.topk)(new u.Tensor("float32",(0,l.softmax)(a.data),a.dims),t),c=d[0].tolist(),p=d[1].tolist();s.push(p.map(((e,t)=>{const r=n.slice();return r[i]=e,{score:c[t],token:Number(e),token_str:this.tokenizer.model.vocab[e],sequence:this.tokenizer.decode(r,{skip_special_tokens:!0})}})))}return Array.isArray(e)?s:s[0]}}class b extends f{_key="generated_text";constructor(e){super(e)}async _call(e,t={}){Array.isArray(e)||(e=[e]),this.model.config.prefix&&(e=e.map((e=>this.model.config.prefix+e)));const n=this.model.config.task_specific_params;n&&n[this.task]&&n[this.task].prefix&&(e=e.map((e=>n[this.task].prefix+e)));const r=this.tokenizer,s={padding:!0,truncation:!0};let o;o=this instanceof x&&"_build_translation_inputs"in r?r._build_translation_inputs(e,s,t):r(e,s);const i=await this.model.generate({...o,...t});return r.batch_decode(i,{skip_special_tokens:!0}).map((e=>({[this._key]:e})))}}class v extends b{_key="summary_text";constructor(e){super(e)}}class x extends b{_key="translation_text";constructor(e){super(e)}}function M(e){return Array.isArray(e)&&e.every((e=>"role"in e&&"content"in e))}class T extends f{constructor(e){super(e)}async _call(e,t={}){let n,r=!1,s=!1;if("string"==typeof e)n=e=[e];else if(Array.isArray(e)&&e.every((e=>"string"==typeof e)))r=!0,n=e;else{if(M(e))e=[e];else{if(!Array.isArray(e)||!e.every(M))throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");r=!0}s=!0,n=e.map((e=>this.tokenizer.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0})))}const o=t.add_special_tokens??!1,i=!s&&(t.return_full_text??!0);this.tokenizer.padding_side="left";const a=this.tokenizer(n,{add_special_tokens:o,padding:!0,truncation:!0}),l=await this.model.generate({...a,...t}),d=this.tokenizer.batch_decode(l,{skip_special_tokens:!0});let u;!i&&a.input_ids.dims.at(-1)>0&&(u=this.tokenizer.batch_decode(a.input_ids,{skip_special_tokens:!0}).map((e=>e.length)));const c=Array.from({length:e.length},(e=>[]));for(let t=0;t<d.length;++t){const n=Math.floor(t/l.dims[0]*e.length);u&&(d[t]=d[t].slice(u[n])),c[n].push({generated_text:s?[...e[n],{role:"assistant",content:d[t]}]:d[t]})}return r||1!==c.length?c:c[0]}}class k extends f{constructor(e){super(e),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map((([e,t])=>[e.toLowerCase(),t]))),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(e,t,{hypothesis_template:n="This example is {}.",multi_label:r=!1}={}){const s=Array.isArray(e);s||(e=[e]),Array.isArray(t)||(t=[t]);const o=t.map((e=>n.replace("{}",e))),i=r||1===t.length,a=[];for(const n of e){const e=[];for(const t of o){const r=this.tokenizer(n,{text_pair:t,padding:!0,truncation:!0}),s=await this.model(r);i?e.push([s.logits.data[this.contradiction_id],s.logits.data[this.entailment_id]]):e.push(s.logits.data[this.entailment_id])}const r=(i?e.map((e=>(0,l.softmax)(e)[1])):(0,l.softmax)(e)).map(((e,t)=>[e,t])).sort(((e,t)=>t[0]-e[0]));a.push({sequence:n,labels:r.map((e=>t[e[1]])),scores:r.map((e=>e[0]))})}return s?a:a[0]}}class $ extends f{constructor(e){super(e)}async _call(e,{pooling:t="none",normalize:n=!1,quantize:r=!1,precision:s="binary"}={}){const o=this.tokenizer(e,{padding:!0,truncation:!0}),i=await this.model(o);let a=i.last_hidden_state??i.logits??i.token_embeddings;if("none"===t);else if("mean"===t)a=(0,u.mean_pooling)(a,o.attention_mask);else{if("cls"!==t)throw Error(`Pooling method '${t}' not supported.`);a=a.slice(null,0)}return n&&(a=a.normalize(2,-1)),r&&(a=(0,u.quantize_embeddings)(a,s)),a}}class C extends f{constructor(e){super(e)}async _call(e,{pool:t=null}={}){const n=await p(e),{pixel_values:r}=await this.processor(n),s=await this.model({pixel_values:r});let o;if(t){if(!("pooler_output"in s))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");o=s.pooler_output}else o=s.last_hidden_state??s.logits??s.image_embeds;return o}}class P extends f{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=this.processor.feature_extractor.config.sampling_rate,r=await h(e,n),s=this.model.config.id2label,o=[];for(const e of r){const n=await this.processor(e),r=(await this.model(n)).logits[0],i=await(0,u.topk)(new u.Tensor("float32",(0,l.softmax)(r.data),r.dims),t),a=i[0].tolist(),d=i[1].tolist().map(((e,t)=>({label:s?s[e]:`LABEL_${e}`,score:a[t]})));o.push(d)}return Array.isArray(e)?o:o[0]}}class S extends f{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a sound of {}."}={}){const r=!Array.isArray(e);r&&(e=[e]);const s=t.map((e=>n.replace("{}",e))),o=this.tokenizer(s,{padding:!0,truncation:!0}),i=this.processor.feature_extractor.config.sampling_rate,a=await h(e,i),d=[];for(const e of a){const n=await this.processor(e),r=await this.model({...o,...n}),s=(0,l.softmax)(r.logits_per_audio.data);d.push([...s].map(((e,n)=>({score:e,label:t[n]}))))}return r?d[0]:d}}class E extends f{constructor(e){super(e)}async _call(e,t={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(e,t);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(e,t);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(e,t){t.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),t.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const n=!Array.isArray(e);n&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,s=await h(e,r),o=[];for(const e of s){const t=await this.processor(e),n=(await this.model(t)).logits[0],r=[];for(const e of n)r.push((0,l.max)(e.data)[1]);const s=this.tokenizer.decode(r);o.push({text:s})}return n?o[0]:o}async _call_whisper(e,t){const n=t.return_timestamps??!1,r=t.chunk_length_s??0,s=t.force_full_sequences??!1;let o=t.stride_length_s??null;const i={...t};"word"===n&&(i.return_token_timestamps=!0,i.return_timestamps=!1);const a=!Array.isArray(e);a&&(e=[e]);const d=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,u=this.processor.feature_extractor.config.hop_length,c=this.processor.feature_extractor.config.sampling_rate,p=await h(e,c),m=[];for(const e of p){let t=[];if(r>0){if(null===o)o=r/6;else if(r<=o)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const n=c*r,s=c*o,i=n-2*s;let a=0;for(;;){const r=a+n,o=e.subarray(a,r),l=await this.processor(o),d=0===a,u=r>=e.length;if(t.push({stride:[o.length,d?0:s,u?0:s],input_features:l.input_features,is_last:u}),u)break;a+=i}}else t=[{stride:[e.length,0,0],input_features:(await this.processor(e)).input_features,is_last:!0}];for(const e of t){i.num_frames=Math.floor(e.stride[0]/u);const t=await this.model.generate({inputs:e.input_features,...i});"word"===n?(e.tokens=t.sequences.tolist()[0],e.token_timestamps=t.token_timestamps.tolist()[0].map((e=>(0,l.round)(e,2)))):e.tokens=t[0].tolist(),e.stride=e.stride.map((e=>e/c))}const[a,p]=this.tokenizer._decode_asr(t,{time_precision:d,return_timestamps:n,force_full_sequences:s});m.push({text:a,...p})}return a?m[0]:m}}class F extends f{constructor(e){super(e)}async _call(e,t={}){const n=Array.isArray(e),r=await p(e),{pixel_values:s}=await this.processor(r),o=[];for(const e of s){e.dims=[1,...e.dims];const n=await this.model.generate({inputs:e,...t}),r=this.tokenizer.batch_decode(n,{skip_special_tokens:!0}).map((e=>({generated_text:e.trim()})));o.push(r)}return n?o:o[0]}}class A extends f{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=await p(e),{pixel_values:r}=await this.processor(n),s=await this.model({pixel_values:r}),o=this.model.config.id2label,i=[];for(const e of s.logits){const n=await(0,u.topk)(new u.Tensor("float32",(0,l.softmax)(e.data),e.dims),t),r=n[0].tolist(),s=n[1].tolist().map(((e,t)=>({label:o?o[e]:`LABEL_${e}`,score:r[t]})));i.push(s)}return Array.isArray(e)?i:i[0]}}class I extends f{constructor(e){super(e),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(e,{threshold:t=.5,mask_threshold:n=.5,overlap_mask_area_threshold:r=.8,label_ids_to_fuse:s=null,target_sizes:o=null,subtask:i=null}={}){if(Array.isArray(e)&&1!==e.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const a=await p(e),l=a.map((e=>[e.height,e.width])),{pixel_values:d,pixel_mask:u}=await this.processor(a),h=await this.model({pixel_values:d,pixel_mask:u});let m=null;if(null!==i)m=this.subtasks_mapping[i];else for(let[e,t]of Object.entries(this.subtasks_mapping))if(t in this.processor.image_processor){m=this.processor.image_processor[t].bind(this.processor.image_processor),i=e;break}const f=this.model.config.id2label,g=[];if("panoptic"===i||"instance"===i){const e=m(h,t,n,r,s,o??l)[0],i=e.segmentation;for(const t of e.segments_info){const e=new Uint8ClampedArray(i.data.length);for(let n=0;n<i.data.length;++n)i.data[n]===t.id&&(e[n]=255);const n=new c.RawImage(e,i.dims[1],i.dims[0],1);g.push({score:t.score,label:f[t.label_id],mask:n})}}else{if("semantic"!==i)throw Error(`Subtask ${i} not supported.`);{const{segmentation:e,labels:t}=m(h,o??l)[0];for(const n of t){const t=new Uint8ClampedArray(e.data.length);for(let r=0;r<e.data.length;++r)e.data[r]===n&&(t[r]=255);const r=new c.RawImage(t,e.dims[1],e.dims[0],1);g.push({score:null,label:f[n],mask:r})}}}return g}}class z extends f{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a photo of {}"}={}){const r=Array.isArray(e),s=await p(e),o=t.map((e=>n.replace("{}",e))),i=this.tokenizer(o,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:a}=await this.processor(s),d=await this.model({...i,pixel_values:a}),u="siglip"===this.model.config.model_type?e=>e.sigmoid().data:e=>(0,l.softmax)(e.data),c=[];for(const e of d.logits_per_image){const n=[...u(e)].map(((e,n)=>({score:e,label:t[n]})));n.sort(((e,t)=>t.score-e.score)),c.push(n)}return r?c:c[0]}}class L extends f{constructor(e){super(e)}async _call(e,{threshold:t=.9,percentage:n=!1}={}){const r=Array.isArray(e);if(r&&1!==e.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");const s=await p(e),o=n?null:s.map((e=>[e.height,e.width])),{pixel_values:i,pixel_mask:a}=await this.processor(s),l=await this.model({pixel_values:i,pixel_mask:a}),d=this.processor.image_processor.post_process_object_detection(l,t,o),u=this.model.config.id2label,c=d.map((e=>e.boxes.map(((t,r)=>({score:e.scores[r],label:u[e.classes[r]],box:m(t,!n)})))));return r?c:c[0]}}class O extends f{constructor(e){super(e)}async _call(e,t,{threshold:n=.1,top_k:r=null,percentage:s=!1}={}){const o=Array.isArray(e),i=await p(e),a=this.tokenizer(t,{padding:!0,truncation:!0}),l=await this.processor(i),d=[];for(let e=0;e<i.length;++e){const o=i[e],u=s?null:[[o.height,o.width]],c=l.pixel_values[e].unsqueeze_(0),p=await this.model({...a,pixel_values:c}),h=this.processor.image_processor.post_process_object_detection(p,n,u,!0)[0];let f=h.boxes.map(((e,n)=>({score:h.scores[n],label:t[h.classes[n]],box:m(e,!s)}))).sort(((e,t)=>t.score-e.score));null!==r&&(f=f.slice(0,r)),d.push(f)}return o?d:d[0]}}class B extends f{constructor(e){super(e)}async _call(e,t,n={}){const r=(await p(e))[0],{pixel_values:s}=await this.processor(r),o=`<s_docvqa><s_question>${t}</s_question><s_answer>`,i=this.tokenizer(o,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,a=await this.model.generate({inputs:s,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:i,...n}),l=this.tokenizer.batch_decode(a)[0].match(/<s_answer>(.*?)<\/s_answer>/);let d=null;return l&&l.length>=2&&(d=l[1].trim()),[{answer:d}]}}class D extends f{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(e){super(e),this.vocoder=e.vocoder??null}async _call(e,{speaker_embeddings:t=null}={}){return this.processor?this._call_text_to_spectrogram(e,{speaker_embeddings:t}):this._call_text_to_waveform(e)}async _call_text_to_waveform(e){const t=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:n}=await this.model(t),r=this.model.config.sampling_rate;return{audio:n.data,sampling_rate:r}}async _call_text_to_spectrogram(e,{speaker_embeddings:t}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await s.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),("string"==typeof t||t instanceof URL)&&(t=new Float32Array(await(await fetch(t)).arrayBuffer())),t instanceof Float32Array)t=new u.Tensor("float32",t,[1,t.length]);else if(!(t instanceof u.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:n}=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:r}=await this.model.generate_speech(n,t,{vocoder:this.vocoder}),o=this.processor.feature_extractor.config.sampling_rate;return{audio:r.data,sampling_rate:o}}}class N extends f{constructor(e){super(e)}async _call(e){const t=await p(e),n=await this.processor(t),r=await this.model(n),s=[];for(const e of r.reconstruction){const t=e.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");s.push(c.RawImage.fromTensor(t))}return s.length>1?s:s[0]}}class R extends f{constructor(e){super(e)}async _call(e){const t=await p(e),n=await this.processor(t),{predicted_depth:r}=await this.model(n),s=[];for(let e=0;e<t.length;++e){const n=(0,u.interpolate)(r[e],t[e].size.reverse(),"bilinear",!1),o=n.mul_(255/(0,l.max)(n.data)[0]).to("uint8");s.push({predicted_depth:r[e],depth:c.RawImage.fromTensor(o)})}return s.length>1?s:s[0]}}const j=Object.freeze({"text-classification":{tokenizer:r.AutoTokenizer,pipeline:g,model:s.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:r.AutoTokenizer,pipeline:_,model:s.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:r.AutoTokenizer,pipeline:w,model:s.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:r.AutoTokenizer,pipeline:y,model:s.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:r.AutoTokenizer,pipeline:v,model:s.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:r.AutoTokenizer,pipeline:x,model:s.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:r.AutoTokenizer,pipeline:b,model:s.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:r.AutoTokenizer,pipeline:T,model:s.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:r.AutoTokenizer,pipeline:k,model:s.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:P,model:s.AutoModelForAudioClassification,processor:o.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:r.AutoTokenizer,pipeline:S,model:s.AutoModel,processor:o.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:r.AutoTokenizer,pipeline:E,model:[s.AutoModelForSpeechSeq2Seq,s.AutoModelForCTC],processor:o.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:r.AutoTokenizer,pipeline:D,model:[s.AutoModelForTextToWaveform,s.AutoModelForTextToSpectrogram],processor:[o.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:r.AutoTokenizer,pipeline:F,model:s.AutoModelForVision2Seq,processor:o.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:A,model:s.AutoModelForImageClassification,processor:o.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:I,model:[s.AutoModelForImageSegmentation,s.AutoModelForSemanticSegmentation,s.AutoModelForUniversalSegmentation],processor:o.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:r.AutoTokenizer,pipeline:z,model:s.AutoModel,processor:o.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:L,model:s.AutoModelForObjectDetection,processor:o.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:r.AutoTokenizer,pipeline:O,model:s.AutoModelForZeroShotObjectDetection,processor:o.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:r.AutoTokenizer,pipeline:B,model:s.AutoModelForDocumentQuestionAnswering,processor:o.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:N,model:s.AutoModelForImageToImage,processor:o.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:R,model:s.AutoModelForDepthEstimation,processor:o.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:r.AutoTokenizer,pipeline:$,model:s.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:o.AutoProcessor,pipeline:C,model:[s.AutoModelForImageFeatureExtraction,s.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),V=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function G(e,t=null,{progress_callback:n=null,config:r=null,cache_dir:s=null,local_files_only:o=!1,revision:i="main",device:l=null,dtype:d=null,model_file_name:u=null,session_options:c={}}={}){e=V[e]??e;const p=j[e.split("_",1)[0]];if(!p)throw Error(`Unsupported pipeline: ${e}. Must be one of [${Object.keys(j)}]`);t||(t=p.default.model,console.log(`No model specified. Using default model: "${t}".`));const h={progress_callback:n,config:r,cache_dir:s,local_files_only:o,revision:i,device:l,dtype:d,model_file_name:u,session_options:c},m=new Map([["tokenizer",p.tokenizer],["model",p.model],["processor",p.processor]]),f=await async function(e,t,n){const r=Object.create(null),s=[];for(const[o,i]of e.entries()){if(!i)continue;let e;e=Array.isArray(i)?new Promise((async(e,r)=>{let s;for(const o of i){if(null===o)return void e(null);try{return void e(await o.from_pretrained(t,n))}catch(e){if(e.message?.includes("Unsupported model type"))s=e;else{if(!e.message?.includes("Could not locate file"))return void r(e);s=e}}}r(s)})):i.from_pretrained(t,n),r[o]=e,s.push(e)}await Promise.all(s);for(const[e,t]of Object.entries(r))r[e]=await t;return r}(m,t,h);f.task=e,(0,a.dispatchCallback)(n,{status:"ready",task:e,model:t});return new(0,p.pipeline)(f)}},"./src/tokenizers.js":
  /*!***************************!*\
    !*** ./src/tokenizers.js ***!
    \***************************/(e,t,n)=>{n.r(t),n.d(t,{AlbertTokenizer:()=>xe,AutoTokenizer:()=>mt,BartTokenizer:()=>Oe,BertTokenizer:()=>ve,BlenderbotSmallTokenizer:()=>lt,BlenderbotTokenizer:()=>at,BloomTokenizer:()=>Re,CLIPTokenizer:()=>rt,CamembertTokenizer:()=>Fe,CodeGenTokenizer:()=>nt,CodeLlamaTokenizer:()=>Ge,CohereTokenizer:()=>pt,ConvBertTokenizer:()=>Pe,DebertaTokenizer:()=>ke,DebertaV2Tokenizer:()=>$e,DistilBertTokenizer:()=>Ee,ElectraTokenizer:()=>Ie,EsmTokenizer:()=>Xe,FalconTokenizer:()=>We,GPT2Tokenizer:()=>Le,GPTNeoXTokenizer:()=>He,GemmaTokenizer:()=>Ke,Grok1Tokenizer:()=>Ye,HerbertTokenizer:()=>Ce,LlamaTokenizer:()=>Ve,M2M100Tokenizer:()=>et,MBart50Tokenizer:()=>De,MBartTokenizer:()=>Be,MPNetTokenizer:()=>qe,MarianTokenizer:()=>ot,MgpstrTokenizer:()=>ht,MobileBertTokenizer:()=>Me,NllbTokenizer:()=>Ze,NougatTokenizer:()=>ut,PreTrainedTokenizer:()=>be,Qwen2Tokenizer:()=>Qe,RoFormerTokenizer:()=>Se,RobertaTokenizer:()=>Ne,SiglipTokenizer:()=>st,SpeechT5Tokenizer:()=>dt,SqueezeBertTokenizer:()=>Te,T5Tokenizer:()=>ze,TokenizerModel:()=>M,VitsTokenizer:()=>ct,Wav2Vec2CTCTokenizer:()=>it,WhisperTokenizer:()=>tt,XLMRobertaTokenizer:()=>Ue,XLMTokenizer:()=>Ae,is_chinese_char:()=>_});var r=n(/*! ./utils/generic.js */"./src/utils/generic.js"),s=n(/*! ./utils/core.js */"./src/utils/core.js"),o=n(/*! ./utils/hub.js */"./src/utils/hub.js"),i=n(/*! ./utils/maths.js */"./src/utils/maths.js"),a=n(/*! ./utils/tensor.js */"./src/utils/tensor.js"),l=n(/*! ./utils/data-structures.js */"./src/utils/data-structures.js"),d=n(/*! @huggingface/jinja */"./node_modules/@huggingface/jinja/dist/index.js"),u=n(/*! ./models/whisper/common_whisper.js */"./src/models/whisper/common_whisper.js");n(/*! ./utils/constants.js */"./src/utils/constants.js");async function c(e,t){const n=await Promise.all([(0,o.getModelJSON)(e,"tokenizer.json",!0,t),(0,o.getModelJSON)(e,"tokenizer_config.json",!0,t)]);return null!==t.legacy&&(n[1].legacy=t.legacy),n}function p(e,t=!0){if(void 0!==e.Regex){let t=e.Regex.replace(/\\([#&~])/g,"$1");for(const[e,n]of v)t=t.replaceAll(e,n);return new RegExp(t,"gu")}if(void 0!==e.String){const n=(0,s.escapeRegExp)(e.String);return new RegExp(t?n:`(${n})`,"gu")}return console.warn("Unknown pattern type:",e),null}function h(e){return new Map(Object.entries(e))}function m(e){const t=e.dims;switch(t.length){case 1:return e.tolist();case 2:if(1!==t[0])throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return e.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${t.length}.`)}}function f(e){return e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function g(e){return e.replace(/\p{M}/gu,"")}function _(e){return e>=19968&&e<=40959||e>=13312&&e<=19903||e>=131072&&e<=173791||e>=173824&&e<=177983||e>=177984&&e<=178207||e>=178208&&e<=183983||e>=63744&&e<=64255||e>=194560&&e<=195103}const w="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",y=new RegExp(`^[${w}]+$`,"gu"),b=".,!?…。，、।۔،",v=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${b}])]+`,` ?[^\\s${b}]+`]]);class x{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class M extends r.Callable{constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...t){switch(e.type){case"WordPiece":return new T(e);case"Unigram":return new k(e,...t);case"BPE":return new P(e);default:if(e.vocab)return Array.isArray(e.vocab)?new k(e,...t):new S(e,...t);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){return e=this.encode(e),this.fuse_unk&&(e=function(e,t,n){const r=[];let s=0;for(;s<e.length;)if(r.push(e[s]),(t.get(e[s])??n)===n)for(;++s<e.length&&(t.get(e[s])??n)===n;)t.get(r.at(-1))!==n&&(r[r.length-1]+=e[s]);else++s;return r}(e,this.tokens_to_ids,this.unk_token_id)),e}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map((e=>this.tokens_to_ids.get(e)??this.unk_token_id))}convert_ids_to_tokens(e){return e.map((e=>this.vocab[e]??this.unk_token))}}class T extends M{constructor(e){super(e),this.tokens_to_ids=h(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){const t=[];for(const n of e){const e=[...n];if(e.length>this.max_input_chars_per_word){t.push(this.unk_token);continue}let r=!1,s=0;const o=[];for(;s<e.length;){let t=e.length,n=null;for(;s<t;){let r=e.slice(s,t).join("");if(s>0&&(r=this.config.continuing_subword_prefix+r),this.tokens_to_ids.has(r)){n=r;break}--t}if(null===n){r=!0;break}o.push(n),s=t}r?t.push(this.unk_token):t.push(...o)}return t}}class k extends M{constructor(e,t){super(e);const n=e.vocab.length;this.vocab=new Array(n),this.scores=new Array(n);for(let t=0;t<n;++t){const n=e.vocab[t];this.vocab[t]=n[0],this.scores[t]=n[1]}this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map(((e,t)=>[e,t]))),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,i.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const t=e.chars;let n=0;for(;n<t.length;){let r=!1;const o=[],i=t.slice(n).join(""),a=this.trie.commonPrefixSearch(i);for(const t of a){o.push(t);const i=this.tokens_to_ids.get(t),a=this.scores[i],l=(0,s.len)(t);e.insert(n,l,a,i),r||1!==l||(r=!0)}r||e.insert(n,1,this.unk_score,this.unk_token_id),n+=1}}tokenize(e){const t=new l.TokenLattice(e,this.bos_token_id,this.eos_token_id);return this.populateNodes(t),t.tokens()}encode(e){const t=[];for(const n of e){const e=this.tokenize(n);t.push(...e)}return t}}const $=(()=>{const e=[...Array.from({length:"~".charCodeAt(0)-"!".charCodeAt(0)+1},((e,t)=>t+"!".charCodeAt(0))),...Array.from({length:"¬".charCodeAt(0)-"¡".charCodeAt(0)+1},((e,t)=>t+"¡".charCodeAt(0))),...Array.from({length:"ÿ".charCodeAt(0)-"®".charCodeAt(0)+1},((e,t)=>t+"®".charCodeAt(0)))],t=e.slice();let n=0;for(let r=0;r<256;++r)e.includes(r)||(e.push(r),t.push(256+n),n+=1);const r=t.map((e=>String.fromCharCode(e)));return Object.fromEntries(e.map(((e,t)=>[e,r[t]])))})(),C=(0,s.reverseDictionary)($);class P extends M{constructor(e){super(e),this.tokens_to_ids=h(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e;const t=Array.isArray(e.merges[0]);this.merges=t?e.merges:e.merges.map((e=>e.split(" ",2))),this.bpe_ranks=new Map(this.merges.map(((e,t)=>[JSON.stringify(e),t]))),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(e){if(0===e.length)return[];const t=this.cache.get(e);if(void 0!==t)return t;const n=Array.from(e);this.end_of_word_suffix&&(n[n.length-1]+=this.end_of_word_suffix);let r=[];if(n.length>1){const e=new l.PriorityQueue(((e,t)=>e.score<t.score));let t={token:n[0],bias:0,prev:null,next:null},s=t;for(let t=1;t<n.length;++t){const r={bias:t/n.length,token:n[t],prev:s,next:null};s.next=r,this._add_node(e,s),s=r}for(;!e.isEmpty();){const n=e.pop();if(n.deleted||!n.next||n.next.deleted)continue;if(n.deleted=!0,n.next.deleted=!0,n.prev){const e={...n.prev};n.prev.deleted=!0,n.prev=e,e.prev?e.prev.next=e:t=e}const r={token:n.token+n.next.token,bias:n.bias,prev:n.prev,next:n.next.next};r.prev?(r.prev.next=r,this._add_node(e,r.prev)):t=r,r.next&&(r.next.prev=r,this._add_node(e,r))}for(let e=t;null!==e;e=e.next)r.push(e.token)}else r=n;if(this.continuing_subword_suffix)for(let e=0;e<r.length-1;++e)r[e]+=this.continuing_subword_suffix;return this.cache.set(e,r),r}_add_node(e,t){const n=this.bpe_ranks.get(JSON.stringify([t.token,t.next.token]));void 0!==n&&(t.score=n+t.bias,e.push(t))}encode(e){const t=[];for(const n of e){if(this.ignore_merges&&this.tokens_to_ids.has(n)){t.push(n);continue}const e=this.bpe(n);for(const n of e)if(this.tokens_to_ids.has(n))t.push(n);else if(this.byte_fallback){const e=Array.from(this.text_encoder.encode(n)).map((e=>`<0x${e.toString(16).toUpperCase().padStart(2,"0")}>`));e.every((e=>this.tokens_to_ids.has(e)))?t.push(...e):t.push(this.unk_token)}else t.push(this.unk_token)}return t}}class S extends M{constructor(e,t){super(e),this.tokens_to_ids=h(t.target_lang?e.vocab[t.target_lang]:e.vocab),this.bos_token=t.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=t.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=t.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){return e}}class E extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"BertNormalizer":return new R(e);case"Precompiled":return new pe(e);case"Sequence":return new N(e);case"Replace":return new F(e);case"NFC":return new A(e);case"NFKC":return new I(e);case"NFKD":return new z(e);case"Strip":return new L(e);case"StripAccents":return new O(e);case"Lowercase":return new B(e);case"Prepend":return new D(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class F extends E{normalize(e){const t=p(this.config.pattern);return null===t?e:e.replaceAll(t,this.config.content)}}class A extends E{normalize(e){return e=e.normalize("NFC")}}class I extends E{normalize(e){return e=e.normalize("NFKC")}}class z extends E{normalize(e){return e=e.normalize("NFKD")}}class L extends E{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class O extends E{normalize(e){return e=g(e)}}class B extends E{normalize(e){return e=e.toLowerCase()}}class D extends E{normalize(e){return e=this.config.prepend+e}}class N extends E{constructor(e){super(e),this.normalizers=e.normalizers.map((e=>E.fromConfig(e)))}normalize(e){return this.normalizers.reduce(((e,t)=>t.normalize(e)),e)}}class R extends E{_tokenize_chinese_chars(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n];_(r.charCodeAt(0))?(t.push(" "),t.push(r),t.push(" ")):t.push(r)}return t.join("")}stripAccents(e){return e.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(e){switch(e){case"\t":case"\n":case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(e)}}_clean_text(e){const t=[];for(const n of e){const e=n.charCodeAt(0);0===e||65533===e||this._is_control(n)||(/^\s$/.test(n)?t.push(" "):t.push(n))}return t.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),!1!==this.config.strip_accents&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class j extends r.Callable{static fromConfig(e){if(null===e)return null;switch(e.type){case"BertPreTokenizer":return new V(e);case"Sequence":return new he(e);case"Whitespace":return new me(e);case"WhitespaceSplit":return new fe(e);case"Metaspace":return new ue(e);case"ByteLevel":return new G(e);case"Split":return new U(e);case"Punctuation":return new q(e);case"Digits":return new W(e);case"Replace":return new ge(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,t){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,t){return(Array.isArray(e)?e.map((e=>this.pre_tokenize_text(e,t))):this.pre_tokenize_text(e,t)).flat()}_call(e,t){return this.pre_tokenize(e,t)}}class V extends j{constructor(e){super(),this.pattern=new RegExp(`[^\\s${w}]+|[${w}]`,"gu")}pre_tokenize_text(e,t){return e.trim().match(this.pattern)||[]}}class G extends j{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=$,this.text_encoder=new TextEncoder}pre_tokenize_text(e,t){this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e);return(this.use_regex?e.match(this.pattern)||[]:[e]).map((e=>Array.from(this.text_encoder.encode(e),(e=>this.byte_encoder[e])).join("")))}}class U extends j{constructor(e){super(),this.config=e,this.pattern=p(this.config.pattern,this.config.invert)}pre_tokenize_text(e,t){return null===this.pattern?[]:this.config.invert?e.match(this.pattern)||[]:"removed"===this.config.behavior?.toLowerCase()?e.split(this.pattern).filter((e=>e)):function(e,t){const n=[];let r=0;for(const s of e.matchAll(t)){const t=s[0];r<s.index&&n.push(e.slice(r,s.index)),t.length>0&&n.push(t),r=s.index+t.length}return r<e.length&&n.push(e.slice(r)),n}(e,this.pattern)}}class q extends j{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${w}]+|[${w}]+`,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class W extends j{constructor(e){super(),this.config=e;const t="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(t,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class H extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"TemplateProcessing":return new K(e);case"ByteLevel":return new Y(e);case"RobertaProcessing":return new Q(e);case"BertProcessing":return new X(e);case"Sequence":return new J(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...t){throw Error("post_process should be implemented in subclass.")}_call(e,...t){return this.post_process(e,...t)}}class X extends H{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,t=null,{add_special_tokens:n=!0}={}){n&&(e=(0,s.mergeArrays)([this.cls],e,[this.sep]));let r=new Array(e.length).fill(0);if(null!==t){const o=n&&this instanceof Q?[this.sep]:[],i=n?[this.sep]:[];e=(0,s.mergeArrays)(e,o,t,i),r=(0,s.mergeArrays)(r,new Array(t.length+o.length+i.length).fill(1))}return{tokens:e,token_type_ids:r}}}class Q extends X{}class K extends H{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,t=null,{add_special_tokens:n=!0}={}){const r=null===t?this.single:this.pair;let o=[],i=[];for(const a of r)"SpecialToken"in a?n&&(o.push(a.SpecialToken.id),i.push(a.SpecialToken.type_id)):"Sequence"in a&&("A"===a.Sequence.id?(o=(0,s.mergeArrays)(o,e),i=(0,s.mergeArrays)(i,new Array(e.length).fill(a.Sequence.type_id))):"B"===a.Sequence.id&&(o=(0,s.mergeArrays)(o,t),i=(0,s.mergeArrays)(i,new Array(t.length).fill(a.Sequence.type_id))));return{tokens:o,token_type_ids:i}}}class Y extends H{post_process(e,t=null){return t&&(e=(0,s.mergeArrays)(e,t)),{tokens:e}}}class J extends H{constructor(e){super(e),this.processors=e.processors.map((e=>H.fromConfig(e)))}post_process(e,t=null,n={}){let r;for(const s of this.processors)if(s instanceof Y){if(e=s.post_process(e).tokens,t){t=s.post_process(t).tokens}}else{const o=s.post_process(e,t,n);e=o.tokens,r=o.token_type_ids}return{tokens:e,token_type_ids:r}}}class Z extends r.Callable{constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(null===e)return null;switch(e.type){case"WordPiece":return new se(e);case"Metaspace":return new ce(e);case"ByteLevel":return new oe(e);case"Replace":return new ee(e);case"ByteFallback":return new te(e);case"Fuse":return new ne(e);case"Strip":return new re(e);case"Sequence":return new ae(e);case"CTC":return new ie(e);case"BPEDecoder":return new le(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class ee extends Z{decode_chain(e){const t=p(this.config.pattern);return null===t?e:e.map((e=>e.replaceAll(t,this.config.content)))}}class te extends Z{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const t=[];let n=[];for(const r of e){let e=null;if(6===r.length&&r.startsWith("<0x")&&r.endsWith(">")){const t=parseInt(r.slice(3,5),16);isNaN(t)||(e=t)}if(null!==e)n.push(e);else{if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}t.push(r)}}if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}return t}}class ne extends Z{decode_chain(e){return[e.join("")]}}class re extends Z{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map((e=>{let t=0;for(let n=0;n<this.start&&e[n]===this.content;++n)t=n+1;let n=e.length;for(let t=0;t<this.stop;++t){const r=e.length-t-1;if(e[r]!==this.content)break;n=r}return e.slice(t,n)}))}}class se extends Z{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map(((e,t)=>(0!==t&&(e=e.startsWith(this.config.prefix)?e.replace(this.config.prefix,""):" "+e),this.cleanup&&(e=f(e)),e)))}}class oe extends Z{constructor(e){super(e),this.byte_decoder=C,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const t=e.join(""),n=new Uint8Array([...t].map((e=>this.byte_decoder[e])));return this.text_decoder.decode(n)}decode_chain(e){const t=[];let n=[];for(const r of e)void 0!==this.added_tokens.find((e=>e.content===r))?(n.length>0&&(t.push(this.convert_tokens_to_string(n)),n=[]),t.push(r)):n.push(r);return n.length>0&&t.push(this.convert_tokens_to_string(n)),t}}class ie extends Z{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(0===e.length)return"";const t=[e[0]];for(let n=1;n<e.length;++n)e[n]!==t.at(-1)&&t.push(e[n]);let n=t.filter((e=>e!==this.pad_token)).join("");return this.cleanup&&(n=f(n).replaceAll(this.word_delimiter_token," ").trim()),n}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class ae extends Z{constructor(e){super(e),this.decoders=e.decoders.map((e=>Z.fromConfig(e)))}decode_chain(e){return this.decoders.reduce(((e,t)=>t.decode_chain(e)),e)}}class le extends Z{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map(((t,n)=>t.replaceAll(this.suffix,n===e.length-1?"":" ")))}}class de extends Z{decode_chain(e){let t="";for(let n=1;n<e.length;n+=2)t+=e[n];return[t]}}class ue extends j{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e,{section_index:t}={}){let n=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!n.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===t)&&(n=this.strRep+n),[n]}}class ce extends Z{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const t=[];for(let n=0;n<e.length;++n){let r=e[n].replaceAll(this.replacement," ");this.addPrefixSpace&&0==n&&r.startsWith(" ")&&(r=r.substring(1)),t.push(r)}return t}}class pe extends E{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){if((e=(e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")){const t=e.split("～");e=t.map((e=>e.normalize("NFKC"))).join("～")}else e=e.normalize("NFKC");return e}}class he extends j{constructor(e){super(),this.tokenizers=e.pretokenizers.map((e=>j.fromConfig(e)))}pre_tokenize_text(e,t){return this.tokenizers.reduce(((e,n)=>n.pre_tokenize(e,t)),[e])}}class me extends j{constructor(e){super()}pre_tokenize_text(e,t){return e.match(/\w+|[^\w\s]+/g)||[]}}class fe extends j{constructor(e){super()}pre_tokenize_text(e,t){return function(e){return e.match(/\S+/g)||[]}(e)}}class ge extends j{constructor(e){super(),this.config=e,this.pattern=p(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,t){return null===this.pattern?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const _e=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function we(e,t,n,r){for(const o of Object.keys(e)){const i=t-e[o].length,a=n(o),l=new Array(i).fill(a);e[o]="right"===r?(0,s.mergeArrays)(e[o],l):(0,s.mergeArrays)(l,e[o])}}function ye(e,t){for(const n of Object.keys(e))e[n].length=t}class be extends r.Callable{return_token_type_ids=!1;padding_side="right";constructor(e,t){super(),this._tokenizer_config=t,this.normalizer=E.fromConfig(e.normalizer),this.pre_tokenizer=j.fromConfig(e.pre_tokenizer),this.model=M.fromConfig(e.model,t),this.post_processor=H.fromConfig(e.post_processor),this.decoder=Z.fromConfig(e.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const t of e.added_tokens){const e=new x(t);this.added_tokens.push(e),this.model.tokens_to_ids.set(e.content,e.id),this.model.vocab[e.id]=e.content,e.special&&(this.special_tokens.push(e.content),this.all_special_ids.push(e.id))}if(this.additional_special_tokens=t.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.slice().sort(((e,t)=>t.content.length-e.content.length)).map((e=>`${e.lstrip?"\\s*":""}(${(0,s.escapeRegExp)(e.content)})${e.rstrip?"\\s*":""}`)).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=t.model_max_length,this.remove_space=t.remove_space,this.clean_up_tokenization_spaces=t.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=t.do_lowercase_and_remove_accent??!1,t.padding_side&&(this.padding_side=t.padding_side),this.legacy=!1,this.chat_template=t.chat_template??null,Array.isArray(this.chat_template)){const e=Object.create(null);for(const{name:t,template:n}of this.chat_template){if("string"!=typeof t||"string"!=typeof n)throw new Error('Chat template must be a list of objects with "name" and "template" properties');e[t]=n}this.chat_template=e}this._compiled_template_cache=new Map}getToken(...e){for(const t of e){const e=this._tokenizer_config[t];if(e){if("object"==typeof e){if("AddedToken"===e.__type)return e.content;throw Error(`Unknown token: ${e}`)}return e}}return null}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:o="main",legacy:i=null}={}){return new this(...await c(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:o,legacy:i}))}_call(e,{text_pair:t=null,add_special_tokens:n=!0,padding:r=!1,truncation:s=null,max_length:o=null,return_tensor:l=!0,return_token_type_ids:d=null}={}){const u=Array.isArray(e);let c;if(u){if(0===e.length)throw Error("text array must be non-empty");if(null!==t){if(!Array.isArray(t))throw Error("text_pair must also be an array");if(e.length!==t.length)throw Error("text and text_pair must have the same length");c=e.map(((e,r)=>this._encode_plus(e,{text_pair:t[r],add_special_tokens:n,return_token_type_ids:d})))}else c=e.map((e=>this._encode_plus(e,{add_special_tokens:n,return_token_type_ids:d})))}else{if(null==e)throw Error("text may not be null or undefined");if(Array.isArray(t))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");c=[this._encode_plus(e,{text_pair:t,add_special_tokens:n,return_token_type_ids:d})]}if(null===o?o="max_length"===r?this.model_max_length:(0,i.max)(c.map((e=>e.input_ids.length)))[0]:s||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),o=Math.min(o,this.model_max_length??1/0),r||s)for(let e=0;e<c.length;++e)c[e].input_ids.length!==o&&(c[e].input_ids.length>o?s&&ye(c[e],o):r&&we(c[e],o,(e=>"input_ids"===e?this.pad_token_id:0),this.padding_side));const p={};if(l){if((!r||!s)&&c.some((e=>{for(const t of Object.keys(e))if(e[t].length!==c[0][t]?.length)return!0;return!1})))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const e=[c.length,c[0].input_ids.length];for(const t of Object.keys(c[0]))p[t]=new a.Tensor("int64",BigInt64Array.from(c.flatMap((e=>e[t])).map(BigInt)),e)}else{for(const e of Object.keys(c[0]))p[e]=c.map((t=>t[e]));if(!u)for(const e of Object.keys(p))p[e]=p[e][0]}return p}_encode_text(e){if(null===e)return null;const t=(this.added_tokens_regex?e.split(this.added_tokens_regex).filter((e=>e)):[e]).map(((e,t)=>{if(void 0!==this.added_tokens.find((t=>t.content===e)))return e;{if(!0===this.remove_space&&(e=e.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(e=function(e){return g(e.toLowerCase())}(e)),null!==this.normalizer&&(e=this.normalizer(e)),0===e.length)return[];const n=null!==this.pre_tokenizer?this.pre_tokenizer(e,{section_index:t}):[e];return this.model(n)}})).flat();return t}_encode_plus(e,{text_pair:t=null,add_special_tokens:n=!0,return_token_type_ids:r=null}={}){const{tokens:s,token_type_ids:o}=this._tokenize_helper(e,{pair:t,add_special_tokens:n}),i=this.model.convert_tokens_to_ids(s),a={input_ids:i,attention_mask:new Array(i.length).fill(1)};return(r??this.return_token_type_ids)&&o&&(a.token_type_ids=o),a}_tokenize_helper(e,{pair:t=null,add_special_tokens:n=!1}={}){const r=this._encode_text(e),o=this._encode_text(t);return this.post_processor?this.post_processor(r,o,{add_special_tokens:n}):{tokens:(0,s.mergeArrays)(r??[],o??[])}}tokenize(e,{pair:t=null,add_special_tokens:n=!1}={}){return this._tokenize_helper(e,{pair:t,add_special_tokens:n}).tokens}encode(e,{text_pair:t=null,add_special_tokens:n=!0,return_token_type_ids:r=null}={}){return this._encode_plus(e,{text_pair:t,add_special_tokens:n,return_token_type_ids:r}).input_ids}batch_decode(e,t={}){return e instanceof a.Tensor&&(e=e.tolist()),e.map((e=>this.decode(e,t)))}decode(e,t={}){if(e instanceof a.Tensor&&(e=m(e)),!Array.isArray(e)||0===e.length||!(0,s.isIntegralNumber)(e[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(e,t)}decode_single(e,{skip_special_tokens:t=!1,clean_up_tokenization_spaces:n=null}){let r=this.model.convert_ids_to_tokens(e);t&&(r=r.filter((e=>!this.special_tokens.includes(e))));let s=this.decoder?this.decoder(r):r.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(s=s.replaceAll(this.decoder.end_of_word_suffix," "),t&&(s=s.trim())),(n??this.clean_up_tokenization_spaces)&&(s=f(s)),s}get_chat_template({chat_template:e=null,tools:t=null}={}){if(this.chat_template&&"object"==typeof this.chat_template){const n=this.chat_template;if(null!==e&&Object.hasOwn(n,e))e=n[e];else if(null===e)if(null!==t&&"tool_use"in n)e=n.tool_use;else{if(!("default"in n))throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(n).sort()}.`);e=n.default}}else if(null===e){if(!this.chat_template)throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");e=this.chat_template}return e}apply_chat_template(e,{tools:t=null,documents:n=null,chat_template:r=null,add_generation_prompt:s=!1,tokenize:o=!0,padding:i=!1,truncation:a=!1,max_length:l=null,return_tensor:u=!0,return_dict:c=!1,tokenizer_kwargs:p={},...h}={}){if("string"!=typeof(r=this.get_chat_template({chat_template:r,tools:t})))throw Error("chat_template must be a string, but got "+typeof r);let m=this._compiled_template_cache.get(r);void 0===m&&(m=new d.Template(r),this._compiled_template_cache.set(r,m));const f=Object.create(null);for(const e of _e){const t=this.getToken(e);t&&(f[e]=t)}const g=m.render({messages:e,add_generation_prompt:s,tools:t,documents:n,...f,...h});if(o){const e=this._call(g,{add_special_tokens:!1,padding:i,truncation:a,max_length:l,return_tensor:u,...p});return c?e:e.input_ids}return g}}class ve extends be{return_token_type_ids=!0}class xe extends be{return_token_type_ids=!0}class Me extends be{return_token_type_ids=!0}class Te extends be{return_token_type_ids=!0}class ke extends be{return_token_type_ids=!0}class $e extends be{return_token_type_ids=!0}class Ce extends be{return_token_type_ids=!0}class Pe extends be{return_token_type_ids=!0}class Se extends be{return_token_type_ids=!0}class Ee extends be{}class Fe extends be{}class Ae extends be{return_token_type_ids=!0;constructor(e,t){super(e,t),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Ie extends be{return_token_type_ids=!0}class ze extends be{}class Le extends be{}class Oe extends be{}class Be extends be{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return Je(this,e,t,n)}}class De extends Be{}class Ne extends be{}class Re extends be{}const je="▁";class Ve extends be{padding_side="left";constructor(e,t){super(e,t),this.legacy=t.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new ue({replacement:je,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(e){if(null===e)return null;if(this.legacy||0===e.length)return super._encode_text(e);let t=super._encode_text(je+e.replaceAll(je," "));return t.length>1&&t[0]===je&&this.special_tokens.includes(t[1])&&(t=t.slice(1)),t}}class Ge extends be{}class Ue extends be{}class qe extends be{}class We extends be{}class He extends be{}class Xe extends be{}class Qe extends be{}class Ke extends be{}class Ye extends be{}function Je(e,t,n,r){if(!("language_codes"in e)||!Array.isArray(e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in e&&e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in e)||"function"!=typeof e.lang_to_token)throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const s=r.src_lang,o=r.tgt_lang;if(!e.language_codes.includes(o))throw new Error(`Target language code "${o}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);if(void 0!==s){if(!e.language_codes.includes(s))throw new Error(`Source language code "${s}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);for(const t of e.post_processor.config.single)if("SpecialToken"in t&&e.languageRegex.test(t.SpecialToken.id)){t.SpecialToken.id=e.lang_to_token(s);break}}return r.forced_bos_token_id=e.model.convert_tokens_to_ids([e.lang_to_token(o)])[0],e._call(t,n)}class Ze extends be{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return Je(this,e,t,n)}}class et extends be{constructor(e,t){super(e,t),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))).map((e=>e.slice(2,-2))),this.lang_to_token=e=>`__${e}__`}_build_translation_inputs(e,t,n){return Je(this,e,t,n)}}class tt extends be{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(e,{return_timestamps:t=!1,return_language:n=!1,time_precision:r=null,force_full_sequences:s=!0}={}){if(null===r)throw Error("Must specify time_precision");let o=null;const a="word"===t;function l(){return{language:o,timestamp:[null,null],text:""}}const d=[];let c=l(),p=0;const h=this.timestamp_begin;let m=[],f=[],g=!1,_=null;const w=new Set(this.all_special_ids);for(const n of e){const e=n.tokens,s=a?n.token_timestamps:null;let b=null,v=h;if("stride"in n){const[t,s,o]=n.stride;if(p-=s,_=t-o,s&&(v=s/r+h),o)for(let t=e.length-1;t>=0;--t){const n=Number(e[t]);if(n>=h){if(null!==b&&(n-h)*r<_)break;b=n}}}let x=[],M=[];for(let n=0;n<e.length;++n){const _=Number(e[n]);if(w.has(_)){const e=this.decode([_]),n=u.WHISPER_LANGUAGE_MAPPING.get(e.slice(2,-2));if(void 0!==n){if(null!==o&&n!==o&&!t){m.push(x);const e=this.findLongestCommonSequence(m)[0],t=this.decode(e);c.text=t,d.push(c),m=[],x=[],c=l()}o=c.language=n}}else if(_>=h){const e=(_-h)*r+p,t=(0,i.round)(e,2);if(null!==b&&_>=b)g=!0;else if(g||m.length>0&&_<v)g=!1;else if(null===c.timestamp[0])c.timestamp[0]=t;else if(t===c.timestamp[0]);else{c.timestamp[1]=t,m.push(x),a&&f.push(M);const[e,n]=this.findLongestCommonSequence(m,f),r=this.decode(e);c.text=r,a&&(c.words=this.collateWordTimestamps(e,n,o)),d.push(c),m=[],x=[],f=[],M=[],c=l()}}else if(x.push(_),a){let e,t=(0,i.round)(s[n]+p,2);if(n+1<s.length){e=(0,i.round)(s[n+1]+p,2);const o=this.decode([_]);y.test(o)&&(e=(0,i.round)(Math.min(t+r,e),2))}else e=null;M.push([t,e])}}if("stride"in n){const[e,t,r]=n.stride;p+=e-r}x.length>0?(m.push(x),a&&f.push(M)):m.every((e=>0===e.length))&&(c=l(),m=[],x=[],f=[],M=[])}if(m.length>0){if(s&&t)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[e,n]=this.findLongestCommonSequence(m,f),r=this.decode(e);c.text=r,a&&(c.words=this.collateWordTimestamps(e,n,o)),d.push(c)}let b=Object.create(null);const v=d.map((e=>e.text)).join("");if(t||n){for(let e=0;e<d.length;++e){const r=d[e];t||delete r.timestamp,n||delete r.language}if(a){const e=[];for(const t of d)for(const n of t.words)e.push(n);b={chunks:e}}else b={chunks:d}}return[v,b]}findLongestCommonSequence(e,t=null){let n=e[0],r=n.length,s=[];const o=Array.isArray(t)&&t.length>0;let i=o?[]:null,a=o?t[0]:null;for(let l=1;l<e.length;++l){const d=e[l];let u=0,c=[r,r,0,0];const p=d.length;for(let e=1;e<r+p;++e){const s=Math.max(0,r-e),i=Math.min(r,r+p-e),h=n.slice(s,i),m=Math.max(0,e-r),f=Math.min(p,e),g=d.slice(m,f);if(h.length!==g.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let _;_=o?h.filter(((e,n)=>e===g[n]&&a[s+n]<=t[l][m+n])).length:h.filter(((e,t)=>e===g[t])).length;const w=_/e+e/1e4;_>1&&w>u&&(u=w,c=[s,i,m,f])}const[h,m,f,g]=c,_=Math.floor((m+h)/2),w=Math.floor((g+f)/2);s.push(...n.slice(0,_)),n=d.slice(w),r=n.length,o&&(i.push(...a.slice(0,_)),a=t[l].slice(w))}return s.push(...n),o?(i.push(...a),[s,i]):[s,[]]}collateWordTimestamps(e,t,n){const[r,s,o]=this.combineTokensIntoWords(e,n),i=[];for(let e=0;e<r.length;++e){const n=o[e];i.push({text:r[e],timestamp:[t[n.at(0)][0],t[n.at(-1)][1]]})}return i}combineTokensIntoWords(e,t,n="\"'“¡¿([{-",r="\"'.。,，!！?？:：”)]}、"){let s,o,i;return["chinese","japanese","thai","lao","myanmar"].includes(t=t??"english")?[s,o,i]=this.splitTokensOnUnicode(e):[s,o,i]=this.splitTokensOnSpaces(e),this.mergePunctuations(s,o,i,n,r)}decode(e,t){let n;return t?.decode_with_timestamps?(e instanceof a.Tensor&&(e=m(e)),n=this.decodeWithTimestamps(e,t)):n=super.decode(e,t),n}decodeWithTimestamps(e,t){const n=t?.time_precision??.02,r=Array.from(this.all_special_ids).at(-1)+1;let s=[[]];for(let t of e)if(t=Number(t),t>=r){const e=((t-r)*n).toFixed(2);s.push(`<|${e}|>`),s.push([])}else s[s.length-1].push(t);return s=s.map((e=>"string"==typeof e?e:super.decode(e,t))),s.join("")}splitTokensOnUnicode(e){const t=this.decode(e,{decode_with_timestamps:!0}),n=[],r=[],s=[];let o=[],i=[],a=0;for(let l=0;l<e.length;++l){const d=e[l];o.push(d),i.push(l);const u=this.decode(o,{decode_with_timestamps:!0});u.includes("�")&&"�"!==t[a+u.indexOf("�")]||(n.push(u),r.push(o),s.push(i),o=[],i=[],a+=u.length)}return[n,r,s]}splitTokensOnSpaces(e){const[t,n,r]=this.splitTokensOnUnicode(e),s=[],o=[],i=[],a=new RegExp(`^[${w}]$`,"gu");for(let e=0;e<t.length;++e){const l=t[e],d=n[e],u=r[e],c=d[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),p=l.startsWith(" "),h=l.trim(),m=a.test(h);if(c||p||m||0===s.length)s.push(l),o.push(d),i.push(u);else{const e=s.length-1;s[e]+=l,o[e].push(...d),i[e].push(...u)}}return[s,o,i]}mergePunctuations(e,t,n,r,o){const i=structuredClone(e),a=structuredClone(t),l=structuredClone(n);let d=i.length-2,u=i.length-1;for(;d>=0;)i[d].startsWith(" ")&&r.includes(i[d].trim())?(i[u]=i[d]+i[u],a[u]=(0,s.mergeArrays)(a[d],a[u]),l[u]=(0,s.mergeArrays)(l[d],l[u]),i[d]="",a[d]=[],l[d]=[]):u=d,--d;for(d=0,u=1;u<i.length;)!i[d].endsWith(" ")&&o.includes(i[u])?(i[d]+=i[u],a[d]=(0,s.mergeArrays)(a[d],a[u]),l[d]=(0,s.mergeArrays)(l[d],l[u]),i[u]="",a[u]=[],l[u]=[]):d=u,++u;return[i.filter((e=>e)),a.filter((e=>e.length>0)),l.filter((e=>e.length>0))]}}class nt extends be{}class rt extends be{}class st extends be{}class ot extends be{constructor(e,t){super(e,t),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter((e=>this.languageRegex.test(e))),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(null===e)return null;const[t,...n]=e.trim().split(this.languageRegex);if(0===n.length)return super._encode_text(t);if(2===n.length){const[e,t]=n;return this.supported_language_codes.includes(e)||console.warn(`Unsupported language code "${e}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,s.mergeArrays)([e],super._encode_text(t))}}}class it extends be{}class at extends be{}class lt extends be{}class dt extends be{}class ut extends be{}class ct extends be{constructor(e,t){super(e,t),this.decoder=new de({})}}class pt extends be{}class ht extends be{}class mt{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:ze,DistilBertTokenizer:Ee,CamembertTokenizer:Fe,DebertaTokenizer:ke,DebertaV2Tokenizer:$e,BertTokenizer:ve,HerbertTokenizer:Ce,ConvBertTokenizer:Pe,RoFormerTokenizer:Se,XLMTokenizer:Ae,ElectraTokenizer:Ie,MobileBertTokenizer:Me,SqueezeBertTokenizer:Te,AlbertTokenizer:xe,GPT2Tokenizer:Le,BartTokenizer:Oe,MBartTokenizer:Be,MBart50Tokenizer:De,RobertaTokenizer:Ne,WhisperTokenizer:tt,CodeGenTokenizer:nt,CLIPTokenizer:rt,SiglipTokenizer:st,MarianTokenizer:ot,BloomTokenizer:Re,NllbTokenizer:Ze,M2M100Tokenizer:et,LlamaTokenizer:Ve,CodeLlamaTokenizer:Ge,XLMRobertaTokenizer:Ue,MPNetTokenizer:qe,FalconTokenizer:We,GPTNeoXTokenizer:He,EsmTokenizer:Xe,Wav2Vec2CTCTokenizer:it,BlenderbotTokenizer:at,BlenderbotSmallTokenizer:lt,SpeechT5Tokenizer:dt,NougatTokenizer:ut,VitsTokenizer:ct,Qwen2Tokenizer:Qe,GemmaTokenizer:Ke,Grok1Tokenizer:Ye,CohereTokenizer:pt,MgpstrTokenizer:ht,PreTrainedTokenizer:be};static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:o="main",legacy:i=null}={}){const[a,l]=await c(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:o,legacy:i}),d=l.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let u=this.TOKENIZER_CLASS_MAPPING[d];return u||(console.warn(`Unknown tokenizer class "${d}", attempting to construct from base class.`),u=be),new u(a,l)}}},"./src/utils/audio.js":
  /*!****************************!*\
    !*** ./src/utils/audio.js ***!
    \****************************/(e,t,n)=>{n.r(t),n.d(t,{hamming:()=>u,hanning:()=>d,mel_filter_bank:()=>f,read_audio:()=>a,spectrogram:()=>_,window_function:()=>w});var r=n(/*! ./hub.js */"./src/utils/hub.js"),s=n(/*! ./maths.js */"./src/utils/maths.js"),o=n(/*! ./core.js */"./src/utils/core.js"),i=n(/*! ./tensor.js */"./src/utils/tensor.js");async function a(e,t){if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const n=await(await(0,r.getFile)(e)).arrayBuffer(),s=new AudioContext({sampleRate:t});void 0===t&&console.warn(`No sampling rate provided, using default of ${s.sampleRate}Hz.`);const o=await s.decodeAudioData(n);let i;if(2===o.numberOfChannels){const e=Math.sqrt(2),t=o.getChannelData(0),n=o.getChannelData(1);i=new Float32Array(t.length);for(let r=0;r<o.length;++r)i[r]=e*(t[r]+n[r])/2}else i=o.getChannelData(0);return i}function l(e,t){if(e<1)return new Float64Array;if(1===e)return new Float64Array([1]);const n=1-t,r=2*Math.PI/(e-1),s=new Float64Array(e);for(let o=0;o<e;++o)s[o]=t-n*Math.cos(o*r);return s}function d(e){return l(e,.5)}function u(e){return l(e,.54)}const c={htk:e=>2595*Math.log10(1+e/700),kaldi:e=>1127*Math.log(1+e/700),slaney:(e,t=1e3,n=15,r=27/Math.log(6.4))=>e>=t?n+Math.log(e/t)*r:3*e/200};function p(e,t="htk"){const n=c[t];if(!n)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?n(e):e.map((e=>n(e)))}const h={htk:e=>700*(10**(e/2595)-1),kaldi:e=>700*(Math.exp(e/1127)-1),slaney:(e,t=1e3,n=15,r=Math.log(6.4)/27)=>e>=n?t*Math.exp(r*(e-n)):200*e/3};function m(e,t,n){const r=(t-e)/(n-1);return Float64Array.from({length:n},((t,n)=>e+r*n))}function f(e,t,n,r,s,o=null,i="htk",a=!1){if(null!==o&&"slaney"!==o)throw new Error('norm must be one of null or "slaney"');const l=m(p(n,i),p(r,i),t+2);let d,u=function(e,t="htk"){const n=h[t];if(!n)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?n(e):e.map((e=>n(e)))}(l,i);if(a){const t=s/(2*e);d=p(Float64Array.from({length:e},((e,n)=>n*t)),i),u=l}else d=m(0,Math.floor(s/2),e);const c=function(e,t){const n=Float64Array.from({length:t.length-1},((e,n)=>t[n+1]-t[n])),r=Array.from({length:e.length},(()=>new Array(t.length)));for(let n=0;n<e.length;++n){const s=r[n];for(let r=0;r<t.length;++r)s[r]=t[r]-e[n]}const s=t.length-2,o=Array.from({length:s},(()=>new Array(e.length)));for(let t=0;t<e.length;++t){const e=r[t];for(let r=0;r<s;++r){const s=-e[r]/n[r],i=e[r+2]/n[r+1];o[r][t]=Math.max(0,Math.min(s,i))}}return o}(d,u);if(null!==o&&"slaney"===o)for(let n=0;n<t;++n){const t=c[n],r=2/(u[n+2]-u[n]);for(let n=0;n<e;++n)t[n]*=r}return c}function g(e,t,n,r,o){if(n<=0)throw new Error("reference must be greater than zero");if(r<=0)throw new Error("min_value must be greater than zero");n=Math.max(r,n);const i=Math.log10(n);for(let n=0;n<e.length;++n)e[n]=t*Math.log10(Math.max(r,e[n])-i);if(null!==o){if(o<=0)throw new Error("db_range must be greater than zero");const t=(0,s.max)(e)[0]-o;for(let n=0;n<e.length;++n)e[n]=Math.max(e[n],t)}return e}async function _(e,t,n,r,{fft_length:a=null,power:l=1,center:d=!0,pad_mode:u="reflect",onesided:c=!0,preemphasis:p=null,mel_filters:h=null,mel_floor:m=1e-10,log_mel:f=null,reference:_=1,min_value:w=1e-10,db_range:y=null,remove_dc_offset:b=null,min_num_frames:v=null,max_num_frames:x=null,do_pad:M=!0,transpose:T=!1}={}){const k=t.length;if(null===a&&(a=n),n>a)throw Error(`frame_length (${n}) may not be larger than fft_length (${a})`);if(k!==n)throw new Error(`Length of the window (${k}) must equal frame_length (${n})`);if(r<=0)throw new Error("hop_length must be greater than zero");if(null===l&&null!==h)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(d){if("reflect"!==u)throw new Error(`pad_mode="${u}" not implemented yet.`);const t=Math.floor((a-1)/2)+1;e=function(e,t,n){const r=new e.constructor(e.length+t+n),s=e.length-1;for(let n=0;n<e.length;++n)r[t+n]=e[n];for(let n=1;n<=t;++n)r[t-n]=e[(0,o.calculateReflectOffset)(n,s)];for(let i=1;i<=n;++i)r[s+t+i]=e[(0,o.calculateReflectOffset)(s-i,s)];return r}(e,t,t)}let $=Math.floor(1+Math.floor((e.length-n)/r));null!==v&&$<v&&($=v);const C=c?Math.floor(a/2)+1:a;let P=$,S=$;null!==x&&(x>$?M&&(S=x):S=P=x);const E=new s.FFT(a),F=new Float64Array(a),A=new Float64Array(E.outputBufferSize),I=new Float32Array(C*S);for(let s=0;s<P;++s){const o=s*r,i=Math.min(e.length-o,n);i!==n&&F.fill(0,0,n);for(let t=0;t<i;++t)F[t]=e[o+t];if(b){let e=0;for(let t=0;t<i;++t)e+=F[t];const t=e/i;for(let e=0;e<i;++e)F[e]-=t}if(null!==p){for(let e=i-1;e>=1;--e)F[e]-=p*F[e-1];F[0]*=1-p}for(let e=0;e<t.length;++e)F[e]*=t[e];E.realTransform(A,F);for(let e=0;e<C;++e){const t=e<<1;I[e*S+s]=A[t]**2+A[t+1]**2}}if(null!==l&&2!==l){const e=2/l;for(let t=0;t<I.length;++t)I[t]**=e}const z=h.length;let L=await(0,i.matmul)(new i.Tensor("float32",h.flat(),[z,C]),new i.Tensor("float32",I,[C,S]));T&&(L=L.transpose(1,0));const O=L.data;for(let e=0;e<O.length;++e)O[e]=Math.max(m,O[e]);if(null!==l&&null!==f){const e=Math.min(O.length,P*z);switch(f){case"log":for(let t=0;t<e;++t)O[t]=Math.log(O[t]);break;case"log10":for(let t=0;t<e;++t)O[t]=Math.log10(O[t]);break;case"dB":if(1===l)!function(e,t=1,n=1e-5,r=null){g(e,20,t,n,r)}(O,_,w,y);else{if(2!==l)throw new Error(`Cannot use log_mel option '${f}' with power ${l}`);!function(e,t=1,n=1e-10,r=null){g(e,10,t,n,r)}(O,_,w,y)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${f}'`)}}return L}function w(e,t,{periodic:n=!0,frame_length:r=null,center:s=!0}={}){const o=n?e+1:e;let i;switch(t){case"boxcar":i=new Float64Array(o).fill(1);break;case"hann":case"hann_window":i=d(o);break;case"hamming":i=u(o);break;case"povey":i=d(o).map((e=>Math.pow(e,.85)));break;default:throw new Error(`Unknown window type ${t}.`)}if(n&&(i=i.subarray(0,e)),null===r)return i;if(e>r)throw new Error(`Length of the window (${e}) may not be larger than frame_length (${r})`);return i}},"./src/utils/constants.js":
  /*!********************************!*\
    !*** ./src/utils/constants.js ***!
    \********************************/(e,t,n)=>{n.r(t),n.d(t,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>s,FEATURE_EXTRACTOR_NAME:()=>o,GENERATION_CONFIG_NAME:()=>d,GITHUB_ISSUE_URL:()=>r,IMAGE_PROCESSOR_NAME:()=>i,PROCESSOR_NAME:()=>a});const r="https://github.com/huggingface/transformers.js/issues/new/choose",s="config.json",o="preprocessor_config.json",i=o,a="processor_config.json",l="chat_template.json",d="generation_config.json"},"./src/utils/core.js":
  /*!***************************!*\
    !*** ./src/utils/core.js ***!
    \***************************/(e,t,n)=>{function r(e,t){e&&e(t)}function s(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[t,e])))}function o(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function i(e){return"TypedArray"===e?.prototype?.__proto__?.constructor?.name}function a(e){return Number.isInteger(e)||"bigint"==typeof e}function l(e){return null==e||-1===e}function d(e){const t=[];let n=e;for(;Array.isArray(n);)t.push(n.length),n=n[0];return t}function u(e,t,n=void 0){const r=e[t];if(void 0!==r)return delete e[t],r;if(void 0===n)throw Error(`Key ${t} does not exist in object.`);return n}function c(...e){return Array.prototype.concat.apply([],e)}function p(...e){return e.reduce(((e,t)=>e.flatMap((e=>t.map((t=>[e,t]))))))}function h(e,t){return Math.abs((e+t)%(2*t)-t)}function m(e,t){return Object.assign({},...t.map((t=>{if(void 0!==e[t])return{[t]:e[t]}})))}function f(e){let t=0;for(const n of e)++t;return t}function g(e,t){let n=0;for(const r of e)r===t&&++n;return n}n.r(t),n.d(t,{calculateDimensions:()=>d,calculateReflectOffset:()=>h,count:()=>g,dispatchCallback:()=>r,escapeRegExp:()=>o,isIntegralNumber:()=>a,isNullishDimension:()=>l,isTypedArray:()=>i,len:()=>f,mergeArrays:()=>c,pick:()=>m,pop:()=>u,product:()=>p,reverseDictionary:()=>s})},"./src/utils/data-structures.js":
  /*!**************************************!*\
    !*** ./src/utils/data-structures.js ***!
    \**************************************/(e,t,n)=>{n.r(t),n.d(t,{CharTrie:()=>s,PriorityQueue:()=>r,TokenLattice:()=>i});class r{constructor(e=(e,t)=>e>t,t=1/0){this._heap=[],this._comparator=e,this._maxSize=t}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const t of e)if(this.size<this._maxSize)this._heap.push(t),this._siftUp();else{const e=this._smallest();this._comparator(t,this._heap[e])&&(this._heap[e]=t,this._siftUpFrom(e))}return this.size}pop(){const e=this.peek(),t=this.size-1;return t>0&&this._swap(0,t),this._heap.pop(),this._siftDown(),e}replace(e){const t=this.peek();return this._heap[0]=e,this._siftDown(),t}_parent(e){return(e+1>>>1)-1}_left(e){return 1+(e<<1)}_right(e){return e+1<<1}_greater(e,t){return this._comparator(this._heap[e],this._heap[t])}_swap(e,t){const n=this._heap[e];this._heap[e]=this._heap[t],this._heap[t]=n}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(e){for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const t=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,t),e=t}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class s{constructor(){this.root=o.default()}extend(e){for(const t of e)this.push(t)}push(e){let t=this.root;for(const n of e){let e=t.children.get(n);void 0===e&&(e=o.default(),t.children.set(n,e)),t=e}t.isLeaf=!0}*commonPrefixSearch(e){let t=this.root;if(void 0===t)return;let n="";for(const r of e){if(n+=r,t=t.children.get(r),void 0===t)return;t.isLeaf&&(yield n)}}}class o{constructor(e,t){this.isLeaf=e,this.children=t}static default(){return new o(!1,new Map)}}class i{constructor(e,t,n){this.chars=Array.from(e),this.len=this.chars.length,this.bosTokenId=t,this.eosTokenId=n,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},(()=>[])),this.endNodes=Array.from({length:this.len+1},(()=>[]));const r=new a(this.bosTokenId,0,0,0,0),s=new a(this.eosTokenId,1,this.len,0,0);this.nodes.push(r.clone()),this.nodes.push(s.clone()),this.beginNodes[this.len].push(s),this.endNodes[0].push(r)}insert(e,t,n,r){const s=this.nodes.length,o=new a(r,s,e,t,n);this.beginNodes[e].push(o),this.endNodes[e+t].push(o),this.nodes.push(o)}viterbi(){const e=this.len;let t=0;for(;t<=e;){if(0==this.beginNodes[t].length)return[];for(let e of this.beginNodes[t]){e.prev=null;let n=0,r=null;for(let s of this.endNodes[t]){const t=s.backtraceScore+e.score;(null===r||t>n)&&(r=s.clone(),n=t)}if(null===r)return[];e.prev=r,e.backtraceScore=n}++t}const n=[],r=this.beginNodes[e][0].prev;if(null===r)return[];let s=r.clone();for(;null!==s.prev;){n.push(s.clone());const e=s.clone();s=e.prev.clone()}return n.reverse(),n}piece(e){return this.chars.slice(e.pos,e.pos+e.length).join("")}tokens(){return this.viterbi().map((e=>this.piece(e)))}tokenIds(){return this.viterbi().map((e=>e.tokenId))}}class a{constructor(e,t,n,r,s){this.tokenId=e,this.nodeId=t,this.pos=n,this.length=r,this.score=s,this.prev=null,this.backtraceScore=0}clone(){const e=new a(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}},"./src/utils/devices.js":
  /*!******************************!*\
    !*** ./src/utils/devices.js ***!
    \******************************/(e,t,n)=>{n.r(t),n.d(t,{DEVICE_TYPES:()=>r});const r=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":
  /*!*****************************!*\
    !*** ./src/utils/dtypes.js ***!
    \*****************************/(e,t,n)=>{n.r(t),n.d(t,{DATA_TYPES:()=>i,DEFAULT_DEVICE_DTYPE_MAPPING:()=>a,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>o});var r=n(/*! ../env.js */"./src/env.js"),s=n(/*! ./devices.js */"./src/utils/devices.js");const o=function(){let e;return async function(){if(void 0===e)if(r.apis.IS_WEBGPU_AVAILABLE)try{const t=await navigator.gpu.requestAdapter();e=t.features.has("shader-f16")}catch(t){e=!1}else e=!1;return e}}(),i=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),a=Object.freeze({[s.DEVICE_TYPES.wasm]:i.q8}),l=Object.freeze({[i.fp32]:"",[i.fp16]:"_fp16",[i.int8]:"_int8",[i.uint8]:"_uint8",[i.q8]:"_quantized",[i.q4]:"_q4",[i.q4f16]:"_q4f16",[i.bnb4]:"_bnb4"})},"./src/utils/generic.js":
  /*!******************************!*\
    !*** ./src/utils/generic.js ***!
    \******************************/(e,t,n)=>{n.r(t),n.d(t,{Callable:()=>r});const r=class{constructor(){let e=function(...t){return e._call(...t)};return Object.setPrototypeOf(e,new.target.prototype)}_call(...e){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":
  /*!**************************!*\
    !*** ./src/utils/hub.js ***!
    \**************************/(e,t,n)=>{n.r(t),n.d(t,{getFile:()=>u,getModelFile:()=>h,getModelJSON:()=>m});var r=n(/*! fs */"?7a2c"),s=n(/*! path */"?a42a"),o=n(/*! ../env.js */"./src/env.js"),i=n(/*! ./core.js */"./src/utils/core.js");const a={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class l{constructor(e){if(this.filePath=e,this.headers=new Headers,this.exists=r.existsSync(e),this.exists){this.status=200,this.statusText="OK";let t=r.statSync(e);this.headers.set("content-length",t.size.toString()),this.updateContentType();let n=this;this.body=new ReadableStream({start(e){n.arrayBuffer().then((t=>{e.enqueue(new Uint8Array(t)),e.close()}))}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",a[e]??"application/octet-stream")}clone(){let e=new l(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await r.promises.readFile(this.filePath)).buffer}async blob(){const e=await r.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await r.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function d(e,t=null,n=null){let r;try{r=new URL(e)}catch(e){return!1}return!(t&&!t.includes(r.protocol))&&!(n&&!n.includes(r.hostname))}async function u(e){if(o.env.useFS&&!d(e,["http:","https:","blob:"]))return new l(e);if("undefined"!=typeof process&&"node"===process?.release?.name){const t=!!process.env?.TESTING_REMOTELY,n=o.env.version,r=new Headers;r.set("User-Agent",`transformers.js/${n}; is_ci/${t};`);if(d(e,["http:","https:"],["huggingface.co","hf.co"])){const e=process.env?.HF_TOKEN??process.env?.HF_ACCESS_TOKEN;e&&r.set("Authorization",`Bearer ${e}`)}return fetch(e,{headers:r})}return fetch(e)}const c={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class p{constructor(e){this.path=e}async match(e){let t=s.join(this.path,e),n=new l(t);return n.exists?n:void 0}async put(e,t){const n=Buffer.from(await t.arrayBuffer());let o=s.join(this.path,e);try{await r.promises.mkdir(s.dirname(o),{recursive:!0}),await r.promises.writeFile(o,n)}catch(e){console.warn("An error occurred while writing the file to cache:",e)}}}async function h(e,t,n=!0,r={}){if(!o.env.allowLocalModels){if(r.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!o.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let s;if((0,i.dispatchCallback)(r.progress_callback,{status:"initiate",name:e,file:t}),!s&&o.env.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{s=await caches.open("transformers-cache")}catch(e){console.warn("An error occurred while opening the browser cache:",e)}}if(!s&&o.env.useFSCache&&(s=new p(r.cache_dir??o.env.cacheDir)),!s&&o.env.useCustomCache){if(!o.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!o.env.customCache.match||!o.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");s=o.env.customCache}const a=r.revision??"main";let l,h,m=f(e,t),g=f(o.env.localModelPath,m),_=f(o.env.remoteHost,o.env.remotePathTemplate.replaceAll("{model}",e).replaceAll("{revision}",encodeURIComponent(a)),t),w="main"===a?m:f(e,a,t),y=s instanceof p?w:_,b=!1;s&&(h=await async function(e,...t){for(let n of t)try{let t=await e.match(n);if(t)return t}catch(e){continue}}(s,g,y));const v=void 0!==h;if(void 0===h){if(o.env.allowLocalModels){if(d(m,["http:","https:"])){if(r.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${m}.`);if(!o.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${m}.`)}else try{h=await u(g),l=g}catch(e){console.warn(`Unable to load from local path "${g}": "${e}"`)}}if(void 0===h||404===h.status){if(r.local_files_only||!o.env.allowRemoteModels){if(n)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${g}".`);return null}if(h=await u(_),200!==h.status)return function(e,t,n){if(!n)return null;const r=c[e]??`Error (${e}) occurred while trying to load file`;throw Error(`${r}: "${t}".`)}(h.status,_,n);l=y}b=s&&"undefined"!=typeof Response&&h instanceof Response&&200===h.status}(0,i.dispatchCallback)(r.progress_callback,{status:"download",name:e,file:t});const x={status:"progress",name:e,file:t};let M;return r.progress_callback?v&&"undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent)?(M=new Uint8Array(await h.arrayBuffer()),(0,i.dispatchCallback)(r.progress_callback,{...x,progress:100,loaded:M.length,total:M.length})):M=await async function(e,t){const n=e.headers.get("Content-Length");null===n&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let r=parseInt(n??"0"),s=new Uint8Array(r),o=0;const i=e.body.getReader();async function a(){const{done:e,value:n}=await i.read();if(e)return;let l=o+n.length;if(l>r){r=l;let e=new Uint8Array(r);e.set(s),s=e}s.set(n,o),o=l;return t({progress:o/r*100,loaded:o,total:r}),a()}return await a(),s}(h,(e=>{(0,i.dispatchCallback)(r.progress_callback,{...x,...e})})):M=new Uint8Array(await h.arrayBuffer()),b&&l&&void 0===await s.match(l)&&await s.put(l,new Response(M,{headers:h.headers})).catch((e=>{console.warn(`Unable to add response to browser cache: ${e}.`)})),(0,i.dispatchCallback)(r.progress_callback,{status:"done",name:e,file:t}),M}async function m(e,t,n=!0,r={}){let s=await h(e,t,n,r);if(null===s)return{};let o=new TextDecoder("utf-8").decode(s);return JSON.parse(o)}function f(...e){return(e=e.map(((t,n)=>(n&&(t=t.replace(new RegExp("^/"),"")),n!==e.length-1&&(t=t.replace(new RegExp("/$"),"")),t)))).join("/")}},"./src/utils/image.js":
  /*!****************************!*\
    !*** ./src/utils/image.js ***!
    \****************************/(e,t,n)=>{n.r(t),n.d(t,{RawImage:()=>m,load_image:()=>f});var r=n(/*! ./core.js */"./src/utils/core.js"),s=n(/*! ./hub.js */"./src/utils/hub.js"),o=n(/*! ../env.js */"./src/env.js"),i=n(/*! ./tensor.js */"./src/utils/tensor.js"),a=n(/*! sharp */"?2b25");let l,d,u;const c=o.apis.IS_BROWSER_ENV||o.apis.IS_WEBWORKER_ENV;if(c)l=(e,t)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(e,t)},u=self.createImageBitmap,d=self.ImageData;else{if(!a)throw new Error("Unable to load image processing library.");u=async e=>{const t=(await e.metadata()).channels,{data:n,info:r}=await e.rotate().raw().toBuffer({resolveWithObject:!0}),s=new m(new Uint8ClampedArray(n),r.width,r.height,r.channels);return void 0!==t&&t!==r.channels&&s.convert(t),s}}const p={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},h=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class m{constructor(e,t,n,r){this.data=e,this.width=t,this.height=n,this.channels=r}get size(){return[this.width,this.height]}static async read(e){if(e instanceof m)return e;if("string"==typeof e||e instanceof URL)return await this.fromURL(e);throw new Error("Unsupported input type: "+typeof e)}static fromCanvas(e){if(!c)throw new Error("fromCanvas() is only supported in browser environments.");const t=e.getContext("2d").getImageData(0,0,e.width,e.height).data;return new m(t,e.width,e.height,4)}static async fromURL(e){const t=await(0,s.getFile)(e);if(200!==t.status)throw new Error(`Unable to read image from "${e}" (${t.status} ${t.statusText})`);const n=await t.blob();return this.fromBlob(n)}static async fromBlob(e){if(c){const t=await u(e),n=l(t.width,t.height).getContext("2d");return n.drawImage(t,0,0),new this(n.getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}{const t=a(await e.arrayBuffer());return await u(t)}}static fromTensor(e,t="CHW"){if(3!==e.dims.length)throw new Error(`Tensor should have 3 dimensions, but has ${e.dims.length} dimensions.`);if("CHW"===t)e=e.transpose(1,2,0);else if("HWC"!==t)throw new Error(`Unsupported channel format: ${t}`);if(!(e.data instanceof Uint8ClampedArray||e.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${e.type}`);switch(e.dims[2]){case 1:case 2:case 3:case 4:return new m(e.data,e.dims[1],e.dims[0],e.dims[2]);default:throw new Error(`Unsupported number of channels: ${e.dims[2]}`)}}grayscale(){if(1===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let t=0,n=0;t<this.data.length;t+=this.channels){const r=this.data[t],s=this.data[t+1],o=this.data[t+2];e[n++]=Math.round(.2989*r+.587*s+.114*o)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,1)}rgb(){if(3===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t];break;case 4:for(let t=0,n=0;t<this.data.length;t+=4)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,3)}rgba(){if(4===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=255;break;case 3:for(let t=0,n=0;t<this.data.length;t+=3)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2],e[n++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,4)}async resize(e,t,{resample:n=2}={}){if(this.width===e&&this.height===t)return this;let s=p[n]??n;const o=(0,r.isNullishDimension)(e),i=(0,r.isNullishDimension)(t);if(o&&i)return this;if(o?e=t/this.height*this.width:i&&(t=e/this.width*this.height),c){const n=this.channels,r=this.toCanvas(),s=l(e,t).getContext("2d");s.drawImage(r,0,0,e,t);return new m(s.getImageData(0,0,e,t).data,e,t,4).convert(n)}{let n=this.toSharp();switch(s){case"box":case"hamming":"box"!==s&&"hamming"!==s||(console.warn(`Resampling method ${s} is not yet supported. Using bilinear instead.`),s="bilinear");case"nearest":case"bilinear":case"bicubic":n=n.affine([e/this.width,0,0,t/this.height],{interpolator:s});break;case"lanczos":n=n.resize({width:e,height:t,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${s} is not supported.`)}return await u(n)}}async pad([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.max(n,0),r=Math.max(r,0),0===e&&0===t&&0===n&&0===r)return this;if(c){const s=this.channels,o=this.toCanvas(),i=this.width+e+t,a=this.height+n+r,d=l(i,a).getContext("2d");d.drawImage(o,0,0,this.width,this.height,e,n,this.width,this.height);return new m(d.getImageData(0,0,i,a).data,i,a,4).convert(s)}{const s=this.toSharp().extend({left:e,right:t,top:n,bottom:r});return await u(s)}}async crop([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.min(n,this.width-1),r=Math.min(r,this.height-1),0===e&&0===t&&n===this.width-1&&r===this.height-1)return this;const s=n-e+1,o=r-t+1;if(c){const n=this.channels,r=this.toCanvas(),i=l(s,o).getContext("2d");i.drawImage(r,e,t,s,o,0,0,s,o);return new m(i.getImageData(0,0,s,o).data,s,o,4).convert(n)}{const n=this.toSharp().extract({left:e,top:t,width:s,height:o});return await u(n)}}async center_crop(e,t){if(this.width===e&&this.height===t)return this;const n=(this.width-e)/2,r=(this.height-t)/2;if(c){const s=this.channels,o=this.toCanvas(),i=l(e,t).getContext("2d");let a=0,d=0,u=0,c=0;n>=0?a=n:u=-n,r>=0?d=r:c=-r,i.drawImage(o,a,d,e,t,u,c,e,t);return new m(i.getImageData(0,0,e,t).data,e,t,4).convert(s)}{let s=this.toSharp();if(n>=0&&r>=0)s=s.extract({left:Math.floor(n),top:Math.floor(r),width:e,height:t});else if(n<=0&&r<=0){const o=Math.floor(-r),i=Math.floor(-n);s=s.extend({top:o,left:i,right:e-this.width-i,bottom:t-this.height-o})}else{let o=[0,0],i=0;r<0?(o[0]=Math.floor(-r),o[1]=t-this.height-o[0]):i=Math.floor(r);let a=[0,0],l=0;n<0?(a[0]=Math.floor(-n),a[1]=e-this.width-a[0]):l=Math.floor(n),s=s.extend({top:o[0],bottom:o[1],left:a[0],right:a[1]}).extract({left:l,top:i,width:e,height:t})}return await u(s)}}async toBlob(e="image/png",t=1){if(!c)throw new Error("toBlob() is only supported in browser environments.");const n=this.toCanvas();return await n.convertToBlob({type:e,quality:t})}toTensor(e="CHW"){let t=new i.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if("HWC"===e);else{if("CHW"!==e)throw new Error(`Unsupported channel format: ${e}`);t=t.permute(2,0,1)}return t}toCanvas(){if(!c)throw new Error("toCanvas() is only supported in browser environments.");const e=this.clone().rgba(),t=l(e.width,e.height),n=new d(e.data,e.width,e.height);return t.getContext("2d").putImageData(n,0,0),t}split(){const{data:e,width:t,height:n,channels:r}=this,s=e.constructor,o=e.length/r,i=Array.from({length:r},(()=>new s(o)));for(let t=0;t<o;++t){const n=r*t;for(let s=0;s<r;++s)i[s][t]=e[n+s]}return i.map((e=>new m(e,t,n,1)))}_update(e,t,n,r=null){return this.data=e,this.width=t,this.height=n,null!==r&&(this.channels=r),this}clone(){return new m(this.data.slice(),this.width,this.height,this.channels)}convert(e){if(this.channels===e)return this;switch(e){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(e){if(!c){if(o.env.useFS){const t=this.toSharp();return await t.toFile(e)}throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(o.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const t=e.split(".").pop().toLowerCase(),n=h.get(t)??"image/png",r=await this.toBlob(n),s=URL.createObjectURL(r),i=document.createElement("a");i.href=s,i.download=e,i.click(),i.remove()}}toSharp(){if(c)throw new Error("toSharp() is only supported in server-side environments.");return a(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const f=m.read.bind(m)},"./src/utils/maths.js":
  /*!****************************!*\
    !*** ./src/utils/maths.js ***!
    \****************************/(e,t,n)=>{function r(e,[t,n,r],[s,o],i="bilinear",a=!1){const l=o/r,d=s/n,u=new e.constructor(s*o*t),c=n*r,p=s*o;for(let i=0;i<s;++i)for(let s=0;s<o;++s){const a=i*o+s,h=(s+.5)/l-.5,m=(i+.5)/d-.5;let f=Math.floor(h),g=Math.floor(m);const _=Math.min(f+1,r-1),w=Math.min(g+1,n-1);f=Math.max(f,0),g=Math.max(g,0);const y=h-f,b=m-g,v=(1-y)*(1-b),x=y*(1-b),M=(1-y)*b,T=y*b,k=g*r,$=w*r,C=k+f,P=k+_,S=$+f,E=$+_;for(let n=0;n<t;++n){const t=n*c;u[n*p+a]=v*e[t+C]+x*e[t+P]+M*e[t+S]+T*e[t+E]}}return u}function s(e,t,n){const r=new Array(n.length),s=new Array(n.length);for(let e=n.length-1,o=1;e>=0;--e)s[e]=o,r[e]=t[n[e]],o*=r[e];const o=n.map(((e,t)=>s[n.indexOf(t)])),i=new e.constructor(e.length);for(let n=0;n<e.length;++n){let r=0;for(let e=t.length-1,s=n;e>=0;--e)r+=s%t[e]*o[e],s=Math.floor(s/t[e]);i[r]=e[n]}return[i,r]}function o(e){const t=c(e)[0],n=e.map((e=>Math.exp(e-t))),r=n.reduce(((e,t)=>e+t),0);return n.map((e=>e/r))}function i(e){const t=c(e)[0];let n=0;for(let r=0;r<e.length;++r)n+=Math.exp(e[r]-t);const r=Math.log(n);return e.map((e=>e-t-r))}function a(e,t){let n=0;for(let r=0;r<e.length;++r)n+=e[r]*t[r];return n}function l(e,t){return a(e,t)/(d(e)*d(t))}function d(e){return Math.sqrt(e.reduce(((e,t)=>e+t*t),0))}function u(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]<t&&(t=e[r],n=r);return[t,n]}function c(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r],n=r);return[Number(t),n]}function p(e){return e>0&&!(e&e-1)}n.r(t),n.d(t,{FFT:()=>f,bankers_round:()=>w,cos_sim:()=>l,dot:()=>a,dynamic_time_warping:()=>y,interpolate_data:()=>r,log_softmax:()=>i,magnitude:()=>d,max:()=>c,medianFilter:()=>g,min:()=>u,permute_data:()=>s,round:()=>_,softmax:()=>o});class h{constructor(e){if(this.size=0|e,this.size<=1||!p(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=e<<1,this.table=new Float64Array(2*this.size);for(let e=0;e<this.table.length;e+=2){const t=Math.PI*e/this.size;this.table[e]=Math.cos(t),this.table[e+1]=-Math.sin(t)}let t=0;for(let e=1;this.size>e;e<<=1)++t;this._width=t%2==0?t-1:t,this._bitrev=new Int32Array(1<<this._width);for(let e=0;e<this._bitrev.length;++e){this._bitrev[e]=0;for(let t=0;t<this._width;t+=2){const n=this._width-t-2;this._bitrev[e]|=(e>>>t&3)<<n}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(e,t){const n=t||new Array(e.length>>>1);for(let t=0;t<e.length;t+=2)n[t>>>1]=e[t];return n}toComplexArray(e,t){const n=t||this.createComplexArray();for(let t=0;t<n.length;t+=2)n[t]=e[t>>>1],n[t+1]=0;return n}transform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,1)}realTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._realTransform4(e,t,1)}inverseTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,-1);for(let t=0;t<e.length;++t)e[t]/=this.size}_transform4(e,t,n){const r=this._csize;let s,o,i=1<<this._width,a=r/i<<1;const l=this._bitrev;if(4===a)for(s=0,o=0;s<r;s+=a,++o){const n=l[o];this._singleTransform2(t,e,s,n,i)}else for(s=0,o=0;s<r;s+=a,++o){const r=l[o];this._singleTransform4(t,e,s,r,i,n)}const d=this.table;for(i>>=2;i>=2;i>>=2){a=r/i<<1;const t=a>>>2;for(s=0;s<r;s+=a){const r=s+t-1;for(let o=s,a=0;o<r;o+=2,a+=i){const r=o,s=r+t,i=s+t,l=i+t,u=e[r],c=e[r+1],p=e[s],h=e[s+1],m=e[i],f=e[i+1],g=e[l],_=e[l+1],w=d[a],y=n*d[a+1],b=p*w-h*y,v=p*y+h*w,x=d[2*a],M=n*d[2*a+1],T=m*x-f*M,k=m*M+f*x,$=d[3*a],C=n*d[3*a+1],P=g*$-_*C,S=g*C+_*$,E=u+T,F=c+k,A=u-T,I=c-k,z=b+P,L=v+S,O=n*(b-P),B=n*(v-S);e[r]=E+z,e[r+1]=F+L,e[s]=A+B,e[s+1]=I-O,e[i]=E-z,e[i+1]=F-L,e[l]=A-B,e[l+1]=I+O}}}}_singleTransform2(e,t,n,r,s){const o=e[r],i=e[r+1],a=e[r+s],l=e[r+s+1];t[n]=o+a,t[n+1]=i+l,t[n+2]=o-a,t[n+3]=i-l}_singleTransform4(e,t,n,r,s,o){const i=2*s,a=3*s,l=e[r],d=e[r+1],u=e[r+s],c=e[r+s+1],p=e[r+i],h=e[r+i+1],m=e[r+a],f=e[r+a+1],g=l+p,_=d+h,w=l-p,y=d-h,b=u+m,v=c+f,x=o*(u-m),M=o*(c-f);t[n]=g+b,t[n+1]=_+v,t[n+2]=w+M,t[n+3]=y-x,t[n+4]=g-b,t[n+5]=_-v,t[n+6]=w-M,t[n+7]=y+x}_realTransform4(e,t,n){const r=this._csize;let s,o,i=1<<this._width,a=r/i<<1;const l=this._bitrev;if(4===a)for(s=0,o=0;s<r;s+=a,++o){const n=l[o];this._singleRealTransform2(t,e,s,n>>>1,i>>>1)}else for(s=0,o=0;s<r;s+=a,++o){const r=l[o];this._singleRealTransform4(t,e,s,r>>>1,i>>>1,n)}const d=this.table;for(i>>=2;i>=2;i>>=2){a=r/i<<1;const t=a>>>1,o=t>>>1,l=o>>>1;for(s=0;s<r;s+=a)for(let r=0,a=0;r<=l;r+=2,a+=i){const i=s+r,u=i+o,c=u+o,p=c+o,h=e[i],m=e[i+1],f=e[u],g=e[u+1],_=e[c],w=e[c+1],y=e[p],b=e[p+1],v=h,x=m,M=d[a],T=n*d[a+1],k=f*M-g*T,$=f*T+g*M,C=d[2*a],P=n*d[2*a+1],S=_*C-w*P,E=_*P+w*C,F=d[3*a],A=n*d[3*a+1],I=y*F-b*A,z=y*A+b*F,L=v+S,O=x+E,B=v-S,D=x-E,N=k+I,R=$+z,j=n*(k-I),V=n*($-z);if(e[i]=L+N,e[i+1]=O+R,e[u]=B+V,e[u+1]=D-j,0===r){e[c]=L-N,e[c+1]=O-R;continue}if(r===l)continue;const G=s+o-r,U=s+t-r;e[G]=B-n*V,e[G+1]=-D-n*j,e[U]=L-n*N,e[U+1]=n*R-O}}const u=r>>>1;for(let t=2;t<u;t+=2)e[r-t]=e[t],e[r-t+1]=-e[t+1]}_singleRealTransform2(e,t,n,r,s){const o=e[r],i=e[r+s];t[n]=o+i,t[n+1]=0,t[n+2]=o-i,t[n+3]=0}_singleRealTransform4(e,t,n,r,s,o){const i=2*s,a=3*s,l=e[r],d=e[r+s],u=e[r+i],c=e[r+a],p=l+u,h=l-u,m=d+c,f=o*(d-c);t[n]=p+m,t[n+1]=0,t[n+2]=h,t[n+3]=-f,t[n+4]=p-m,t[n+5]=0,t[n+6]=h,t[n+7]=f}}class m{constructor(e){const t=2*(e-1),n=2*(2*e-1),r=2**Math.ceil(Math.log2(n));this.bufferSize=r,this._a=t;const s=new Float64Array(n),o=new Float64Array(r);this._chirpBuffer=new Float64Array(r),this._buffer1=new Float64Array(r),this._buffer2=new Float64Array(r),this._outBuffer1=new Float64Array(r),this._outBuffer2=new Float64Array(r);const i=-2*Math.PI/e,a=Math.cos(i),l=Math.sin(i);for(let t=0;t<n>>1;++t){const n=(t+1-e)**2/2,r=Math.sqrt(a**2+l**2)**n,i=n*Math.atan2(l,a),d=2*t;s[d]=r*Math.cos(i),s[d+1]=r*Math.sin(i),o[d]=s[d],o[d+1]=-s[d+1]}this._slicedChirpBuffer=s.subarray(t,n),this._f=new h(r>>1),this._f.transform(this._chirpBuffer,o)}_transform(e,t,n){const r=this._buffer1,s=this._buffer2,o=this._outBuffer1,i=this._outBuffer2,a=this._chirpBuffer,l=this._slicedChirpBuffer,d=this._a;if(n)for(let e=0;e<l.length;e+=2){const n=e+1,s=t[e>>1];r[e]=s*l[e],r[n]=s*l[n]}else for(let e=0;e<l.length;e+=2){const n=e+1;r[e]=t[e]*l[e]-t[n]*l[n],r[n]=t[e]*l[n]+t[n]*l[e]}this._f.transform(o,r);for(let e=0;e<a.length;e+=2){const t=e+1;s[e]=o[e]*a[e]-o[t]*a[t],s[t]=o[e]*a[t]+o[t]*a[e]}this._f.inverseTransform(i,s);for(let t=0;t<i.length;t+=2){const n=i[t+d],r=i[t+d+1],s=l[t],o=l[t+1];e[t]=n*s-r*o,e[t+1]=n*o+r*s}}transform(e,t){this._transform(e,t,!1)}realTransform(e,t){this._transform(e,t,!0)}}class f{constructor(e){this.fft_length=e,this.isPowerOfTwo=p(e),this.isPowerOfTwo?(this.fft=new h(e),this.outputBufferSize=2*e):(this.fft=new m(e),this.outputBufferSize=this.fft.bufferSize)}realTransform(e,t){this.fft.realTransform(e,t)}transform(e,t){this.fft.transform(e,t)}}function g(e,t){if(t%2==0||t<=0)throw new Error("Window size must be a positive odd number");const n=new e.constructor(e.length),r=new e.constructor(t),s=Math.floor(t/2);for(let t=0;t<e.length;++t){let o=0;for(let n=-s;n<=s;++n){let s=t+n;s<0?s=Math.abs(s):s>=e.length&&(s=2*(e.length-1)-s),r[o++]=e[s]}r.sort(),n[t]=r[s]}return n}function _(e,t){const n=Math.pow(10,t);return Math.round(e*n)/n}function w(e){const t=Math.round(e);return Math.abs(e)%1==.5?t%2==0?t:t-1:t}function y(e){const t=e.length,n=e[0].length,r=[t+1,n+1],s=Array.from({length:r[0]},(()=>Array(r[1]).fill(1/0)));s[0][0]=0;const o=Array.from({length:r[0]},(()=>Array(r[1]).fill(-1)));for(let t=1;t<r[1];++t)for(let n=1;n<r[0];++n){const r=s[n-1][t-1],i=s[n-1][t],a=s[n][t-1];let l,d;r<i&&r<a?(l=r,d=0):i<r&&i<a?(l=i,d=1):(l=a,d=2),s[n][t]=e[n-1][t-1]+l,o[n][t]=d}for(let e=0;e<r[1];++e)o[0][e]=2;for(let e=0;e<r[0];++e)o[e][0]=1;let i=t,a=n,l=[],d=[];for(;i>0||a>0;)switch(l.push(i-1),d.push(a-1),o[i][a]){case 0:--i,--a;break;case 1:--i;break;case 2:--a;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${i}, ${a}]. Please file a bug report.`)}return l.reverse(),d.reverse(),[l,d]}},"./src/utils/tensor.js":
  /*!*****************************!*\
    !*** ./src/utils/tensor.js ***!
    \*****************************/(e,t,n)=>{n.r(t),n.d(t,{Tensor:()=>a,cat:()=>y,full:()=>T,full_like:()=>k,interpolate:()=>d,interpolate_4d:()=>u,layer_norm:()=>f,matmul:()=>c,mean:()=>x,mean_pooling:()=>m,ones:()=>$,ones_like:()=>C,permute:()=>l,quantize_embeddings:()=>E,rfft:()=>p,stack:()=>b,std_mean:()=>v,topk:()=>h,zeros:()=>P,zeros_like:()=>S});var r=n(/*! ./maths.js */"./src/utils/maths.js"),s=n(/*! ../backends/onnx.js */"./src/backends/onnx.js"),o=n(/*! ../ops/registry.js */"./src/ops/registry.js");const i=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class a{get dims(){return this.ort_tensor.dims}set dims(e){this.ort_tensor.dims=e}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...e){return(0,s.isONNXTensor)(e[0])?this.ort_tensor=e[0]:this.ort_tensor=new s.Tensor(e[0],e[1],e[2]),new Proxy(this,{get:(e,t)=>{if("string"==typeof t){let n=Number(t);if(Number.isInteger(n))return e._getitem(n)}return e[t]},set:(e,t,n)=>e[t]=n})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[e,...t]=this.dims;if(t.length>0){const n=t.reduce(((e,t)=>e*t));for(let r=0;r<e;++r)yield this._subarray(r,n,t)}else yield*this.data}_getitem(e){const[t,...n]=this.dims;if(e=w(e,t),n.length>0){const t=n.reduce(((e,t)=>e*t));return this._subarray(e,t,n)}return new a(this.type,[this.data[e]],n)}indexOf(e){const t=this.data;for(let n=0;n<t.length;++n)if(t[n]==e)return n;return-1}_subarray(e,t,n){const r=e*t,s=(e+1)*t,o="subarray"in this.data?this.data.subarray(r,s):this.data.slice(r,s);return new a(this.type,o,n)}item(){const e=this.data;if(1!==e.length)throw new Error(`a Tensor with ${e.length} elements cannot be converted to Scalar`);return e[0]}tolist(){return function(e,t){const n=e.length,r=t.reduce(((e,t)=>e*t));if(n!==r)throw Error(`cannot reshape array of size ${n} into shape (${t})`);let s=e;for(let e=t.length-1;e>=0;e--)s=s.reduce(((n,r)=>{let s=n[n.length-1];return s.length<t[e]?s.push(r):n.push([r]),n}),[[]]);return s[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=1/(1+Math.exp(-e[t]));return this}map(e){return this.clone().map_(e)}map_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]=e(t[n],n,t);return this}mul(e){return this.clone().mul_(e)}mul_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]*=e;return this}div(e){return this.clone().div_(e)}div_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]/=e;return this}add(e){return this.clone().add_(e)}add_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]+=e;return this}sub(e){return this.clone().sub_(e)}sub_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]-=e;return this}clone(){return new a(this.type,this.data.slice(),this.dims.slice())}slice(...e){const t=[],n=[];for(let r=0;r<this.dims.length;++r){let s=e[r];if(null==s)n.push([0,this.dims[r]]),t.push(this.dims[r]);else if("number"==typeof s)s=w(s,this.dims[r],r),n.push([s,s+1]);else{if(!Array.isArray(s)||2!==s.length)throw new Error(`Invalid slice: ${s}`);{let[e,o]=s;if(e=null===e?0:w(e,this.dims[r],r,!1),o=null===o?this.dims[r]:w(o,this.dims[r],r,!1),e>o)throw new Error(`Invalid slice: ${s}`);const i=[Math.max(e,0),Math.min(o,this.dims[r])];n.push(i),t.push(i[1]-i[0])}}}const r=n.map((([e,t])=>t-e)),s=r.reduce(((e,t)=>e*t)),o=this.data,i=new o.constructor(s),l=this.stride();for(let e=0;e<s;++e){let t=0;for(let s=r.length-1,o=e;s>=0;--s){const e=r[s];t+=(o%e+n[s][0])*l[s],o=Math.floor(o/e)}i[e]=o[t]}return new a(this.type,i,t)}permute(...e){return l(this,e)}transpose(...e){return this.permute(...e)}sum(e=null,t=!1){return this.norm(1,e,t)}norm(e="fro",t=null,n=!1){if("fro"===e)e=2;else if("string"==typeof e)throw Error(`Unsupported norm: ${e}`);const r=this.data;if(null===t){let t=r.reduce(((t,n)=>t+n**e),0)**(1/e);return new a(this.type,[t],[])}t=w(t,this.dims.length);const s=this.dims.slice();s[t]=1;const o=new r.constructor(r.length/this.dims[t]);for(let n=0;n<r.length;++n){let i=0;for(let e=this.dims.length-1,r=n,o=1;e>=0;--e){const n=this.dims[e];if(e!==t){i+=r%n*o,o*=s[e]}r=Math.floor(r/n)}o[i]+=r[n]**e}if(1!==e)for(let t=0;t<o.length;++t)o[t]=o[t]**(1/e);return n||s.splice(t,1),new a(this.type,o,s)}normalize_(e=2,t=1){t=w(t,this.dims.length);const n=this.norm(e,t,!0),r=this.data,s=n.data;for(let e=0;e<r.length;++e){let n=0;for(let r=this.dims.length-1,s=e,o=1;r>=0;--r){const e=this.dims[r];if(r!==t){n+=s%e*o,o*=this.dims[r]}s=Math.floor(s/e)}r[e]/=s[n]}return this}normalize(e=2,t=1){return this.clone().normalize_(e,t)}stride(){return function(e){const t=new Array(e.length);for(let n=e.length-1,r=1;n>=0;--n)t[n]=r,r*=e[n];return t}(this.dims)}squeeze(e=null){return new a(this.type,this.data,g(this.dims,e))}squeeze_(e=null){return this.dims=g(this.dims,e),this}unsqueeze(e=null){return new a(this.type,this.data,_(this.dims,e))}unsqueeze_(e=null){return this.dims=_(this.dims,e),this}flatten_(e=0,t=-1){t=(t+this.dims.length)%this.dims.length;let n=this.dims.slice(0,e),r=this.dims.slice(e,t+1),s=this.dims.slice(t+1);return this.dims=[...n,r.reduce(((e,t)=>e*t),1),...s],this}flatten(e=0,t=-1){return this.clone().flatten_(e,t)}view(...e){let t=-1;for(let n=0;n<e.length;++n)if(-1===e[n]){if(-1!==t)throw new Error("Only one dimension can be inferred");t=n}const n=this.data;if(-1!==t){const r=e.reduce(((e,n,r)=>r!==t?e*n:e),1);e[t]=n.length/r}return new a(this.type,n,e)}neg_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=-e[t];return this}neg(){return this.clone().neg_()}clamp_(e,t){const n=this.data;for(let r=0;r<n.length;++r)n[r]=Math.min(Math.max(n[r],e),t);return this}clamp(e,t){return this.clone().clamp_(e,t)}round_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=Math.round(e[t]);return this}round(){return this.clone().round_()}mean(e=null,t=!1){return x(this,e,t)}to(e){if(this.type===e)return this;if(!i.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);return new a(e,i[e].from(this.data),this.dims)}}function l(e,t){const[n,s]=(0,r.permute_data)(e.data,e.dims,t);return new a(e.type,n,s)}function d(e,[t,n],s="bilinear",o=!1){const i=e.dims.at(-3)??1,l=e.dims.at(-2),d=e.dims.at(-1);let u=(0,r.interpolate_data)(e.data,[i,l,d],[t,n],s,o);return new a(e.type,u,[i,t,n])}async function u(e,{size:t=null,mode:n="bilinear"}={}){if(4!==e.dims.length)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!t)throw new Error("`interpolate_4d` requires a `size` argument.");let r,s;if(2===t.length)r=[...e.dims.slice(0,2),...t];else if(3===t.length)r=[e.dims[0],...t];else{if(4!==t.length)throw new Error("`size` must be of length 2, 3, or 4.");r=t}if("bilinear"===n)s=await o.TensorOpRegistry.bilinear_interpolate_4d;else{if("bicubic"!==n)throw new Error(`Unsupported mode: ${n}`);s=await o.TensorOpRegistry.bicubic_interpolate_4d}const i=new a("int64",new BigInt64Array(r.map(BigInt)),[r.length]);return await s({x:e,s:i})}async function c(e,t){const n=await o.TensorOpRegistry.matmul;return await n({a:e,b:t})}async function p(e,t){const n=await o.TensorOpRegistry.rfft;return await n({x:e,a:t})}async function h(e,t){const n=await o.TensorOpRegistry.top_k;return t=null===t?e.dims.at(-1):Math.min(t,e.dims.at(-1)),await n({x:e,k:new a("int64",[BigInt(t)],[1])})}function m(e,t){const n=e.data,r=t.data,s=[e.dims[0],e.dims[2]],o=new n.constructor(s[0]*s[1]),[i,l,d]=e.dims;let u=0;for(let e=0;e<i;++e){const t=e*d*l;for(let s=0;s<d;++s){let i=0,a=0;const c=e*l,p=t+s;for(let e=0;e<l;++e){const t=Number(r[c+e]);a+=t,i+=n[p+e*d]*t}const h=i/a;o[u++]=h}}return new a(e.type,o,s)}function f(e,t,{eps:n=1e-5}={}){if(2!==e.dims.length)throw new Error("`layer_norm` currently only supports 2D input.");const[r,s]=e.dims;if(1!==t.length&&t[0]!==s)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[o,i]=v(e,1,0,!0),l=o.data,d=i.data,u=e.data,c=new u.constructor(u.length);for(let e=0;e<r;++e){const t=e*s;for(let r=0;r<s;++r){const s=t+r;c[s]=(u[s]-d[e])/(l[e]+n)}}return new a(e.type,c,e.dims)}function g(e,t){return e=e.slice(),null===t?e=e.filter((e=>1!==e)):"number"==typeof t?1===e[t]&&e.splice(t,1):Array.isArray(t)&&(e=e.filter(((e,n)=>1!==e||!t.includes(n)))),e}function _(e,t){return t=w(t,e.length+1),(e=e.slice()).splice(t,0,1),e}function w(e,t,n=null,r=!0){if(r&&(e<-t||e>=t))throw new Error(`IndexError: index ${e} is out of bounds for dimension${null===n?"":" "+n} with size ${t}`);return e<0&&(e=(e%t+t)%t),e}function y(e,t=0){t=w(t,e[0].dims.length);const n=e[0].dims.slice();n[t]=e.reduce(((e,n)=>e+n.dims[t]),0);const r=n.reduce(((e,t)=>e*t),1),s=new e[0].data.constructor(r),o=e[0].type;if(0===t){let t=0;for(const n of e){const e=n.data;s.set(e,t),t+=e.length}}else{let r=0;for(let o=0;o<e.length;++o){const{data:i,dims:a}=e[o];for(let e=0;e<i.length;++e){let o=0;for(let s=a.length-1,i=e,l=1;s>=0;--s){const e=a[s];let d=i%e;s===t&&(d+=r),o+=d*l,l*=n[s],i=Math.floor(i/e)}s[o]=i[e]}r+=a[t]}}return new a(o,s,n)}function b(e,t=0){return y(e.map((e=>e.unsqueeze(t))),t)}function v(e,t=null,n=1,r=!1){const s=e.data,o=e.dims;if(null===t){const t=s.reduce(((e,t)=>e+t),0)/s.length,r=Math.sqrt(s.reduce(((e,n)=>e+(n-t)**2),0)/(s.length-n)),o=new a(e.type,[t],[]);return[new a(e.type,[r],[]),o]}const i=x(e,t=w(t,o.length),r),l=i.data,d=o.slice();d[t]=1;const u=new s.constructor(s.length/o[t]);for(let e=0;e<s.length;++e){let n=0;for(let r=o.length-1,s=e,i=1;r>=0;--r){const e=o[r];if(r!==t){n+=s%e*i,i*=d[r]}s=Math.floor(s/e)}u[n]+=(s[e]-l[n])**2}for(let e=0;e<u.length;++e)u[e]=Math.sqrt(u[e]/(o[t]-n));r||d.splice(t,1);return[new a(e.type,u,d),i]}function x(e,t=null,n=!1){const r=e.data;if(null===t){const t=r.reduce(((e,t)=>e+t),0);return new a(e.type,[t/r.length],[])}const s=e.dims;t=w(t,s.length);const o=s.slice();o[t]=1;const i=new r.constructor(r.length/s[t]);for(let e=0;e<r.length;++e){let n=0;for(let r=s.length-1,i=e,a=1;r>=0;--r){const e=s[r];if(r!==t){n+=i%e*a,a*=o[r]}i=Math.floor(i/e)}i[n]+=r[e]}if(1!==s[t])for(let e=0;e<i.length;++e)i[e]=i[e]/s[t];return n||o.splice(t,1),new a(e.type,i,o)}function M(e,t,n,r){const s=e.reduce(((e,t)=>e*t),1);return new a(n,new r(s).fill(t),e)}function T(e,t){let n,r;if("number"==typeof t)n="float32",r=Float32Array;else if("bigint"==typeof t)n="int64",r=BigInt64Array;else{if("boolean"!=typeof t)throw new Error("Unsupported data type: "+typeof t);n="bool",r=Uint8Array}return M(e,t,n,r)}function k(e,t){return T(e.dims,t)}function $(e){return M(e,1n,"int64",BigInt64Array)}function C(e){return $(e.dims)}function P(e){return M(e,0n,"int64",BigInt64Array)}function S(e){return P(e.dims)}function E(e,t){if(2!==e.dims.length)throw new Error("The tensor must have 2 dimensions");if(e.dims.at(-1)%8!=0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(t))throw new Error("The precision must be either 'binary' or 'ubinary'");const n="binary"===t,r=n?"int8":"uint8",s=n?Int8Array:Uint8Array,o=e.data,i=new s(o.length/8);for(let e=0;e<o.length;++e){const t=o[e]>0?1:0,r=Math.floor(e/8),s=e%8;i[r]|=t<<7-s,n&&0===s&&(i[r]-=128)}return new a(r,i,[e.dims[0],e.dims[1]/8])}}},r={};function s(e){var t=r[e];if(void 0!==t)return t.exports;var o=r[e]={exports:{}};return n[e](o,o.exports,s),o.exports}s.m=n,t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,s.t=function(n,r){if(1&r&&(n=this(n)),8&r)return n;if("object"==typeof n&&n){if(4&r&&n.__esModule)return n;if(16&r&&"function"==typeof n.then)return n}var o=Object.create(null);s.r(o);var i={};e=e||[null,t({}),t([]),t(t)];for(var a=2&r&&n;"object"==typeof a&&!~e.indexOf(a);a=t(a))Object.getOwnPropertyNames(a).forEach((e=>i[e]=()=>n[e]));return i.default=()=>n,s.d(o,i),o},s.d=(e,t)=>{for(var n in t)s.o(t,n)&&!s.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;if("string"==typeof import.meta.url&&(e=import.meta.url),!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=e})(),s.b=new URL("./",import.meta.url);var o={};
  /*!*****************************!*\
    !*** ./src/transformers.js ***!
    \*****************************/s.r(o),s.d(o,{ASTFeatureExtractor:()=>g.ASTFeatureExtractor,ASTForAudioClassification:()=>l.ASTForAudioClassification,ASTModel:()=>l.ASTModel,ASTPreTrainedModel:()=>l.ASTPreTrainedModel,AlbertForMaskedLM:()=>l.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>l.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>l.AlbertForSequenceClassification,AlbertModel:()=>l.AlbertModel,AlbertPreTrainedModel:()=>l.AlbertPreTrainedModel,AlbertTokenizer:()=>d.AlbertTokenizer,AudioClassificationPipeline:()=>a.AudioClassificationPipeline,AutoConfig:()=>u.AutoConfig,AutoFeatureExtractor:()=>_.AutoFeatureExtractor,AutoImageProcessor:()=>b.AutoImageProcessor,AutoModel:()=>l.AutoModel,AutoModelForAudioClassification:()=>l.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>l.AutoModelForAudioFrameClassification,AutoModelForCTC:()=>l.AutoModelForCTC,AutoModelForCausalLM:()=>l.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>l.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>l.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>l.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>l.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>l.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>l.AutoModelForImageSegmentation,AutoModelForImageToImage:()=>l.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>l.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>l.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>l.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>l.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>l.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>l.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>l.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>l.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>l.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>l.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>l.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>l.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>l.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>l.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>l.AutoModelForVision2Seq,AutoModelForXVector:()=>l.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>l.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>M.AutoProcessor,AutoTokenizer:()=>d.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>a.AutomaticSpeechRecognitionPipeline,BartForConditionalGeneration:()=>l.BartForConditionalGeneration,BartForSequenceClassification:()=>l.BartForSequenceClassification,BartModel:()=>l.BartModel,BartPretrainedModel:()=>l.BartPretrainedModel,BartTokenizer:()=>d.BartTokenizer,BaseModelOutput:()=>l.BaseModelOutput,BaseStreamer:()=>T.BaseStreamer,BeitFeatureExtractor:()=>y.BeitFeatureExtractor,BeitForImageClassification:()=>l.BeitForImageClassification,BeitModel:()=>l.BeitModel,BeitPreTrainedModel:()=>l.BeitPreTrainedModel,BertForMaskedLM:()=>l.BertForMaskedLM,BertForQuestionAnswering:()=>l.BertForQuestionAnswering,BertForSequenceClassification:()=>l.BertForSequenceClassification,BertForTokenClassification:()=>l.BertForTokenClassification,BertModel:()=>l.BertModel,BertPreTrainedModel:()=>l.BertPreTrainedModel,BertTokenizer:()=>d.BertTokenizer,BitImageProcessor:()=>y.BitImageProcessor,BlenderbotForConditionalGeneration:()=>l.BlenderbotForConditionalGeneration,BlenderbotModel:()=>l.BlenderbotModel,BlenderbotPreTrainedModel:()=>l.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>l.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>l.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>l.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>d.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>d.BlenderbotTokenizer,BloomForCausalLM:()=>l.BloomForCausalLM,BloomModel:()=>l.BloomModel,BloomPreTrainedModel:()=>l.BloomPreTrainedModel,BloomTokenizer:()=>d.BloomTokenizer,CLIPFeatureExtractor:()=>y.CLIPFeatureExtractor,CLIPImageProcessor:()=>y.CLIPImageProcessor,CLIPModel:()=>l.CLIPModel,CLIPPreTrainedModel:()=>l.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>l.CLIPSegForImageSegmentation,CLIPSegModel:()=>l.CLIPSegModel,CLIPSegPreTrainedModel:()=>l.CLIPSegPreTrainedModel,CLIPTextModel:()=>l.CLIPTextModel,CLIPTextModelWithProjection:()=>l.CLIPTextModelWithProjection,CLIPTokenizer:()=>d.CLIPTokenizer,CLIPVisionModel:()=>l.CLIPVisionModel,CLIPVisionModelWithProjection:()=>l.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>l.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>l.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>l.CamembertForSequenceClassification,CamembertForTokenClassification:()=>l.CamembertForTokenClassification,CamembertModel:()=>l.CamembertModel,CamembertPreTrainedModel:()=>l.CamembertPreTrainedModel,CamembertTokenizer:()=>d.CamembertTokenizer,CausalLMOutput:()=>l.CausalLMOutput,CausalLMOutputWithPast:()=>l.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>y.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>l.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>l.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>l.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>g.ClapFeatureExtractor,ClapModel:()=>l.ClapModel,ClapPreTrainedModel:()=>l.ClapPreTrainedModel,ClapTextModelWithProjection:()=>l.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>$.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>l.CodeGenForCausalLM,CodeGenModel:()=>l.CodeGenModel,CodeGenPreTrainedModel:()=>l.CodeGenPreTrainedModel,CodeGenTokenizer:()=>d.CodeGenTokenizer,CodeLlamaTokenizer:()=>d.CodeLlamaTokenizer,CohereForCausalLM:()=>l.CohereForCausalLM,CohereModel:()=>l.CohereModel,CoherePreTrainedModel:()=>l.CoherePreTrainedModel,CohereTokenizer:()=>d.CohereTokenizer,ConvBertForMaskedLM:()=>l.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>l.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>l.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>l.ConvBertForTokenClassification,ConvBertModel:()=>l.ConvBertModel,ConvBertPreTrainedModel:()=>l.ConvBertPreTrainedModel,ConvBertTokenizer:()=>d.ConvBertTokenizer,ConvNextFeatureExtractor:()=>y.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>l.ConvNextForImageClassification,ConvNextImageProcessor:()=>y.ConvNextImageProcessor,ConvNextModel:()=>l.ConvNextModel,ConvNextPreTrainedModel:()=>l.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>l.ConvNextV2ForImageClassification,ConvNextV2Model:()=>l.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>l.ConvNextV2PreTrainedModel,DPTFeatureExtractor:()=>y.DPTFeatureExtractor,DPTForDepthEstimation:()=>l.DPTForDepthEstimation,DPTImageProcessor:()=>y.DPTImageProcessor,DPTModel:()=>l.DPTModel,DPTPreTrainedModel:()=>l.DPTPreTrainedModel,DebertaForMaskedLM:()=>l.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>l.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>l.DebertaForSequenceClassification,DebertaForTokenClassification:()=>l.DebertaForTokenClassification,DebertaModel:()=>l.DebertaModel,DebertaPreTrainedModel:()=>l.DebertaPreTrainedModel,DebertaTokenizer:()=>d.DebertaTokenizer,DebertaV2ForMaskedLM:()=>l.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>l.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>l.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>l.DebertaV2ForTokenClassification,DebertaV2Model:()=>l.DebertaV2Model,DebertaV2PreTrainedModel:()=>l.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>d.DebertaV2Tokenizer,DecisionTransformerModel:()=>l.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>l.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>y.DeiTFeatureExtractor,DeiTForImageClassification:()=>l.DeiTForImageClassification,DeiTImageProcessor:()=>y.DeiTImageProcessor,DeiTModel:()=>l.DeiTModel,DeiTPreTrainedModel:()=>l.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>l.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>l.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>a.DepthEstimationPipeline,DepthProForDepthEstimation:()=>l.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>l.DepthProPreTrainedModel,DetrFeatureExtractor:()=>y.DetrFeatureExtractor,DetrForObjectDetection:()=>l.DetrForObjectDetection,DetrForSegmentation:()=>l.DetrForSegmentation,DetrImageProcessor:()=>y.DetrImageProcessor,DetrModel:()=>l.DetrModel,DetrObjectDetectionOutput:()=>l.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>l.DetrPreTrainedModel,DetrSegmentationOutput:()=>l.DetrSegmentationOutput,Dinov2ForImageClassification:()=>l.Dinov2ForImageClassification,Dinov2Model:()=>l.Dinov2Model,Dinov2PreTrainedModel:()=>l.Dinov2PreTrainedModel,DistilBertForMaskedLM:()=>l.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>l.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>l.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>l.DistilBertForTokenClassification,DistilBertModel:()=>l.DistilBertModel,DistilBertPreTrainedModel:()=>l.DistilBertPreTrainedModel,DistilBertTokenizer:()=>d.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>a.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>y.DonutFeatureExtractor,DonutImageProcessor:()=>y.DonutImageProcessor,DonutSwinModel:()=>l.DonutSwinModel,DonutSwinPreTrainedModel:()=>l.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>l.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>y.EfficientNetImageProcessor,EfficientNetModel:()=>l.EfficientNetModel,EfficientNetPreTrainedModel:()=>l.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>l.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>l.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>l.ElectraForSequenceClassification,ElectraForTokenClassification:()=>l.ElectraForTokenClassification,ElectraModel:()=>l.ElectraModel,ElectraPreTrainedModel:()=>l.ElectraPreTrainedModel,ElectraTokenizer:()=>d.ElectraTokenizer,EosTokenCriteria:()=>k.EosTokenCriteria,EsmForMaskedLM:()=>l.EsmForMaskedLM,EsmForSequenceClassification:()=>l.EsmForSequenceClassification,EsmForTokenClassification:()=>l.EsmForTokenClassification,EsmModel:()=>l.EsmModel,EsmPreTrainedModel:()=>l.EsmPreTrainedModel,EsmTokenizer:()=>d.EsmTokenizer,FFT:()=>m.FFT,FalconForCausalLM:()=>l.FalconForCausalLM,FalconModel:()=>l.FalconModel,FalconPreTrainedModel:()=>l.FalconPreTrainedModel,FalconTokenizer:()=>d.FalconTokenizer,FastViTForImageClassification:()=>l.FastViTForImageClassification,FastViTModel:()=>l.FastViTModel,FastViTPreTrainedModel:()=>l.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>a.FeatureExtractionPipeline,FeatureExtractor:()=>f.FeatureExtractor,FillMaskPipeline:()=>a.FillMaskPipeline,Florence2ForConditionalGeneration:()=>l.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>l.Florence2PreTrainedModel,Florence2Processor:()=>x.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>$.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>$.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>y.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>l.GLPNForDepthEstimation,GLPNModel:()=>l.GLPNModel,GLPNPreTrainedModel:()=>l.GLPNPreTrainedModel,GPT2LMHeadModel:()=>l.GPT2LMHeadModel,GPT2Model:()=>l.GPT2Model,GPT2PreTrainedModel:()=>l.GPT2PreTrainedModel,GPT2Tokenizer:()=>d.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>l.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>l.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>l.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>l.GPTJForCausalLM,GPTJModel:()=>l.GPTJModel,GPTJPreTrainedModel:()=>l.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>l.GPTNeoForCausalLM,GPTNeoModel:()=>l.GPTNeoModel,GPTNeoPreTrainedModel:()=>l.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>l.GPTNeoXForCausalLM,GPTNeoXModel:()=>l.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>l.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>d.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>l.Gemma2ForCausalLM,Gemma2Model:()=>l.Gemma2Model,Gemma2PreTrainedModel:()=>l.Gemma2PreTrainedModel,GemmaForCausalLM:()=>l.GemmaForCausalLM,GemmaModel:()=>l.GemmaModel,GemmaPreTrainedModel:()=>l.GemmaPreTrainedModel,GemmaTokenizer:()=>d.GemmaTokenizer,GraniteForCausalLM:()=>l.GraniteForCausalLM,GraniteModel:()=>l.GraniteModel,GranitePreTrainedModel:()=>l.GranitePreTrainedModel,Grok1Tokenizer:()=>d.Grok1Tokenizer,GroupViTModel:()=>l.GroupViTModel,GroupViTPreTrainedModel:()=>l.GroupViTPreTrainedModel,HerbertTokenizer:()=>d.HerbertTokenizer,HieraForImageClassification:()=>l.HieraForImageClassification,HieraModel:()=>l.HieraModel,HieraPreTrainedModel:()=>l.HieraPreTrainedModel,HubertForCTC:()=>l.HubertForCTC,HubertForSequenceClassification:()=>l.HubertForSequenceClassification,HubertModel:()=>l.HubertModel,HubertPreTrainedModel:()=>l.HubertPreTrainedModel,Idefics3ForConditionalGeneration:()=>l.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>y.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>l.Idefics3PreTrainedModel,Idefics3Processor:()=>x.Idefics3Processor,ImageClassificationPipeline:()=>a.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>a.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>g.ImageFeatureExtractor,ImageMattingOutput:()=>l.ImageMattingOutput,ImageProcessor:()=>w.ImageProcessor,ImageSegmentationPipeline:()=>a.ImageSegmentationPipeline,ImageToImagePipeline:()=>a.ImageToImagePipeline,ImageToTextPipeline:()=>a.ImageToTextPipeline,InterruptableStoppingCriteria:()=>k.InterruptableStoppingCriteria,JAISLMHeadModel:()=>l.JAISLMHeadModel,JAISModel:()=>l.JAISModel,JAISPreTrainedModel:()=>l.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>y.JinaCLIPImageProcessor,JinaCLIPModel:()=>l.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>l.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>x.JinaCLIPProcessor,JinaCLIPTextModel:()=>l.JinaCLIPTextModel,JinaCLIPVisionModel:()=>l.JinaCLIPVisionModel,LlamaForCausalLM:()=>l.LlamaForCausalLM,LlamaModel:()=>l.LlamaModel,LlamaPreTrainedModel:()=>l.LlamaPreTrainedModel,LlamaTokenizer:()=>d.LlamaTokenizer,LlavaForConditionalGeneration:()=>l.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>l.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>y.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>l.LlavaPreTrainedModel,LogitsProcessor:()=>$.LogitsProcessor,LogitsProcessorList:()=>$.LogitsProcessorList,LogitsWarper:()=>$.LogitsWarper,LongT5ForConditionalGeneration:()=>l.LongT5ForConditionalGeneration,LongT5Model:()=>l.LongT5Model,LongT5PreTrainedModel:()=>l.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>l.M2M100ForConditionalGeneration,M2M100Model:()=>l.M2M100Model,M2M100PreTrainedModel:()=>l.M2M100PreTrainedModel,M2M100Tokenizer:()=>d.M2M100Tokenizer,MBart50Tokenizer:()=>d.MBart50Tokenizer,MBartForCausalLM:()=>l.MBartForCausalLM,MBartForConditionalGeneration:()=>l.MBartForConditionalGeneration,MBartForSequenceClassification:()=>l.MBartForSequenceClassification,MBartModel:()=>l.MBartModel,MBartPreTrainedModel:()=>l.MBartPreTrainedModel,MBartTokenizer:()=>d.MBartTokenizer,MPNetForMaskedLM:()=>l.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>l.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>l.MPNetForSequenceClassification,MPNetForTokenClassification:()=>l.MPNetForTokenClassification,MPNetModel:()=>l.MPNetModel,MPNetPreTrainedModel:()=>l.MPNetPreTrainedModel,MPNetTokenizer:()=>d.MPNetTokenizer,MT5ForConditionalGeneration:()=>l.MT5ForConditionalGeneration,MT5Model:()=>l.MT5Model,MT5PreTrainedModel:()=>l.MT5PreTrainedModel,MarianMTModel:()=>l.MarianMTModel,MarianModel:()=>l.MarianModel,MarianPreTrainedModel:()=>l.MarianPreTrainedModel,MarianTokenizer:()=>d.MarianTokenizer,Mask2FormerImageProcessor:()=>y.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>y.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>l.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>y.MaskFormerImageProcessor,MaskFormerModel:()=>l.MaskFormerModel,MaskFormerPreTrainedModel:()=>l.MaskFormerPreTrainedModel,MaskedLMOutput:()=>l.MaskedLMOutput,MaxLengthCriteria:()=>k.MaxLengthCriteria,MgpstrForSceneTextRecognition:()=>l.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>l.MgpstrModelOutput,MgpstrPreTrainedModel:()=>l.MgpstrPreTrainedModel,MgpstrProcessor:()=>x.MgpstrProcessor,MgpstrTokenizer:()=>d.MgpstrTokenizer,MinLengthLogitsProcessor:()=>$.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>$.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>l.MistralForCausalLM,MistralModel:()=>l.MistralModel,MistralPreTrainedModel:()=>l.MistralPreTrainedModel,MobileBertForMaskedLM:()=>l.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>l.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>l.MobileBertForSequenceClassification,MobileBertModel:()=>l.MobileBertModel,MobileBertPreTrainedModel:()=>l.MobileBertPreTrainedModel,MobileBertTokenizer:()=>d.MobileBertTokenizer,MobileLLMForCausalLM:()=>l.MobileLLMForCausalLM,MobileLLMModel:()=>l.MobileLLMModel,MobileLLMPreTrainedModel:()=>l.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>y.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>l.MobileNetV1ForImageClassification,MobileNetV1ImageProcessor:()=>y.MobileNetV1ImageProcessor,MobileNetV1Model:()=>l.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>l.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>y.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>l.MobileNetV2ForImageClassification,MobileNetV2ImageProcessor:()=>y.MobileNetV2ImageProcessor,MobileNetV2Model:()=>l.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>l.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>y.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>l.MobileNetV3ForImageClassification,MobileNetV3ImageProcessor:()=>y.MobileNetV3ImageProcessor,MobileNetV3Model:()=>l.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>l.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>y.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>l.MobileNetV4ForImageClassification,MobileNetV4ImageProcessor:()=>y.MobileNetV4ImageProcessor,MobileNetV4Model:()=>l.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>l.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>y.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>l.MobileViTForImageClassification,MobileViTImageProcessor:()=>y.MobileViTImageProcessor,MobileViTModel:()=>l.MobileViTModel,MobileViTPreTrainedModel:()=>l.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>l.MobileViTV2ForImageClassification,MobileViTV2Model:()=>l.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>l.MobileViTV2PreTrainedModel,ModelOutput:()=>l.ModelOutput,Moondream1ForConditionalGeneration:()=>l.Moondream1ForConditionalGeneration,MptForCausalLM:()=>l.MptForCausalLM,MptModel:()=>l.MptModel,MptPreTrainedModel:()=>l.MptPreTrainedModel,MultiModalityCausalLM:()=>l.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>l.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>l.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>l.MusicgenForConditionalGeneration,MusicgenModel:()=>l.MusicgenModel,MusicgenPreTrainedModel:()=>l.MusicgenPreTrainedModel,NllbTokenizer:()=>d.NllbTokenizer,NoBadWordsLogitsProcessor:()=>$.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>$.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>l.NomicBertModel,NomicBertPreTrainedModel:()=>l.NomicBertPreTrainedModel,NougatImageProcessor:()=>y.NougatImageProcessor,NougatTokenizer:()=>d.NougatTokenizer,OPTForCausalLM:()=>l.OPTForCausalLM,OPTModel:()=>l.OPTModel,OPTPreTrainedModel:()=>l.OPTPreTrainedModel,ObjectDetectionPipeline:()=>a.ObjectDetectionPipeline,OlmoForCausalLM:()=>l.OlmoForCausalLM,OlmoModel:()=>l.OlmoModel,OlmoPreTrainedModel:()=>l.OlmoPreTrainedModel,OpenELMForCausalLM:()=>l.OpenELMForCausalLM,OpenELMModel:()=>l.OpenELMModel,OpenELMPreTrainedModel:()=>l.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>y.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>l.OwlViTForObjectDetection,OwlViTImageProcessor:()=>y.OwlViTImageProcessor,OwlViTModel:()=>l.OwlViTModel,OwlViTPreTrainedModel:()=>l.OwlViTPreTrainedModel,OwlViTProcessor:()=>x.OwlViTProcessor,Owlv2ForObjectDetection:()=>l.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>y.Owlv2ImageProcessor,Owlv2Model:()=>l.Owlv2Model,Owlv2PreTrainedModel:()=>l.Owlv2PreTrainedModel,PatchTSMixerForPrediction:()=>l.PatchTSMixerForPrediction,PatchTSMixerModel:()=>l.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>l.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>l.PatchTSTForPrediction,PatchTSTModel:()=>l.PatchTSTModel,PatchTSTPreTrainedModel:()=>l.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>l.Phi3ForCausalLM,Phi3Model:()=>l.Phi3Model,Phi3PreTrainedModel:()=>l.Phi3PreTrainedModel,PhiForCausalLM:()=>l.PhiForCausalLM,PhiModel:()=>l.PhiModel,PhiPreTrainedModel:()=>l.PhiPreTrainedModel,Pipeline:()=>a.Pipeline,PreTrainedModel:()=>l.PreTrainedModel,PreTrainedTokenizer:()=>d.PreTrainedTokenizer,PretrainedConfig:()=>u.PretrainedConfig,PretrainedMixin:()=>l.PretrainedMixin,Processor:()=>v.Processor,PvtForImageClassification:()=>l.PvtForImageClassification,PvtImageProcessor:()=>y.PvtImageProcessor,PvtModel:()=>l.PvtModel,PvtPreTrainedModel:()=>l.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>g.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>l.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>l.PyAnnoteModel,PyAnnotePreTrainedModel:()=>l.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>x.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>l.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>a.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>l.Qwen2ForCausalLM,Qwen2Model:()=>l.Qwen2Model,Qwen2PreTrainedModel:()=>l.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>d.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>l.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>y.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>l.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>x.Qwen2VLProcessor,RTDetrForObjectDetection:()=>l.RTDetrForObjectDetection,RTDetrImageProcessor:()=>y.RTDetrImageProcessor,RTDetrModel:()=>l.RTDetrModel,RTDetrObjectDetectionOutput:()=>l.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>l.RTDetrPreTrainedModel,RawImage:()=>p.RawImage,RepetitionPenaltyLogitsProcessor:()=>$.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>l.ResNetForImageClassification,ResNetModel:()=>l.ResNetModel,ResNetPreTrainedModel:()=>l.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>l.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>l.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>l.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>l.RoFormerForTokenClassification,RoFormerModel:()=>l.RoFormerModel,RoFormerPreTrainedModel:()=>l.RoFormerPreTrainedModel,RoFormerTokenizer:()=>d.RoFormerTokenizer,RobertaForMaskedLM:()=>l.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>l.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>l.RobertaForSequenceClassification,RobertaForTokenClassification:()=>l.RobertaForTokenClassification,RobertaModel:()=>l.RobertaModel,RobertaPreTrainedModel:()=>l.RobertaPreTrainedModel,RobertaTokenizer:()=>d.RobertaTokenizer,SamImageProcessor:()=>y.SamImageProcessor,SamImageSegmentationOutput:()=>l.SamImageSegmentationOutput,SamModel:()=>l.SamModel,SamPreTrainedModel:()=>l.SamPreTrainedModel,SamProcessor:()=>x.SamProcessor,SapiensForDepthEstimation:()=>l.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>l.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>l.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>l.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>g.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>y.SegformerFeatureExtractor,SegformerForImageClassification:()=>l.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>l.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>y.SegformerImageProcessor,SegformerModel:()=>l.SegformerModel,SegformerPreTrainedModel:()=>l.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>l.Seq2SeqLMOutput,SequenceClassifierOutput:()=>l.SequenceClassifierOutput,SiglipImageProcessor:()=>y.SiglipImageProcessor,SiglipModel:()=>l.SiglipModel,SiglipPreTrainedModel:()=>l.SiglipPreTrainedModel,SiglipTextModel:()=>l.SiglipTextModel,SiglipTokenizer:()=>d.SiglipTokenizer,SiglipVisionModel:()=>l.SiglipVisionModel,SpeechT5FeatureExtractor:()=>g.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>l.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>l.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>l.SpeechT5HifiGan,SpeechT5Model:()=>l.SpeechT5Model,SpeechT5PreTrainedModel:()=>l.SpeechT5PreTrainedModel,SpeechT5Processor:()=>x.SpeechT5Processor,SpeechT5Tokenizer:()=>d.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>l.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>l.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>l.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>l.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>l.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>d.SqueezeBertTokenizer,StableLmForCausalLM:()=>l.StableLmForCausalLM,StableLmModel:()=>l.StableLmModel,StableLmPreTrainedModel:()=>l.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>l.Starcoder2ForCausalLM,Starcoder2Model:()=>l.Starcoder2Model,Starcoder2PreTrainedModel:()=>l.Starcoder2PreTrainedModel,StoppingCriteria:()=>k.StoppingCriteria,StoppingCriteriaList:()=>k.StoppingCriteriaList,SummarizationPipeline:()=>a.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>$.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>l.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>y.Swin2SRImageProcessor,Swin2SRModel:()=>l.Swin2SRModel,Swin2SRPreTrainedModel:()=>l.Swin2SRPreTrainedModel,SwinForImageClassification:()=>l.SwinForImageClassification,SwinModel:()=>l.SwinModel,SwinPreTrainedModel:()=>l.SwinPreTrainedModel,T5ForConditionalGeneration:()=>l.T5ForConditionalGeneration,T5Model:()=>l.T5Model,T5PreTrainedModel:()=>l.T5PreTrainedModel,T5Tokenizer:()=>d.T5Tokenizer,TableTransformerForObjectDetection:()=>l.TableTransformerForObjectDetection,TableTransformerModel:()=>l.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>l.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>l.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>$.TemperatureLogitsWarper,Tensor:()=>h.Tensor,Text2TextGenerationPipeline:()=>a.Text2TextGenerationPipeline,TextClassificationPipeline:()=>a.TextClassificationPipeline,TextGenerationPipeline:()=>a.TextGenerationPipeline,TextStreamer:()=>T.TextStreamer,TextToAudioPipeline:()=>a.TextToAudioPipeline,TokenClassificationPipeline:()=>a.TokenClassificationPipeline,TokenClassifierOutput:()=>l.TokenClassifierOutput,TokenizerModel:()=>d.TokenizerModel,TopKLogitsWarper:()=>$.TopKLogitsWarper,TopPLogitsWarper:()=>$.TopPLogitsWarper,TrOCRForCausalLM:()=>l.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>l.TrOCRPreTrainedModel,TranslationPipeline:()=>a.TranslationPipeline,UniSpeechForCTC:()=>l.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>l.UniSpeechForSequenceClassification,UniSpeechModel:()=>l.UniSpeechModel,UniSpeechPreTrainedModel:()=>l.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>l.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>l.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>l.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>l.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>l.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>x.VLChatProcessor,VLMImageProcessor:()=>y.VLMImageProcessor,ViTFeatureExtractor:()=>y.ViTFeatureExtractor,ViTForImageClassification:()=>l.ViTForImageClassification,ViTImageProcessor:()=>y.ViTImageProcessor,ViTMAEModel:()=>l.ViTMAEModel,ViTMAEPreTrainedModel:()=>l.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>l.ViTMSNForImageClassification,ViTMSNModel:()=>l.ViTMSNModel,ViTMSNPreTrainedModel:()=>l.ViTMSNPreTrainedModel,ViTModel:()=>l.ViTModel,ViTPreTrainedModel:()=>l.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>l.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>l.VitMatteForImageMatting,VitMatteImageProcessor:()=>y.VitMatteImageProcessor,VitMattePreTrainedModel:()=>l.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>l.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>y.VitPoseImageProcessor,VitPosePreTrainedModel:()=>l.VitPosePreTrainedModel,VitsModel:()=>l.VitsModel,VitsModelOutput:()=>l.VitsModelOutput,VitsPreTrainedModel:()=>l.VitsPreTrainedModel,VitsTokenizer:()=>d.VitsTokenizer,Wav2Vec2BertForCTC:()=>l.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>l.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>l.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>l.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>d.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>g.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>l.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>l.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>l.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>l.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>l.Wav2Vec2PreTrainedModel,Wav2Vec2ProcessorWithLM:()=>x.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>l.WavLMForAudioFrameClassification,WavLMForCTC:()=>l.WavLMForCTC,WavLMForSequenceClassification:()=>l.WavLMForSequenceClassification,WavLMForXVector:()=>l.WavLMForXVector,WavLMModel:()=>l.WavLMModel,WavLMPreTrainedModel:()=>l.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>g.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>l.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>l.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>g.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>l.WhisperForConditionalGeneration,WhisperModel:()=>l.WhisperModel,WhisperPreTrainedModel:()=>l.WhisperPreTrainedModel,WhisperProcessor:()=>x.WhisperProcessor,WhisperTextStreamer:()=>T.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>$.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>d.WhisperTokenizer,XLMForQuestionAnswering:()=>l.XLMForQuestionAnswering,XLMForSequenceClassification:()=>l.XLMForSequenceClassification,XLMForTokenClassification:()=>l.XLMForTokenClassification,XLMModel:()=>l.XLMModel,XLMPreTrainedModel:()=>l.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>l.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>l.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>l.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>l.XLMRobertaForTokenClassification,XLMRobertaModel:()=>l.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>l.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>d.XLMRobertaTokenizer,XLMTokenizer:()=>d.XLMTokenizer,XLMWithLMHeadModel:()=>l.XLMWithLMHeadModel,XVectorOutput:()=>l.XVectorOutput,YolosFeatureExtractor:()=>y.YolosFeatureExtractor,YolosForObjectDetection:()=>l.YolosForObjectDetection,YolosImageProcessor:()=>y.YolosImageProcessor,YolosModel:()=>l.YolosModel,YolosObjectDetectionOutput:()=>l.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>l.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>a.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>a.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>a.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>a.ZeroShotObjectDetectionPipeline,bankers_round:()=>m.bankers_round,cat:()=>h.cat,cos_sim:()=>m.cos_sim,dot:()=>m.dot,dynamic_time_warping:()=>m.dynamic_time_warping,env:()=>i.env,full:()=>h.full,full_like:()=>h.full_like,getKeyValueShapes:()=>u.getKeyValueShapes,hamming:()=>c.hamming,hanning:()=>c.hanning,interpolate:()=>h.interpolate,interpolate_4d:()=>h.interpolate_4d,interpolate_data:()=>m.interpolate_data,is_chinese_char:()=>d.is_chinese_char,layer_norm:()=>h.layer_norm,load_image:()=>p.load_image,log_softmax:()=>m.log_softmax,magnitude:()=>m.magnitude,matmul:()=>h.matmul,max:()=>m.max,mean:()=>h.mean,mean_pooling:()=>h.mean_pooling,medianFilter:()=>m.medianFilter,mel_filter_bank:()=>c.mel_filter_bank,min:()=>m.min,ones:()=>h.ones,ones_like:()=>h.ones_like,permute:()=>h.permute,permute_data:()=>m.permute_data,pipeline:()=>a.pipeline,quantize_embeddings:()=>h.quantize_embeddings,read_audio:()=>c.read_audio,rfft:()=>h.rfft,round:()=>m.round,softmax:()=>m.softmax,spectrogram:()=>c.spectrogram,stack:()=>h.stack,std_mean:()=>h.std_mean,topk:()=>h.topk,window_function:()=>c.window_function,zeros:()=>h.zeros,zeros_like:()=>h.zeros_like});var i=s(/*! ./env.js */"./src/env.js"),a=s(/*! ./pipelines.js */"./src/pipelines.js"),l=s(/*! ./models.js */"./src/models.js"),d=s(/*! ./tokenizers.js */"./src/tokenizers.js"),u=s(/*! ./configs.js */"./src/configs.js"),c=s(/*! ./utils/audio.js */"./src/utils/audio.js"),p=s(/*! ./utils/image.js */"./src/utils/image.js"),h=s(/*! ./utils/tensor.js */"./src/utils/tensor.js"),m=s(/*! ./utils/maths.js */"./src/utils/maths.js"),f=s(/*! ./base/feature_extraction_utils.js */"./src/base/feature_extraction_utils.js"),g=s(/*! ./models/feature_extractors.js */"./src/models/feature_extractors.js"),_=s(/*! ./models/auto/feature_extraction_auto.js */"./src/models/auto/feature_extraction_auto.js"),w=s(/*! ./base/image_processors_utils.js */"./src/base/image_processors_utils.js"),y=s(/*! ./models/image_processors.js */"./src/models/image_processors.js"),b=s(/*! ./models/auto/image_processing_auto.js */"./src/models/auto/image_processing_auto.js"),v=s(/*! ./base/processing_utils.js */"./src/base/processing_utils.js"),x=s(/*! ./models/processors.js */"./src/models/processors.js"),M=s(/*! ./models/auto/processing_auto.js */"./src/models/auto/processing_auto.js"),T=s(/*! ./generation/streamers.js */"./src/generation/streamers.js"),k=s(/*! ./generation/stopping_criteria.js */"./src/generation/stopping_criteria.js"),$=s(/*! ./generation/logits_process.js */"./src/generation/logits_process.js"),C=o.ASTFeatureExtractor,P=o.ASTForAudioClassification,S=o.ASTModel,E=o.ASTPreTrainedModel,F=o.AlbertForMaskedLM,A=o.AlbertForQuestionAnswering,I=o.AlbertForSequenceClassification,z=o.AlbertModel,L=o.AlbertPreTrainedModel,O=o.AlbertTokenizer,B=o.AudioClassificationPipeline,D=o.AutoConfig,N=o.AutoFeatureExtractor,R=o.AutoImageProcessor,j=o.AutoModel,V=o.AutoModelForAudioClassification,G=o.AutoModelForAudioFrameClassification,U=o.AutoModelForCTC,q=o.AutoModelForCausalLM,W=o.AutoModelForDepthEstimation,H=o.AutoModelForDocumentQuestionAnswering,X=o.AutoModelForImageClassification,Q=o.AutoModelForImageFeatureExtraction,K=o.AutoModelForImageMatting,Y=o.AutoModelForImageSegmentation,J=o.AutoModelForImageToImage,Z=o.AutoModelForMaskGeneration,ee=o.AutoModelForMaskedLM,te=o.AutoModelForNormalEstimation,ne=o.AutoModelForObjectDetection,re=o.AutoModelForPoseEstimation,se=o.AutoModelForQuestionAnswering,oe=o.AutoModelForSemanticSegmentation,ie=o.AutoModelForSeq2SeqLM,ae=o.AutoModelForSequenceClassification,le=o.AutoModelForSpeechSeq2Seq,de=o.AutoModelForTextToSpectrogram,ue=o.AutoModelForTextToWaveform,ce=o.AutoModelForTokenClassification,pe=o.AutoModelForUniversalSegmentation,he=o.AutoModelForVision2Seq,me=o.AutoModelForXVector,fe=o.AutoModelForZeroShotObjectDetection,ge=o.AutoProcessor,_e=o.AutoTokenizer,we=o.AutomaticSpeechRecognitionPipeline,ye=o.BartForConditionalGeneration,be=o.BartForSequenceClassification,ve=o.BartModel,xe=o.BartPretrainedModel,Me=o.BartTokenizer,Te=o.BaseModelOutput,ke=o.BaseStreamer,$e=o.BeitFeatureExtractor,Ce=o.BeitForImageClassification,Pe=o.BeitModel,Se=o.BeitPreTrainedModel,Ee=o.BertForMaskedLM,Fe=o.BertForQuestionAnswering,Ae=o.BertForSequenceClassification,Ie=o.BertForTokenClassification,ze=o.BertModel,Le=o.BertPreTrainedModel,Oe=o.BertTokenizer,Be=o.BitImageProcessor,De=o.BlenderbotForConditionalGeneration,Ne=o.BlenderbotModel,Re=o.BlenderbotPreTrainedModel,je=o.BlenderbotSmallForConditionalGeneration,Ve=o.BlenderbotSmallModel,Ge=o.BlenderbotSmallPreTrainedModel,Ue=o.BlenderbotSmallTokenizer,qe=o.BlenderbotTokenizer,We=o.BloomForCausalLM,He=o.BloomModel,Xe=o.BloomPreTrainedModel,Qe=o.BloomTokenizer,Ke=o.CLIPFeatureExtractor,Ye=o.CLIPImageProcessor,Je=o.CLIPModel,Ze=o.CLIPPreTrainedModel,et=o.CLIPSegForImageSegmentation,tt=o.CLIPSegModel,nt=o.CLIPSegPreTrainedModel,rt=o.CLIPTextModel,st=o.CLIPTextModelWithProjection,ot=o.CLIPTokenizer,it=o.CLIPVisionModel,at=o.CLIPVisionModelWithProjection,lt=o.CamembertForMaskedLM,dt=o.CamembertForQuestionAnswering,ut=o.CamembertForSequenceClassification,ct=o.CamembertForTokenClassification,pt=o.CamembertModel,ht=o.CamembertPreTrainedModel,mt=o.CamembertTokenizer,ft=o.CausalLMOutput,gt=o.CausalLMOutputWithPast,_t=o.ChineseCLIPFeatureExtractor,wt=o.ChineseCLIPModel,yt=o.ChineseCLIPPreTrainedModel,bt=o.ClapAudioModelWithProjection,vt=o.ClapFeatureExtractor,xt=o.ClapModel,Mt=o.ClapPreTrainedModel,Tt=o.ClapTextModelWithProjection,kt=o.ClassifierFreeGuidanceLogitsProcessor,$t=o.CodeGenForCausalLM,Ct=o.CodeGenModel,Pt=o.CodeGenPreTrainedModel,St=o.CodeGenTokenizer,Et=o.CodeLlamaTokenizer,Ft=o.CohereForCausalLM,At=o.CohereModel,It=o.CoherePreTrainedModel,zt=o.CohereTokenizer,Lt=o.ConvBertForMaskedLM,Ot=o.ConvBertForQuestionAnswering,Bt=o.ConvBertForSequenceClassification,Dt=o.ConvBertForTokenClassification,Nt=o.ConvBertModel,Rt=o.ConvBertPreTrainedModel,jt=o.ConvBertTokenizer,Vt=o.ConvNextFeatureExtractor,Gt=o.ConvNextForImageClassification,Ut=o.ConvNextImageProcessor,qt=o.ConvNextModel,Wt=o.ConvNextPreTrainedModel,Ht=o.ConvNextV2ForImageClassification,Xt=o.ConvNextV2Model,Qt=o.ConvNextV2PreTrainedModel,Kt=o.DPTFeatureExtractor,Yt=o.DPTForDepthEstimation,Jt=o.DPTImageProcessor,Zt=o.DPTModel,en=o.DPTPreTrainedModel,tn=o.DebertaForMaskedLM,nn=o.DebertaForQuestionAnswering,rn=o.DebertaForSequenceClassification,sn=o.DebertaForTokenClassification,on=o.DebertaModel,an=o.DebertaPreTrainedModel,ln=o.DebertaTokenizer,dn=o.DebertaV2ForMaskedLM,un=o.DebertaV2ForQuestionAnswering,cn=o.DebertaV2ForSequenceClassification,pn=o.DebertaV2ForTokenClassification,hn=o.DebertaV2Model,mn=o.DebertaV2PreTrainedModel,fn=o.DebertaV2Tokenizer,gn=o.DecisionTransformerModel,_n=o.DecisionTransformerPreTrainedModel,wn=o.DeiTFeatureExtractor,yn=o.DeiTForImageClassification,bn=o.DeiTImageProcessor,vn=o.DeiTModel,xn=o.DeiTPreTrainedModel,Mn=o.DepthAnythingForDepthEstimation,Tn=o.DepthAnythingPreTrainedModel,kn=o.DepthEstimationPipeline,$n=o.DepthProForDepthEstimation,Cn=o.DepthProPreTrainedModel,Pn=o.DetrFeatureExtractor,Sn=o.DetrForObjectDetection,En=o.DetrForSegmentation,Fn=o.DetrImageProcessor,An=o.DetrModel,In=o.DetrObjectDetectionOutput,zn=o.DetrPreTrainedModel,Ln=o.DetrSegmentationOutput,On=o.Dinov2ForImageClassification,Bn=o.Dinov2Model,Dn=o.Dinov2PreTrainedModel,Nn=o.DistilBertForMaskedLM,Rn=o.DistilBertForQuestionAnswering,jn=o.DistilBertForSequenceClassification,Vn=o.DistilBertForTokenClassification,Gn=o.DistilBertModel,Un=o.DistilBertPreTrainedModel,qn=o.DistilBertTokenizer,Wn=o.DocumentQuestionAnsweringPipeline,Hn=o.DonutFeatureExtractor,Xn=o.DonutImageProcessor,Qn=o.DonutSwinModel,Kn=o.DonutSwinPreTrainedModel,Yn=o.EfficientNetForImageClassification,Jn=o.EfficientNetImageProcessor,Zn=o.EfficientNetModel,er=o.EfficientNetPreTrainedModel,tr=o.ElectraForMaskedLM,nr=o.ElectraForQuestionAnswering,rr=o.ElectraForSequenceClassification,sr=o.ElectraForTokenClassification,or=o.ElectraModel,ir=o.ElectraPreTrainedModel,ar=o.ElectraTokenizer,lr=o.EosTokenCriteria,dr=o.EsmForMaskedLM,ur=o.EsmForSequenceClassification,cr=o.EsmForTokenClassification,pr=o.EsmModel,hr=o.EsmPreTrainedModel,mr=o.EsmTokenizer,fr=o.FFT,gr=o.FalconForCausalLM,_r=o.FalconModel,wr=o.FalconPreTrainedModel,yr=o.FalconTokenizer,br=o.FastViTForImageClassification,vr=o.FastViTModel,xr=o.FastViTPreTrainedModel,Mr=o.FeatureExtractionPipeline,Tr=o.FeatureExtractor,kr=o.FillMaskPipeline,$r=o.Florence2ForConditionalGeneration,Cr=o.Florence2PreTrainedModel,Pr=o.Florence2Processor,Sr=o.ForcedBOSTokenLogitsProcessor,Er=o.ForcedEOSTokenLogitsProcessor,Fr=o.GLPNFeatureExtractor,Ar=o.GLPNForDepthEstimation,Ir=o.GLPNModel,zr=o.GLPNPreTrainedModel,Lr=o.GPT2LMHeadModel,Or=o.GPT2Model,Br=o.GPT2PreTrainedModel,Dr=o.GPT2Tokenizer,Nr=o.GPTBigCodeForCausalLM,Rr=o.GPTBigCodeModel,jr=o.GPTBigCodePreTrainedModel,Vr=o.GPTJForCausalLM,Gr=o.GPTJModel,Ur=o.GPTJPreTrainedModel,qr=o.GPTNeoForCausalLM,Wr=o.GPTNeoModel,Hr=o.GPTNeoPreTrainedModel,Xr=o.GPTNeoXForCausalLM,Qr=o.GPTNeoXModel,Kr=o.GPTNeoXPreTrainedModel,Yr=o.GPTNeoXTokenizer,Jr=o.Gemma2ForCausalLM,Zr=o.Gemma2Model,es=o.Gemma2PreTrainedModel,ts=o.GemmaForCausalLM,ns=o.GemmaModel,rs=o.GemmaPreTrainedModel,ss=o.GemmaTokenizer,os=o.GraniteForCausalLM,is=o.GraniteModel,as=o.GranitePreTrainedModel,ls=o.Grok1Tokenizer,ds=o.GroupViTModel,us=o.GroupViTPreTrainedModel,cs=o.HerbertTokenizer,ps=o.HieraForImageClassification,hs=o.HieraModel,ms=o.HieraPreTrainedModel,fs=o.HubertForCTC,gs=o.HubertForSequenceClassification,_s=o.HubertModel,ws=o.HubertPreTrainedModel,ys=o.Idefics3ForConditionalGeneration,bs=o.Idefics3ImageProcessor,vs=o.Idefics3PreTrainedModel,xs=o.Idefics3Processor,Ms=o.ImageClassificationPipeline,Ts=o.ImageFeatureExtractionPipeline,ks=o.ImageFeatureExtractor,$s=o.ImageMattingOutput,Cs=o.ImageProcessor,Ps=o.ImageSegmentationPipeline,Ss=o.ImageToImagePipeline,Es=o.ImageToTextPipeline,Fs=o.InterruptableStoppingCriteria,As=o.JAISLMHeadModel,Is=o.JAISModel,zs=o.JAISPreTrainedModel,Ls=o.JinaCLIPImageProcessor,Os=o.JinaCLIPModel,Bs=o.JinaCLIPPreTrainedModel,Ds=o.JinaCLIPProcessor,Ns=o.JinaCLIPTextModel,Rs=o.JinaCLIPVisionModel,js=o.LlamaForCausalLM,Vs=o.LlamaModel,Gs=o.LlamaPreTrainedModel,Us=o.LlamaTokenizer,qs=o.LlavaForConditionalGeneration,Ws=o.LlavaOnevisionForConditionalGeneration,Hs=o.LlavaOnevisionImageProcessor,Xs=o.LlavaPreTrainedModel,Qs=o.LogitsProcessor,Ks=o.LogitsProcessorList,Ys=o.LogitsWarper,Js=o.LongT5ForConditionalGeneration,Zs=o.LongT5Model,eo=o.LongT5PreTrainedModel,to=o.M2M100ForConditionalGeneration,no=o.M2M100Model,ro=o.M2M100PreTrainedModel,so=o.M2M100Tokenizer,oo=o.MBart50Tokenizer,io=o.MBartForCausalLM,ao=o.MBartForConditionalGeneration,lo=o.MBartForSequenceClassification,uo=o.MBartModel,co=o.MBartPreTrainedModel,po=o.MBartTokenizer,ho=o.MPNetForMaskedLM,mo=o.MPNetForQuestionAnswering,fo=o.MPNetForSequenceClassification,go=o.MPNetForTokenClassification,_o=o.MPNetModel,wo=o.MPNetPreTrainedModel,yo=o.MPNetTokenizer,bo=o.MT5ForConditionalGeneration,vo=o.MT5Model,xo=o.MT5PreTrainedModel,Mo=o.MarianMTModel,To=o.MarianModel,ko=o.MarianPreTrainedModel,$o=o.MarianTokenizer,Co=o.Mask2FormerImageProcessor,Po=o.MaskFormerFeatureExtractor,So=o.MaskFormerForInstanceSegmentation,Eo=o.MaskFormerImageProcessor,Fo=o.MaskFormerModel,Ao=o.MaskFormerPreTrainedModel,Io=o.MaskedLMOutput,zo=o.MaxLengthCriteria,Lo=o.MgpstrForSceneTextRecognition,Oo=o.MgpstrModelOutput,Bo=o.MgpstrPreTrainedModel,Do=o.MgpstrProcessor,No=o.MgpstrTokenizer,Ro=o.MinLengthLogitsProcessor,jo=o.MinNewTokensLengthLogitsProcessor,Vo=o.MistralForCausalLM,Go=o.MistralModel,Uo=o.MistralPreTrainedModel,qo=o.MobileBertForMaskedLM,Wo=o.MobileBertForQuestionAnswering,Ho=o.MobileBertForSequenceClassification,Xo=o.MobileBertModel,Qo=o.MobileBertPreTrainedModel,Ko=o.MobileBertTokenizer,Yo=o.MobileLLMForCausalLM,Jo=o.MobileLLMModel,Zo=o.MobileLLMPreTrainedModel,ei=o.MobileNetV1FeatureExtractor,ti=o.MobileNetV1ForImageClassification,ni=o.MobileNetV1ImageProcessor,ri=o.MobileNetV1Model,si=o.MobileNetV1PreTrainedModel,oi=o.MobileNetV2FeatureExtractor,ii=o.MobileNetV2ForImageClassification,ai=o.MobileNetV2ImageProcessor,li=o.MobileNetV2Model,di=o.MobileNetV2PreTrainedModel,ui=o.MobileNetV3FeatureExtractor,ci=o.MobileNetV3ForImageClassification,pi=o.MobileNetV3ImageProcessor,hi=o.MobileNetV3Model,mi=o.MobileNetV3PreTrainedModel,fi=o.MobileNetV4FeatureExtractor,gi=o.MobileNetV4ForImageClassification,_i=o.MobileNetV4ImageProcessor,wi=o.MobileNetV4Model,yi=o.MobileNetV4PreTrainedModel,bi=o.MobileViTFeatureExtractor,vi=o.MobileViTForImageClassification,xi=o.MobileViTImageProcessor,Mi=o.MobileViTModel,Ti=o.MobileViTPreTrainedModel,ki=o.MobileViTV2ForImageClassification,$i=o.MobileViTV2Model,Ci=o.MobileViTV2PreTrainedModel,Pi=o.ModelOutput,Si=o.Moondream1ForConditionalGeneration,Ei=o.MptForCausalLM,Fi=o.MptModel,Ai=o.MptPreTrainedModel,Ii=o.MultiModalityCausalLM,zi=o.MultiModalityPreTrainedModel,Li=o.MusicgenForCausalLM,Oi=o.MusicgenForConditionalGeneration,Bi=o.MusicgenModel,Di=o.MusicgenPreTrainedModel,Ni=o.NllbTokenizer,Ri=o.NoBadWordsLogitsProcessor,ji=o.NoRepeatNGramLogitsProcessor,Vi=o.NomicBertModel,Gi=o.NomicBertPreTrainedModel,Ui=o.NougatImageProcessor,qi=o.NougatTokenizer,Wi=o.OPTForCausalLM,Hi=o.OPTModel,Xi=o.OPTPreTrainedModel,Qi=o.ObjectDetectionPipeline,Ki=o.OlmoForCausalLM,Yi=o.OlmoModel,Ji=o.OlmoPreTrainedModel,Zi=o.OpenELMForCausalLM,ea=o.OpenELMModel,ta=o.OpenELMPreTrainedModel,na=o.OwlViTFeatureExtractor,ra=o.OwlViTForObjectDetection,sa=o.OwlViTImageProcessor,oa=o.OwlViTModel,ia=o.OwlViTPreTrainedModel,aa=o.OwlViTProcessor,la=o.Owlv2ForObjectDetection,da=o.Owlv2ImageProcessor,ua=o.Owlv2Model,ca=o.Owlv2PreTrainedModel,pa=o.PatchTSMixerForPrediction,ha=o.PatchTSMixerModel,ma=o.PatchTSMixerPreTrainedModel,fa=o.PatchTSTForPrediction,ga=o.PatchTSTModel,_a=o.PatchTSTPreTrainedModel,wa=o.Phi3ForCausalLM,ya=o.Phi3Model,ba=o.Phi3PreTrainedModel,va=o.PhiForCausalLM,xa=o.PhiModel,Ma=o.PhiPreTrainedModel,Ta=o.Pipeline,ka=o.PreTrainedModel,$a=o.PreTrainedTokenizer,Ca=o.PretrainedConfig,Pa=o.PretrainedMixin,Sa=o.Processor,Ea=o.PvtForImageClassification,Fa=o.PvtImageProcessor,Aa=o.PvtModel,Ia=o.PvtPreTrainedModel,za=o.PyAnnoteFeatureExtractor,La=o.PyAnnoteForAudioFrameClassification,Oa=o.PyAnnoteModel,Ba=o.PyAnnotePreTrainedModel,Da=o.PyAnnoteProcessor,Na=o.QuestionAnsweringModelOutput,Ra=o.QuestionAnsweringPipeline,ja=o.Qwen2ForCausalLM,Va=o.Qwen2Model,Ga=o.Qwen2PreTrainedModel,Ua=o.Qwen2Tokenizer,qa=o.Qwen2VLForConditionalGeneration,Wa=o.Qwen2VLImageProcessor,Ha=o.Qwen2VLPreTrainedModel,Xa=o.Qwen2VLProcessor,Qa=o.RTDetrForObjectDetection,Ka=o.RTDetrImageProcessor,Ya=o.RTDetrModel,Ja=o.RTDetrObjectDetectionOutput,Za=o.RTDetrPreTrainedModel,el=o.RawImage,tl=o.RepetitionPenaltyLogitsProcessor,nl=o.ResNetForImageClassification,rl=o.ResNetModel,sl=o.ResNetPreTrainedModel,ol=o.RoFormerForMaskedLM,il=o.RoFormerForQuestionAnswering,al=o.RoFormerForSequenceClassification,ll=o.RoFormerForTokenClassification,dl=o.RoFormerModel,ul=o.RoFormerPreTrainedModel,cl=o.RoFormerTokenizer,pl=o.RobertaForMaskedLM,hl=o.RobertaForQuestionAnswering,ml=o.RobertaForSequenceClassification,fl=o.RobertaForTokenClassification,gl=o.RobertaModel,_l=o.RobertaPreTrainedModel,wl=o.RobertaTokenizer,yl=o.SamImageProcessor,bl=o.SamImageSegmentationOutput,vl=o.SamModel,xl=o.SamPreTrainedModel,Ml=o.SamProcessor,Tl=o.SapiensForDepthEstimation,kl=o.SapiensForNormalEstimation,$l=o.SapiensForSemanticSegmentation,Cl=o.SapiensPreTrainedModel,Pl=o.SeamlessM4TFeatureExtractor,Sl=o.SegformerFeatureExtractor,El=o.SegformerForImageClassification,Fl=o.SegformerForSemanticSegmentation,Al=o.SegformerImageProcessor,Il=o.SegformerModel,zl=o.SegformerPreTrainedModel,Ll=o.Seq2SeqLMOutput,Ol=o.SequenceClassifierOutput,Bl=o.SiglipImageProcessor,Dl=o.SiglipModel,Nl=o.SiglipPreTrainedModel,Rl=o.SiglipTextModel,jl=o.SiglipTokenizer,Vl=o.SiglipVisionModel,Gl=o.SpeechT5FeatureExtractor,Ul=o.SpeechT5ForSpeechToText,ql=o.SpeechT5ForTextToSpeech,Wl=o.SpeechT5HifiGan,Hl=o.SpeechT5Model,Xl=o.SpeechT5PreTrainedModel,Ql=o.SpeechT5Processor,Kl=o.SpeechT5Tokenizer,Yl=o.SqueezeBertForMaskedLM,Jl=o.SqueezeBertForQuestionAnswering,Zl=o.SqueezeBertForSequenceClassification,ed=o.SqueezeBertModel,td=o.SqueezeBertPreTrainedModel,nd=o.SqueezeBertTokenizer,rd=o.StableLmForCausalLM,sd=o.StableLmModel,od=o.StableLmPreTrainedModel,id=o.Starcoder2ForCausalLM,ad=o.Starcoder2Model,ld=o.Starcoder2PreTrainedModel,dd=o.StoppingCriteria,ud=o.StoppingCriteriaList,cd=o.SummarizationPipeline,pd=o.SuppressTokensAtBeginLogitsProcessor,hd=o.Swin2SRForImageSuperResolution,md=o.Swin2SRImageProcessor,fd=o.Swin2SRModel,gd=o.Swin2SRPreTrainedModel,_d=o.SwinForImageClassification,wd=o.SwinModel,yd=o.SwinPreTrainedModel,bd=o.T5ForConditionalGeneration,vd=o.T5Model,xd=o.T5PreTrainedModel,Md=o.T5Tokenizer,Td=o.TableTransformerForObjectDetection,kd=o.TableTransformerModel,$d=o.TableTransformerObjectDetectionOutput,Cd=o.TableTransformerPreTrainedModel,Pd=o.TemperatureLogitsWarper,Sd=o.Tensor,Ed=o.Text2TextGenerationPipeline,Fd=o.TextClassificationPipeline,Ad=o.TextGenerationPipeline,Id=o.TextStreamer,zd=o.TextToAudioPipeline,Ld=o.TokenClassificationPipeline,Od=o.TokenClassifierOutput,Bd=o.TokenizerModel,Dd=o.TopKLogitsWarper,Nd=o.TopPLogitsWarper,Rd=o.TrOCRForCausalLM,jd=o.TrOCRPreTrainedModel,Vd=o.TranslationPipeline,Gd=o.UniSpeechForCTC,Ud=o.UniSpeechForSequenceClassification,qd=o.UniSpeechModel,Wd=o.UniSpeechPreTrainedModel,Hd=o.UniSpeechSatForAudioFrameClassification,Xd=o.UniSpeechSatForCTC,Qd=o.UniSpeechSatForSequenceClassification,Kd=o.UniSpeechSatModel,Yd=o.UniSpeechSatPreTrainedModel,Jd=o.VLChatProcessor,Zd=o.VLMImageProcessor,eu=o.ViTFeatureExtractor,tu=o.ViTForImageClassification,nu=o.ViTImageProcessor,ru=o.ViTMAEModel,su=o.ViTMAEPreTrainedModel,ou=o.ViTMSNForImageClassification,iu=o.ViTMSNModel,au=o.ViTMSNPreTrainedModel,lu=o.ViTModel,du=o.ViTPreTrainedModel,uu=o.VisionEncoderDecoderModel,cu=o.VitMatteForImageMatting,pu=o.VitMatteImageProcessor,hu=o.VitMattePreTrainedModel,mu=o.VitPoseForPoseEstimation,fu=o.VitPoseImageProcessor,gu=o.VitPosePreTrainedModel,_u=o.VitsModel,wu=o.VitsModelOutput,yu=o.VitsPreTrainedModel,bu=o.VitsTokenizer,vu=o.Wav2Vec2BertForCTC,xu=o.Wav2Vec2BertForSequenceClassification,Mu=o.Wav2Vec2BertModel,Tu=o.Wav2Vec2BertPreTrainedModel,ku=o.Wav2Vec2CTCTokenizer,$u=o.Wav2Vec2FeatureExtractor,Cu=o.Wav2Vec2ForAudioFrameClassification,Pu=o.Wav2Vec2ForCTC,Su=o.Wav2Vec2ForSequenceClassification,Eu=o.Wav2Vec2Model,Fu=o.Wav2Vec2PreTrainedModel,Au=o.Wav2Vec2ProcessorWithLM,Iu=o.WavLMForAudioFrameClassification,zu=o.WavLMForCTC,Lu=o.WavLMForSequenceClassification,Ou=o.WavLMForXVector,Bu=o.WavLMModel,Du=o.WavLMPreTrainedModel,Nu=o.WeSpeakerFeatureExtractor,Ru=o.WeSpeakerResNetModel,ju=o.WeSpeakerResNetPreTrainedModel,Vu=o.WhisperFeatureExtractor,Gu=o.WhisperForConditionalGeneration,Uu=o.WhisperModel,qu=o.WhisperPreTrainedModel,Wu=o.WhisperProcessor,Hu=o.WhisperTextStreamer,Xu=o.WhisperTimeStampLogitsProcessor,Qu=o.WhisperTokenizer,Ku=o.XLMForQuestionAnswering,Yu=o.XLMForSequenceClassification,Ju=o.XLMForTokenClassification,Zu=o.XLMModel,ec=o.XLMPreTrainedModel,tc=o.XLMRobertaForMaskedLM,nc=o.XLMRobertaForQuestionAnswering,rc=o.XLMRobertaForSequenceClassification,sc=o.XLMRobertaForTokenClassification,oc=o.XLMRobertaModel,ic=o.XLMRobertaPreTrainedModel,ac=o.XLMRobertaTokenizer,lc=o.XLMTokenizer,dc=o.XLMWithLMHeadModel,uc=o.XVectorOutput,cc=o.YolosFeatureExtractor,pc=o.YolosForObjectDetection,hc=o.YolosImageProcessor,mc=o.YolosModel,fc=o.YolosObjectDetectionOutput,gc=o.YolosPreTrainedModel,_c=o.ZeroShotAudioClassificationPipeline,wc=o.ZeroShotClassificationPipeline,yc=o.ZeroShotImageClassificationPipeline,bc=o.ZeroShotObjectDetectionPipeline,vc=o.bankers_round,xc=o.cat,Mc=o.cos_sim,Tc=o.dot,kc=o.dynamic_time_warping,$c=o.env,Cc=o.full,Pc=o.full_like,Sc=o.getKeyValueShapes,Ec=o.hamming,Fc=o.hanning,Ac=o.interpolate,Ic=o.interpolate_4d,zc=o.interpolate_data,Lc=o.is_chinese_char,Oc=o.layer_norm,Bc=o.load_image,Dc=o.log_softmax,Nc=o.magnitude,Rc=o.matmul,jc=o.max,Vc=o.mean,Gc=o.mean_pooling,Uc=o.medianFilter,qc=o.mel_filter_bank,Wc=o.min,Hc=o.ones,Xc=o.ones_like,Qc=o.permute,Kc=o.permute_data,Yc=o.pipeline,Jc=o.quantize_embeddings,Zc=o.read_audio,ep=o.rfft,tp=o.round,np=o.softmax,rp=o.spectrogram,sp=o.stack,op=o.std_mean,ip=o.topk,ap=o.window_function,lp=o.zeros,dp=o.zeros_like;export{C as ASTFeatureExtractor,P as ASTForAudioClassification,S as ASTModel,E as ASTPreTrainedModel,F as AlbertForMaskedLM,A as AlbertForQuestionAnswering,I as AlbertForSequenceClassification,z as AlbertModel,L as AlbertPreTrainedModel,O as AlbertTokenizer,B as AudioClassificationPipeline,D as AutoConfig,N as AutoFeatureExtractor,R as AutoImageProcessor,j as AutoModel,V as AutoModelForAudioClassification,G as AutoModelForAudioFrameClassification,U as AutoModelForCTC,q as AutoModelForCausalLM,W as AutoModelForDepthEstimation,H as AutoModelForDocumentQuestionAnswering,X as AutoModelForImageClassification,Q as AutoModelForImageFeatureExtraction,K as AutoModelForImageMatting,Y as AutoModelForImageSegmentation,J as AutoModelForImageToImage,Z as AutoModelForMaskGeneration,ee as AutoModelForMaskedLM,te as AutoModelForNormalEstimation,ne as AutoModelForObjectDetection,re as AutoModelForPoseEstimation,se as AutoModelForQuestionAnswering,oe as AutoModelForSemanticSegmentation,ie as AutoModelForSeq2SeqLM,ae as AutoModelForSequenceClassification,le as AutoModelForSpeechSeq2Seq,de as AutoModelForTextToSpectrogram,ue as AutoModelForTextToWaveform,ce as AutoModelForTokenClassification,pe as AutoModelForUniversalSegmentation,he as AutoModelForVision2Seq,me as AutoModelForXVector,fe as AutoModelForZeroShotObjectDetection,ge as AutoProcessor,_e as AutoTokenizer,we as AutomaticSpeechRecognitionPipeline,ye as BartForConditionalGeneration,be as BartForSequenceClassification,ve as BartModel,xe as BartPretrainedModel,Me as BartTokenizer,Te as BaseModelOutput,ke as BaseStreamer,$e as BeitFeatureExtractor,Ce as BeitForImageClassification,Pe as BeitModel,Se as BeitPreTrainedModel,Ee as BertForMaskedLM,Fe as BertForQuestionAnswering,Ae as BertForSequenceClassification,Ie as BertForTokenClassification,ze as BertModel,Le as BertPreTrainedModel,Oe as BertTokenizer,Be as BitImageProcessor,De as BlenderbotForConditionalGeneration,Ne as BlenderbotModel,Re as BlenderbotPreTrainedModel,je as BlenderbotSmallForConditionalGeneration,Ve as BlenderbotSmallModel,Ge as BlenderbotSmallPreTrainedModel,Ue as BlenderbotSmallTokenizer,qe as BlenderbotTokenizer,We as BloomForCausalLM,He as BloomModel,Xe as BloomPreTrainedModel,Qe as BloomTokenizer,Ke as CLIPFeatureExtractor,Ye as CLIPImageProcessor,Je as CLIPModel,Ze as CLIPPreTrainedModel,et as CLIPSegForImageSegmentation,tt as CLIPSegModel,nt as CLIPSegPreTrainedModel,rt as CLIPTextModel,st as CLIPTextModelWithProjection,ot as CLIPTokenizer,it as CLIPVisionModel,at as CLIPVisionModelWithProjection,lt as CamembertForMaskedLM,dt as CamembertForQuestionAnswering,ut as CamembertForSequenceClassification,ct as CamembertForTokenClassification,pt as CamembertModel,ht as CamembertPreTrainedModel,mt as CamembertTokenizer,ft as CausalLMOutput,gt as CausalLMOutputWithPast,_t as ChineseCLIPFeatureExtractor,wt as ChineseCLIPModel,yt as ChineseCLIPPreTrainedModel,bt as ClapAudioModelWithProjection,vt as ClapFeatureExtractor,xt as ClapModel,Mt as ClapPreTrainedModel,Tt as ClapTextModelWithProjection,kt as ClassifierFreeGuidanceLogitsProcessor,$t as CodeGenForCausalLM,Ct as CodeGenModel,Pt as CodeGenPreTrainedModel,St as CodeGenTokenizer,Et as CodeLlamaTokenizer,Ft as CohereForCausalLM,At as CohereModel,It as CoherePreTrainedModel,zt as CohereTokenizer,Lt as ConvBertForMaskedLM,Ot as ConvBertForQuestionAnswering,Bt as ConvBertForSequenceClassification,Dt as ConvBertForTokenClassification,Nt as ConvBertModel,Rt as ConvBertPreTrainedModel,jt as ConvBertTokenizer,Vt as ConvNextFeatureExtractor,Gt as ConvNextForImageClassification,Ut as ConvNextImageProcessor,qt as ConvNextModel,Wt as ConvNextPreTrainedModel,Ht as ConvNextV2ForImageClassification,Xt as ConvNextV2Model,Qt as ConvNextV2PreTrainedModel,Kt as DPTFeatureExtractor,Yt as DPTForDepthEstimation,Jt as DPTImageProcessor,Zt as DPTModel,en as DPTPreTrainedModel,tn as DebertaForMaskedLM,nn as DebertaForQuestionAnswering,rn as DebertaForSequenceClassification,sn as DebertaForTokenClassification,on as DebertaModel,an as DebertaPreTrainedModel,ln as DebertaTokenizer,dn as DebertaV2ForMaskedLM,un as DebertaV2ForQuestionAnswering,cn as DebertaV2ForSequenceClassification,pn as DebertaV2ForTokenClassification,hn as DebertaV2Model,mn as DebertaV2PreTrainedModel,fn as DebertaV2Tokenizer,gn as DecisionTransformerModel,_n as DecisionTransformerPreTrainedModel,wn as DeiTFeatureExtractor,yn as DeiTForImageClassification,bn as DeiTImageProcessor,vn as DeiTModel,xn as DeiTPreTrainedModel,Mn as DepthAnythingForDepthEstimation,Tn as DepthAnythingPreTrainedModel,kn as DepthEstimationPipeline,$n as DepthProForDepthEstimation,Cn as DepthProPreTrainedModel,Pn as DetrFeatureExtractor,Sn as DetrForObjectDetection,En as DetrForSegmentation,Fn as DetrImageProcessor,An as DetrModel,In as DetrObjectDetectionOutput,zn as DetrPreTrainedModel,Ln as DetrSegmentationOutput,On as Dinov2ForImageClassification,Bn as Dinov2Model,Dn as Dinov2PreTrainedModel,Nn as DistilBertForMaskedLM,Rn as DistilBertForQuestionAnswering,jn as DistilBertForSequenceClassification,Vn as DistilBertForTokenClassification,Gn as DistilBertModel,Un as DistilBertPreTrainedModel,qn as DistilBertTokenizer,Wn as DocumentQuestionAnsweringPipeline,Hn as DonutFeatureExtractor,Xn as DonutImageProcessor,Qn as DonutSwinModel,Kn as DonutSwinPreTrainedModel,Yn as EfficientNetForImageClassification,Jn as EfficientNetImageProcessor,Zn as EfficientNetModel,er as EfficientNetPreTrainedModel,tr as ElectraForMaskedLM,nr as ElectraForQuestionAnswering,rr as ElectraForSequenceClassification,sr as ElectraForTokenClassification,or as ElectraModel,ir as ElectraPreTrainedModel,ar as ElectraTokenizer,lr as EosTokenCriteria,dr as EsmForMaskedLM,ur as EsmForSequenceClassification,cr as EsmForTokenClassification,pr as EsmModel,hr as EsmPreTrainedModel,mr as EsmTokenizer,fr as FFT,gr as FalconForCausalLM,_r as FalconModel,wr as FalconPreTrainedModel,yr as FalconTokenizer,br as FastViTForImageClassification,vr as FastViTModel,xr as FastViTPreTrainedModel,Mr as FeatureExtractionPipeline,Tr as FeatureExtractor,kr as FillMaskPipeline,$r as Florence2ForConditionalGeneration,Cr as Florence2PreTrainedModel,Pr as Florence2Processor,Sr as ForcedBOSTokenLogitsProcessor,Er as ForcedEOSTokenLogitsProcessor,Fr as GLPNFeatureExtractor,Ar as GLPNForDepthEstimation,Ir as GLPNModel,zr as GLPNPreTrainedModel,Lr as GPT2LMHeadModel,Or as GPT2Model,Br as GPT2PreTrainedModel,Dr as GPT2Tokenizer,Nr as GPTBigCodeForCausalLM,Rr as GPTBigCodeModel,jr as GPTBigCodePreTrainedModel,Vr as GPTJForCausalLM,Gr as GPTJModel,Ur as GPTJPreTrainedModel,qr as GPTNeoForCausalLM,Wr as GPTNeoModel,Hr as GPTNeoPreTrainedModel,Xr as GPTNeoXForCausalLM,Qr as GPTNeoXModel,Kr as GPTNeoXPreTrainedModel,Yr as GPTNeoXTokenizer,Jr as Gemma2ForCausalLM,Zr as Gemma2Model,es as Gemma2PreTrainedModel,ts as GemmaForCausalLM,ns as GemmaModel,rs as GemmaPreTrainedModel,ss as GemmaTokenizer,os as GraniteForCausalLM,is as GraniteModel,as as GranitePreTrainedModel,ls as Grok1Tokenizer,ds as GroupViTModel,us as GroupViTPreTrainedModel,cs as HerbertTokenizer,ps as HieraForImageClassification,hs as HieraModel,ms as HieraPreTrainedModel,fs as HubertForCTC,gs as HubertForSequenceClassification,_s as HubertModel,ws as HubertPreTrainedModel,ys as Idefics3ForConditionalGeneration,bs as Idefics3ImageProcessor,vs as Idefics3PreTrainedModel,xs as Idefics3Processor,Ms as ImageClassificationPipeline,Ts as ImageFeatureExtractionPipeline,ks as ImageFeatureExtractor,$s as ImageMattingOutput,Cs as ImageProcessor,Ps as ImageSegmentationPipeline,Ss as ImageToImagePipeline,Es as ImageToTextPipeline,Fs as InterruptableStoppingCriteria,As as JAISLMHeadModel,Is as JAISModel,zs as JAISPreTrainedModel,Ls as JinaCLIPImageProcessor,Os as JinaCLIPModel,Bs as JinaCLIPPreTrainedModel,Ds as JinaCLIPProcessor,Ns as JinaCLIPTextModel,Rs as JinaCLIPVisionModel,js as LlamaForCausalLM,Vs as LlamaModel,Gs as LlamaPreTrainedModel,Us as LlamaTokenizer,qs as LlavaForConditionalGeneration,Ws as LlavaOnevisionForConditionalGeneration,Hs as LlavaOnevisionImageProcessor,Xs as LlavaPreTrainedModel,Qs as LogitsProcessor,Ks as LogitsProcessorList,Ys as LogitsWarper,Js as LongT5ForConditionalGeneration,Zs as LongT5Model,eo as LongT5PreTrainedModel,to as M2M100ForConditionalGeneration,no as M2M100Model,ro as M2M100PreTrainedModel,so as M2M100Tokenizer,oo as MBart50Tokenizer,io as MBartForCausalLM,ao as MBartForConditionalGeneration,lo as MBartForSequenceClassification,uo as MBartModel,co as MBartPreTrainedModel,po as MBartTokenizer,ho as MPNetForMaskedLM,mo as MPNetForQuestionAnswering,fo as MPNetForSequenceClassification,go as MPNetForTokenClassification,_o as MPNetModel,wo as MPNetPreTrainedModel,yo as MPNetTokenizer,bo as MT5ForConditionalGeneration,vo as MT5Model,xo as MT5PreTrainedModel,Mo as MarianMTModel,To as MarianModel,ko as MarianPreTrainedModel,$o as MarianTokenizer,Co as Mask2FormerImageProcessor,Po as MaskFormerFeatureExtractor,So as MaskFormerForInstanceSegmentation,Eo as MaskFormerImageProcessor,Fo as MaskFormerModel,Ao as MaskFormerPreTrainedModel,Io as MaskedLMOutput,zo as MaxLengthCriteria,Lo as MgpstrForSceneTextRecognition,Oo as MgpstrModelOutput,Bo as MgpstrPreTrainedModel,Do as MgpstrProcessor,No as MgpstrTokenizer,Ro as MinLengthLogitsProcessor,jo as MinNewTokensLengthLogitsProcessor,Vo as MistralForCausalLM,Go as MistralModel,Uo as MistralPreTrainedModel,qo as MobileBertForMaskedLM,Wo as MobileBertForQuestionAnswering,Ho as MobileBertForSequenceClassification,Xo as MobileBertModel,Qo as MobileBertPreTrainedModel,Ko as MobileBertTokenizer,Yo as MobileLLMForCausalLM,Jo as MobileLLMModel,Zo as MobileLLMPreTrainedModel,ei as MobileNetV1FeatureExtractor,ti as MobileNetV1ForImageClassification,ni as MobileNetV1ImageProcessor,ri as MobileNetV1Model,si as MobileNetV1PreTrainedModel,oi as MobileNetV2FeatureExtractor,ii as MobileNetV2ForImageClassification,ai as MobileNetV2ImageProcessor,li as MobileNetV2Model,di as MobileNetV2PreTrainedModel,ui as MobileNetV3FeatureExtractor,ci as MobileNetV3ForImageClassification,pi as MobileNetV3ImageProcessor,hi as MobileNetV3Model,mi as MobileNetV3PreTrainedModel,fi as MobileNetV4FeatureExtractor,gi as MobileNetV4ForImageClassification,_i as MobileNetV4ImageProcessor,wi as MobileNetV4Model,yi as MobileNetV4PreTrainedModel,bi as MobileViTFeatureExtractor,vi as MobileViTForImageClassification,xi as MobileViTImageProcessor,Mi as MobileViTModel,Ti as MobileViTPreTrainedModel,ki as MobileViTV2ForImageClassification,$i as MobileViTV2Model,Ci as MobileViTV2PreTrainedModel,Pi as ModelOutput,Si as Moondream1ForConditionalGeneration,Ei as MptForCausalLM,Fi as MptModel,Ai as MptPreTrainedModel,Ii as MultiModalityCausalLM,zi as MultiModalityPreTrainedModel,Li as MusicgenForCausalLM,Oi as MusicgenForConditionalGeneration,Bi as MusicgenModel,Di as MusicgenPreTrainedModel,Ni as NllbTokenizer,Ri as NoBadWordsLogitsProcessor,ji as NoRepeatNGramLogitsProcessor,Vi as NomicBertModel,Gi as NomicBertPreTrainedModel,Ui as NougatImageProcessor,qi as NougatTokenizer,Wi as OPTForCausalLM,Hi as OPTModel,Xi as OPTPreTrainedModel,Qi as ObjectDetectionPipeline,Ki as OlmoForCausalLM,Yi as OlmoModel,Ji as OlmoPreTrainedModel,Zi as OpenELMForCausalLM,ea as OpenELMModel,ta as OpenELMPreTrainedModel,na as OwlViTFeatureExtractor,ra as OwlViTForObjectDetection,sa as OwlViTImageProcessor,oa as OwlViTModel,ia as OwlViTPreTrainedModel,aa as OwlViTProcessor,la as Owlv2ForObjectDetection,da as Owlv2ImageProcessor,ua as Owlv2Model,ca as Owlv2PreTrainedModel,pa as PatchTSMixerForPrediction,ha as PatchTSMixerModel,ma as PatchTSMixerPreTrainedModel,fa as PatchTSTForPrediction,ga as PatchTSTModel,_a as PatchTSTPreTrainedModel,wa as Phi3ForCausalLM,ya as Phi3Model,ba as Phi3PreTrainedModel,va as PhiForCausalLM,xa as PhiModel,Ma as PhiPreTrainedModel,Ta as Pipeline,ka as PreTrainedModel,$a as PreTrainedTokenizer,Ca as PretrainedConfig,Pa as PretrainedMixin,Sa as Processor,Ea as PvtForImageClassification,Fa as PvtImageProcessor,Aa as PvtModel,Ia as PvtPreTrainedModel,za as PyAnnoteFeatureExtractor,La as PyAnnoteForAudioFrameClassification,Oa as PyAnnoteModel,Ba as PyAnnotePreTrainedModel,Da as PyAnnoteProcessor,Na as QuestionAnsweringModelOutput,Ra as QuestionAnsweringPipeline,ja as Qwen2ForCausalLM,Va as Qwen2Model,Ga as Qwen2PreTrainedModel,Ua as Qwen2Tokenizer,qa as Qwen2VLForConditionalGeneration,Wa as Qwen2VLImageProcessor,Ha as Qwen2VLPreTrainedModel,Xa as Qwen2VLProcessor,Qa as RTDetrForObjectDetection,Ka as RTDetrImageProcessor,Ya as RTDetrModel,Ja as RTDetrObjectDetectionOutput,Za as RTDetrPreTrainedModel,el as RawImage,tl as RepetitionPenaltyLogitsProcessor,nl as ResNetForImageClassification,rl as ResNetModel,sl as ResNetPreTrainedModel,ol as RoFormerForMaskedLM,il as RoFormerForQuestionAnswering,al as RoFormerForSequenceClassification,ll as RoFormerForTokenClassification,dl as RoFormerModel,ul as RoFormerPreTrainedModel,cl as RoFormerTokenizer,pl as RobertaForMaskedLM,hl as RobertaForQuestionAnswering,ml as RobertaForSequenceClassification,fl as RobertaForTokenClassification,gl as RobertaModel,_l as RobertaPreTrainedModel,wl as RobertaTokenizer,yl as SamImageProcessor,bl as SamImageSegmentationOutput,vl as SamModel,xl as SamPreTrainedModel,Ml as SamProcessor,Tl as SapiensForDepthEstimation,kl as SapiensForNormalEstimation,$l as SapiensForSemanticSegmentation,Cl as SapiensPreTrainedModel,Pl as SeamlessM4TFeatureExtractor,Sl as SegformerFeatureExtractor,El as SegformerForImageClassification,Fl as SegformerForSemanticSegmentation,Al as SegformerImageProcessor,Il as SegformerModel,zl as SegformerPreTrainedModel,Ll as Seq2SeqLMOutput,Ol as SequenceClassifierOutput,Bl as SiglipImageProcessor,Dl as SiglipModel,Nl as SiglipPreTrainedModel,Rl as SiglipTextModel,jl as SiglipTokenizer,Vl as SiglipVisionModel,Gl as SpeechT5FeatureExtractor,Ul as SpeechT5ForSpeechToText,ql as SpeechT5ForTextToSpeech,Wl as SpeechT5HifiGan,Hl as SpeechT5Model,Xl as SpeechT5PreTrainedModel,Ql as SpeechT5Processor,Kl as SpeechT5Tokenizer,Yl as SqueezeBertForMaskedLM,Jl as SqueezeBertForQuestionAnswering,Zl as SqueezeBertForSequenceClassification,ed as SqueezeBertModel,td as SqueezeBertPreTrainedModel,nd as SqueezeBertTokenizer,rd as StableLmForCausalLM,sd as StableLmModel,od as StableLmPreTrainedModel,id as Starcoder2ForCausalLM,ad as Starcoder2Model,ld as Starcoder2PreTrainedModel,dd as StoppingCriteria,ud as StoppingCriteriaList,cd as SummarizationPipeline,pd as SuppressTokensAtBeginLogitsProcessor,hd as Swin2SRForImageSuperResolution,md as Swin2SRImageProcessor,fd as Swin2SRModel,gd as Swin2SRPreTrainedModel,_d as SwinForImageClassification,wd as SwinModel,yd as SwinPreTrainedModel,bd as T5ForConditionalGeneration,vd as T5Model,xd as T5PreTrainedModel,Md as T5Tokenizer,Td as TableTransformerForObjectDetection,kd as TableTransformerModel,$d as TableTransformerObjectDetectionOutput,Cd as TableTransformerPreTrainedModel,Pd as TemperatureLogitsWarper,Sd as Tensor,Ed as Text2TextGenerationPipeline,Fd as TextClassificationPipeline,Ad as TextGenerationPipeline,Id as TextStreamer,zd as TextToAudioPipeline,Ld as TokenClassificationPipeline,Od as TokenClassifierOutput,Bd as TokenizerModel,Dd as TopKLogitsWarper,Nd as TopPLogitsWarper,Rd as TrOCRForCausalLM,jd as TrOCRPreTrainedModel,Vd as TranslationPipeline,Gd as UniSpeechForCTC,Ud as UniSpeechForSequenceClassification,qd as UniSpeechModel,Wd as UniSpeechPreTrainedModel,Hd as UniSpeechSatForAudioFrameClassification,Xd as UniSpeechSatForCTC,Qd as UniSpeechSatForSequenceClassification,Kd as UniSpeechSatModel,Yd as UniSpeechSatPreTrainedModel,Jd as VLChatProcessor,Zd as VLMImageProcessor,eu as ViTFeatureExtractor,tu as ViTForImageClassification,nu as ViTImageProcessor,ru as ViTMAEModel,su as ViTMAEPreTrainedModel,ou as ViTMSNForImageClassification,iu as ViTMSNModel,au as ViTMSNPreTrainedModel,lu as ViTModel,du as ViTPreTrainedModel,uu as VisionEncoderDecoderModel,cu as VitMatteForImageMatting,pu as VitMatteImageProcessor,hu as VitMattePreTrainedModel,mu as VitPoseForPoseEstimation,fu as VitPoseImageProcessor,gu as VitPosePreTrainedModel,_u as VitsModel,wu as VitsModelOutput,yu as VitsPreTrainedModel,bu as VitsTokenizer,vu as Wav2Vec2BertForCTC,xu as Wav2Vec2BertForSequenceClassification,Mu as Wav2Vec2BertModel,Tu as Wav2Vec2BertPreTrainedModel,ku as Wav2Vec2CTCTokenizer,$u as Wav2Vec2FeatureExtractor,Cu as Wav2Vec2ForAudioFrameClassification,Pu as Wav2Vec2ForCTC,Su as Wav2Vec2ForSequenceClassification,Eu as Wav2Vec2Model,Fu as Wav2Vec2PreTrainedModel,Au as Wav2Vec2ProcessorWithLM,Iu as WavLMForAudioFrameClassification,zu as WavLMForCTC,Lu as WavLMForSequenceClassification,Ou as WavLMForXVector,Bu as WavLMModel,Du as WavLMPreTrainedModel,Nu as WeSpeakerFeatureExtractor,Ru as WeSpeakerResNetModel,ju as WeSpeakerResNetPreTrainedModel,Vu as WhisperFeatureExtractor,Gu as WhisperForConditionalGeneration,Uu as WhisperModel,qu as WhisperPreTrainedModel,Wu as WhisperProcessor,Hu as WhisperTextStreamer,Xu as WhisperTimeStampLogitsProcessor,Qu as WhisperTokenizer,Ku as XLMForQuestionAnswering,Yu as XLMForSequenceClassification,Ju as XLMForTokenClassification,Zu as XLMModel,ec as XLMPreTrainedModel,tc as XLMRobertaForMaskedLM,nc as XLMRobertaForQuestionAnswering,rc as XLMRobertaForSequenceClassification,sc as XLMRobertaForTokenClassification,oc as XLMRobertaModel,ic as XLMRobertaPreTrainedModel,ac as XLMRobertaTokenizer,lc as XLMTokenizer,dc as XLMWithLMHeadModel,uc as XVectorOutput,cc as YolosFeatureExtractor,pc as YolosForObjectDetection,hc as YolosImageProcessor,mc as YolosModel,fc as YolosObjectDetectionOutput,gc as YolosPreTrainedModel,_c as ZeroShotAudioClassificationPipeline,wc as ZeroShotClassificationPipeline,yc as ZeroShotImageClassificationPipeline,bc as ZeroShotObjectDetectionPipeline,vc as bankers_round,xc as cat,Mc as cos_sim,Tc as dot,kc as dynamic_time_warping,$c as env,Cc as full,Pc as full_like,Sc as getKeyValueShapes,Ec as hamming,Fc as hanning,Ac as interpolate,Ic as interpolate_4d,zc as interpolate_data,Lc as is_chinese_char,Oc as layer_norm,Bc as load_image,Dc as log_softmax,Nc as magnitude,Rc as matmul,jc as max,Vc as mean,Gc as mean_pooling,Uc as medianFilter,qc as mel_filter_bank,Wc as min,Hc as ones,Xc as ones_like,Qc as permute,Kc as permute_data,Yc as pipeline,Jc as quantize_embeddings,Zc as read_audio,ep as rfft,tp as round,np as softmax,rp as spectrogram,sp as stack,op as std_mean,ip as topk,ap as window_function,lp as zeros,dp as zeros_like};
  //# sourceMappingURL=transformers.min.js.map